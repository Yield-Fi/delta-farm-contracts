{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x6d3849f576623647dc393187A670aD1109bE9E3B",
      "txHash": "0xd576387b7fb09bee6b275d68e241c47eb78aa2b5f9121a6b56ebcbbe9d2d4689",
      "kind": "uups"
    },
    {
      "address": "0x4429bd9a1B13317BdC9026804CEdD204660A0115",
      "txHash": "0x890cab56ceac4dd67b308127323128d677f949dfef0b0f724fa952032a090c43",
      "kind": "uups"
    },
    {
      "address": "0x35A8ddff5290e75DE118E810D4b9D550aB8a9b25",
      "txHash": "0xfe54b2a44cea4e46eea3d4d5ace1d86a74437b3355748d274e58e3cc36c8324d",
      "kind": "uups"
    },
    {
      "address": "0xfa41a35c7Cd063e7239d1cB4522C8EE7E4f05693",
      "txHash": "0xd602bc326f7ce9769625322fd28589fc8f80d04f982ebb352ef088eacecf9b01",
      "kind": "uups"
    },
    {
      "address": "0x95909B339fbCeC5d69391EE8c9d03aF29EC338f0",
      "txHash": "0x4886ce2b649889b8fe3a53166deb19ba62f5f93ef74e33d45bdb458639f916a6",
      "kind": "uups"
    },
    {
      "address": "0x666F76F863C646a6974dB0f06a09979cD1CE3293",
      "txHash": "0xd38377b29cf550cc07ff4b3dd62ab865bc7c6c75c1603d25085d2a9fafddb6ba",
      "kind": "uups"
    },
    {
      "address": "0xCeb8db589b9D3924090b4E62b571E16E9abddA85",
      "txHash": "0x24d03c7bda7c6651c6e532096cde80926197c5f050a5bc73001b5a9868afaf49",
      "kind": "uups"
    },
    {
      "address": "0x6e41E221Dd0718ebC5504Ff1cdDbC60B6AFFc626",
      "txHash": "0xd034e28928b5c1fb68d7a4ef09c93296333455774ba1d39dd366240b478b7d03",
      "kind": "uups"
    },
    {
      "address": "0xEA17603C4bcDc0FE006B9F4c1dB008903F93Bb17",
      "txHash": "0xdd1a260afd2d7fb69880d61efa0af1d12e650eb27c6b60e6ca0366bad50ce2d8",
      "kind": "uups"
    },
    {
      "address": "0x91AC21a2d2c604210aBF9E46Ce67a74424567b31",
      "txHash": "0x2403c2afa5907419ed5bd13014faee8f9142e95aab56b03f569a991abed454c5",
      "kind": "uups"
    },
    {
      "address": "0xaEB8ccA4B5Dd3E8F16cb0CdD53fc949efb960BA7",
      "txHash": "0x23f147f4f573c6f7422bbc8319e66fca51c316c987830cfa739eaf64894a153e",
      "kind": "uups"
    },
    {
      "address": "0x49D5cCd9f978712b53d3F7f1B54bEb5F0C60fF7D",
      "txHash": "0xf36dee7f3d7346cb07fffb17157732018a2f91bca74e6762982e6acedc7fef8d",
      "kind": "uups"
    },
    {
      "address": "0x44F7018deE64221FA9D8a06B8024e6319c1e94FB",
      "txHash": "0xa916b3f134843a195abd6b1077b326d313b2dfb7272c06f2358a128bdaf7db2b",
      "kind": "uups"
    },
    {
      "address": "0x990AcD6aA0A36afCCD55acCCC1273cE80c8e3253",
      "txHash": "0xfe27693dd757023a7aaaf1cf2c0d62dfd18dfa47bf0c955eb80b46688b544209",
      "kind": "uups"
    },
    {
      "address": "0x73d6950d37Cf17f6d38da5291FC2783EE7d2431b",
      "txHash": "0x34fa6ab551ab6a10bc706c7fd7ac64b14992546849cdd18fa4e9a7ce3f1dc0f8",
      "kind": "uups"
    },
    {
      "address": "0x85ff4165f2ce8dbB342461279277B3acD71BE713",
      "txHash": "0x70424b74f124dbae72a95595429c244af4cb9455d8732f5783fe8c0e96584817",
      "kind": "uups"
    },
    {
      "address": "0xF0098232a9a9caA599F1664b9090eDBaf11d4357",
      "txHash": "0x059d38f78608246ca863440cd065df23e31afe4de008e0ea86a594ddd3fe6bb1",
      "kind": "uups"
    }
  ],
  "impls": {
    "18138ea23e0a19892a84b500349ad055ce72d8f002d8a8793d13e87ebd7f2a1a": {
      "address": "0x3bF09f22b07a2210a40582740e921092064DeD25",
      "txHash": "0xb58843c1e362cf111bc4b241e80798272f9b130ea0d1b3ae0ae93575f96cfb25",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:64"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PancakeswapStrategyAddBaseTokenOnly",
            "label": "factory",
            "type": "t_contract(IPancakeFactory)8693",
            "src": "contracts\\strategies\\pancake\\PancakeswapStrategyAddBaseTokenOnly.sol:29"
          },
          {
            "contract": "PancakeswapStrategyAddBaseTokenOnly",
            "label": "router",
            "type": "t_contract(IPancakeRouterV2)9395",
            "src": "contracts\\strategies\\pancake\\PancakeswapStrategyAddBaseTokenOnly.sol:30"
          }
        ],
        "types": {
          "t_contract(IPancakeFactory)8693": {
            "label": "contract IPancakeFactory"
          },
          "t_contract(IPancakeRouterV2)9395": {
            "label": "contract IPancakeRouterV2"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "daeae9354fdf207b5966ea3ef25a112781479cafdcdd71ab58fb6172e83d35e2": {
      "address": "0x149049aA9A225671d0014E1Cb9eF8c5077e615a4",
      "txHash": "0x7cea0741dd98a0e068360bea1b9905f86887d696429ef37291688fab37b6350a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:64"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PancakeswapStrategyLiquidate",
            "label": "factory",
            "type": "t_contract(IPancakeFactory)1134",
            "src": "contracts\\strategies\\pancake\\PancakeswapStrategyLiquidate.sol:25"
          },
          {
            "contract": "PancakeswapStrategyLiquidate",
            "label": "router",
            "type": "t_contract(IPancakeRouterV2)1766",
            "src": "contracts\\strategies\\pancake\\PancakeswapStrategyLiquidate.sol:26"
          }
        ],
        "types": {
          "t_contract(IPancakeFactory)1134": {
            "label": "contract IPancakeFactory"
          },
          "t_contract(IPancakeRouterV2)1766": {
            "label": "contract IPancakeRouterV2"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "29df5c990890486da3f3df33db7fc586b5b73c06ef0fea7868a065438c4bb738": {
      "address": "0xDfF014E3e603e7D1d3939AceC2A1C68f9a34AE6f",
      "txHash": "0xe7bbae57167feed8a6437f82b2d810a8daf66f2003eb19ea73431589351a1860",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:64"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "WNativeRelayer",
            "label": "wnative",
            "type": "t_address",
            "src": "contracts\\WNativeRelayer.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f2daa9208c161a83611206cfd2c35e4b89c66fed4e3c4a6e92de524d320b7637": {
      "address": "0x635b926118D0ccA67B620f1999B3d33F15e092A8",
      "txHash": "0xde134424f9be46e5254fffa9bda672ce5d12443d0acf3392f8d70fb90ff05ea6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:64"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "VaultConfig",
            "label": "workers",
            "type": "t_mapping(t_address,t_contract(IWorkerConfig)3714)",
            "src": "contracts\\VaultConfig.sol:51"
          },
          {
            "contract": "VaultConfig",
            "label": "nativeTokenAddr",
            "type": "t_address",
            "src": "contracts\\VaultConfig.sol:53"
          },
          {
            "contract": "VaultConfig",
            "label": "wNativeRelayer",
            "type": "t_address",
            "src": "contracts\\VaultConfig.sol:55"
          },
          {
            "contract": "VaultConfig",
            "label": "whitelistedCallers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\VaultConfig.sol:57"
          },
          {
            "contract": "VaultConfig",
            "label": "treasury",
            "type": "t_address",
            "src": "contracts\\VaultConfig.sol:59"
          },
          {
            "contract": "VaultConfig",
            "label": "approvedAddStrategies",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\VaultConfig.sol:61"
          },
          {
            "contract": "VaultConfig",
            "label": "whitelistedLiquidators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\VaultConfig.sol:63"
          }
        ],
        "types": {
          "t_mapping(t_address,t_contract(IWorkerConfig)3714)": {
            "label": "mapping(address => contract IWorkerConfig)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IWorkerConfig)3714": {
            "label": "contract IWorkerConfig"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "08bdbe1f844f61b6e0e61c7af802306a07fba32434fb61212fa9d9396a486ee2": {
      "address": "0x84788d3ffc6563B1b7e7659AB2e0b5Ce00507524",
      "txHash": "0x07a23d9d8200e31b12bbb4b7e44142eac22deb43a67e70b56bbf170f177f7fe7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:64"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:361"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "Vault",
            "label": "_IN_EXEC_LOCK",
            "type": "t_uint256",
            "src": "contracts\\Vault.sol:43"
          },
          {
            "contract": "Vault",
            "label": "POSITION_ID",
            "type": "t_uint256",
            "src": "contracts\\Vault.sol:44"
          },
          {
            "contract": "Vault",
            "label": "STRATEGY",
            "type": "t_address",
            "src": "contracts\\Vault.sol:45"
          },
          {
            "contract": "Vault",
            "label": "token",
            "type": "t_address",
            "src": "contracts\\Vault.sol:49"
          },
          {
            "contract": "Vault",
            "label": "config",
            "type": "t_contract(IVaultConfig)3555",
            "src": "contracts\\Vault.sol:56"
          },
          {
            "contract": "Vault",
            "label": "positions",
            "type": "t_mapping(t_uint256,t_struct(Position)2419_storage)",
            "src": "contracts\\Vault.sol:57"
          },
          {
            "contract": "Vault",
            "label": "nextPositionID",
            "type": "t_uint256",
            "src": "contracts\\Vault.sol:58"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IVaultConfig)3555": {
            "label": "contract IVaultConfig"
          },
          "t_mapping(t_uint256,t_struct(Position)2419_storage)": {
            "label": "mapping(uint256 => struct Vault.Position)"
          },
          "t_struct(Position)2419_storage": {
            "label": "struct Vault.Position",
            "members": [
              {
                "label": "worker",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "1a8868190bce6322f9348c576fd51b4e710182632afdf82f0e33962d24a06964": {
      "address": "0xd0D42D80081bD2df823fecAB2192d66F7209C34C",
      "txHash": "0xc6a5cc32a9b522b5a3aa5b3db61b733a7725ebc27c6038d7662943a550731b97",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:64"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PancakeswapWorker2",
            "label": "pool",
            "type": "t_struct(Pool)2323_storage",
            "src": "contracts\\workers\\PancakeswapWorker2.sol:34"
          },
          {
            "contract": "PancakeswapWorker2",
            "label": "vaultAddress",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker2.sol:36"
          },
          {
            "contract": "PancakeswapWorker2",
            "label": "baseToken",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker2.sol:37"
          },
          {
            "contract": "PancakeswapWorker2",
            "label": "cake",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker2.sol:38"
          },
          {
            "contract": "PancakeswapWorker2",
            "label": "reinvestStrategy",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker2.sol:39"
          },
          {
            "contract": "PancakeswapWorker2",
            "label": "WBNB",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker2.sol:40"
          },
          {
            "contract": "PancakeswapWorker2",
            "label": "masterChef",
            "type": "t_contract(IPancakeMasterChef)1453",
            "src": "contracts\\workers\\PancakeswapWorker2.sol:42"
          },
          {
            "contract": "PancakeswapWorker2",
            "label": "router",
            "type": "t_contract(IPancakeRouterV2)2085",
            "src": "contracts\\workers\\PancakeswapWorker2.sol:43"
          },
          {
            "contract": "PancakeswapWorker2",
            "label": "balances",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\workers\\PancakeswapWorker2.sol:45"
          },
          {
            "contract": "PancakeswapWorker2",
            "label": "totalBalance",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker2.sol:46"
          },
          {
            "contract": "PancakeswapWorker2",
            "label": "defiAddress",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker2.sol:48"
          },
          {
            "contract": "PancakeswapWorker2",
            "label": "defiFeeBps",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker2.sol:49"
          },
          {
            "contract": "PancakeswapWorker2",
            "label": "clientAddress",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker2.sol:50"
          },
          {
            "contract": "PancakeswapWorker2",
            "label": "clientFeeBps",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker2.sol:51"
          },
          {
            "contract": "PancakeswapWorker2",
            "label": "reinvestThreshold",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker2.sol:52"
          }
        ],
        "types": {
          "t_struct(Pool)2323_storage": {
            "label": "struct PancakeswapWorker2.Pool",
            "members": [
              {
                "label": "lpToken",
                "type": "t_address"
              },
              {
                "label": "token0",
                "type": "t_address"
              },
              {
                "label": "token1",
                "type": "t_address"
              },
              {
                "label": "id",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IPancakeMasterChef)1453": {
            "label": "contract IPancakeMasterChef"
          },
          "t_contract(IPancakeRouterV2)2085": {
            "label": "contract IPancakeRouterV2"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "4f18a4fdf06845b375f87af901f9d305219f8a2f4267036f58350be382990b63": {
      "address": "0xE1474CB6F96E83b5b401DE415783c9A7792b15b2",
      "txHash": "0xb93fe45415eb67ae810baf3bcc3dd2a6fda92e0c4a651362bd0273dc82948ac6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:64"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:361"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "Vault",
            "label": "_IN_EXEC_LOCK",
            "type": "t_uint256",
            "src": "contracts\\Vault.sol:44"
          },
          {
            "contract": "Vault",
            "label": "POSITION_ID",
            "type": "t_uint256",
            "src": "contracts\\Vault.sol:45"
          },
          {
            "contract": "Vault",
            "label": "STRATEGY",
            "type": "t_address",
            "src": "contracts\\Vault.sol:46"
          },
          {
            "contract": "Vault",
            "label": "token",
            "type": "t_address",
            "src": "contracts\\Vault.sol:50"
          },
          {
            "contract": "Vault",
            "label": "config",
            "type": "t_contract(IVaultConfig)2800",
            "src": "contracts\\Vault.sol:57"
          },
          {
            "contract": "Vault",
            "label": "positions",
            "type": "t_mapping(t_uint256,t_struct(Position)2219_storage)",
            "src": "contracts\\Vault.sol:58"
          },
          {
            "contract": "Vault",
            "label": "nextPositionID",
            "type": "t_uint256",
            "src": "contracts\\Vault.sol:59"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IVaultConfig)2800": {
            "label": "contract IVaultConfig"
          },
          "t_mapping(t_uint256,t_struct(Position)2219_storage)": {
            "label": "mapping(uint256 => struct Vault.Position)"
          },
          "t_struct(Position)2219_storage": {
            "label": "struct Vault.Position",
            "members": [
              {
                "label": "worker",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c401e3a103a36f24529d5a09234882c99f5ceb5df7114485a624fdbacbb99714": {
      "address": "0x22c46bFe6e888f4CCEFAd71128443670FED137ea",
      "txHash": "0x4480c09a7f8d3e58607dd18d276f91e1a53dc9a7b2ca4896b0d09e28573cf017",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:64"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:361"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "Vault",
            "label": "_IN_EXEC_LOCK",
            "type": "t_uint256",
            "src": "contracts\\Vault.sol:44"
          },
          {
            "contract": "Vault",
            "label": "POSITION_ID",
            "type": "t_uint256",
            "src": "contracts\\Vault.sol:45"
          },
          {
            "contract": "Vault",
            "label": "STRATEGY",
            "type": "t_address",
            "src": "contracts\\Vault.sol:46"
          },
          {
            "contract": "Vault",
            "label": "token",
            "type": "t_address",
            "src": "contracts\\Vault.sol:50"
          },
          {
            "contract": "Vault",
            "label": "config",
            "type": "t_contract(IVaultConfig)2792",
            "src": "contracts\\Vault.sol:57"
          },
          {
            "contract": "Vault",
            "label": "positions",
            "type": "t_mapping(t_uint256,t_struct(Position)2219_storage)",
            "src": "contracts\\Vault.sol:58"
          },
          {
            "contract": "Vault",
            "label": "nextPositionID",
            "type": "t_uint256",
            "src": "contracts\\Vault.sol:59"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IVaultConfig)2792": {
            "label": "contract IVaultConfig"
          },
          "t_mapping(t_uint256,t_struct(Position)2219_storage)": {
            "label": "mapping(uint256 => struct Vault.Position)"
          },
          "t_struct(Position)2219_storage": {
            "label": "struct Vault.Position",
            "members": [
              {
                "label": "worker",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  }
}

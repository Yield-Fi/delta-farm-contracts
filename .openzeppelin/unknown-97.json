{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x58fcFD7d07748bc41dbFaB000742ceD489047B97",
    "txHash": "0x63a69e716fe389172c2e45b89894a30312ccc3a23ece4d9171763b6186139e47",
    "deployTransaction": {
      "hash": "0x63a69e716fe389172c2e45b89894a30312ccc3a23ece4d9171763b6186139e47",
      "type": 0,
      "accessList": null,
      "blockHash": null,
      "blockNumber": null,
      "transactionIndex": null,
      "confirmations": 0,
      "from": "0x07661882d1C4b7F703Ca0A8898afE4D402dFdeF2",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x02540be400"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x075da0"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 546,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0xb6c1ee2a80057ac55ec5887fde4dac82f1e820901716886a34a7cebb1ec95105",
      "s": "0x4ed788e0f1b6b6d70c09d924ef68e74a0607516c73bc5c768ef8c4f673f2ba58",
      "v": 230,
      "creates": "0x58fcFD7d07748bc41dbFaB000742ceD489047B97",
      "chainId": 97
    }
  },
  "proxies": [
    {
      "address": "0x42991Fad54cA10F0C0A57945991Bfba423F37249",
      "txHash": "0xab30af9c00fff9c28f62e8d1fcc93a85576bb161e8a281a5fca3a356210f4063",
      "kind": "transparent"
    },
    {
      "address": "0x795511BEdb51B1d28549896a4b5e5699579F1aEA",
      "txHash": "0x3231c66b7916155cad81917250b79fe1619e43f884ed2ce054a996f9bdf70443",
      "kind": "transparent"
    },
    {
      "address": "0x66194F8FFcA81c476554183F953089019936D9F0",
      "txHash": "0xe7d67c90044b261feeb6ba48ac7333cac7ba30fa0ca9f3c85d898b2f26e7b20e",
      "kind": "transparent"
    },
    {
      "address": "0xB6b260Cb62D87BEBf38871ed780B51203cB35d89",
      "txHash": "0xe898baa11764717b2371547f10b24db8f234d5e3c8e4a0dbfeb96bcbb64e49da",
      "kind": "transparent"
    },
    {
      "address": "0x62957B015e5389273c269afaf583b960Fb0Ef3FC",
      "txHash": "0x3f9d61d4807c5ce28819fb885b5b108466a6ce6ab09e2fbd5233b51c88b71d5d",
      "kind": "transparent"
    },
    {
      "address": "0xE5d0B7d609c057ad1CE2F27D49Aad80144936CA7",
      "txHash": "0x17b989881698d5f6a8293d281e8826dc9c733dd417c6defa5a606a1d03bba577",
      "kind": "transparent"
    },
    {
      "address": "0x5C024fEf8CFf1C154A5de991387cDaF98F3c7222",
      "txHash": "0x5c7820c38d2b9fb9daa773329f92682d4ca6efa1aacfa489e83d2c0ba31d08bf",
      "kind": "transparent"
    },
    {
      "address": "0x613F72801f2Ef7BC328e22753Ab7Da1866F02067",
      "txHash": "0x274a68553771296852eb2b24a3378a9126565fe1af5b7d68d54e60f9d8a05048",
      "kind": "transparent"
    },
    {
      "address": "0x097ED2FA662c5a58C81d767F15Bc16227DC55C8E",
      "txHash": "0xd4f319521fc4ea51d84ef3ec246d81c96ab59f7fb28c4baa8b098eadd2ff8a9d",
      "kind": "transparent"
    },
    {
      "address": "0x7084D729A4240F458167cE33e0329EA0d29c9D5a",
      "txHash": "0x95648b581777d3aec0e214b7bf68b76bf755dd7c5d7dc7cca7b5fde44b8b0a48",
      "kind": "transparent"
    },
    {
      "address": "0xAA4AAd87114948Aa160F0179568d26b454EdcC2C",
      "txHash": "0xadc3f1be7dd3f61966e0b45eca85db9df8619954b10fd55e7ba33b2b88ee1b4c",
      "kind": "transparent"
    },
    {
      "address": "0x55f4dd762D6f7557dd2e31728e748eED8AFcc188",
      "txHash": "0x69a28b500ece470e59919055c426c120945d392a3b90411959e46c09ebe3818f",
      "kind": "transparent"
    },
    {
      "address": "0x5Ce349eDB15922D78A3eE315C2d45F49C4DbFfE1",
      "txHash": "0xbdedd59c350671a3f6f58aa474a3dc6b2c0e65552a1f271a7a53be062eae4405",
      "kind": "transparent"
    },
    {
      "address": "0xcd27Bc932f87C76ff6249d1d96810bfa4608eF18",
      "txHash": "0x7d80a5f904dc5b5050c25f9f075d41ba8625bf9638cbdca034869627c01e0eea",
      "kind": "transparent"
    },
    {
      "address": "0x7145865A1F6DfcA9764718B36bf114d3aA6460e3",
      "txHash": "0x0690ecac957c5868a3205bdc9430a9ed4f55415b4bbf1fce5599750379705a1d",
      "kind": "transparent"
    },
    {
      "address": "0xc17ff9ff1f0CD69CBe42593A4fA314b56B5809B6",
      "txHash": "0x4aed7983e04764c281e8fc79bed0d8a13ab9528701119c6125b8726bae7d53cd",
      "kind": "transparent"
    },
    {
      "address": "0xf07a50fB889b968AB85A1EB022B830819E416D24",
      "txHash": "0x5a6b11948291474971c4c01457840e1be45ef931bb154b9153ec14659bd0cca0",
      "kind": "transparent"
    },
    {
      "address": "0xF2B51A4959e95c7fA59D1939640A10B53eeBedFB",
      "txHash": "0xa85805476a3b4ff81173f9dd35888c4233809858feb483d67546993f617539de",
      "kind": "transparent"
    },
    {
      "address": "0xd522802222EE597C6550E87472247A86769DABa9",
      "txHash": "0xa80f4bc0f550e88536dfe7e78bfe43e4c14180cd208fa575946861519b61c371",
      "kind": "transparent"
    },
    {
      "address": "0x1d4ee50C09599848c46EeD794eDB86BCEC8e4399",
      "txHash": "0x9f1ce3baf925213412e1581ba48b0b0f948767f0153284141334782a4e2f97e0",
      "kind": "transparent"
    }
  ],
  "impls": {
    "567d1fd4122a7469f19c7304ff9d3a77f91f61c566618599ffd99d2f3df3a2b1": {
      "address": "0x3c0A3E6200b429c66Eb685a3a99F9009cACb67Ec",
      "txHash": "0xc48834a18cf1837535b4c0e8b9fedd7481e539a9c6282ea41f68ac3a3d085353",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedClients",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\ProtocolManager.sol:77"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedVaults",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\ProtocolManager.sol:81"
          },
          {
            "contract": "ProtocolManager",
            "label": "tokenToVault",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts\\ProtocolManager.sol:84"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedVaultConfigs",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\ProtocolManager.sol:88"
          },
          {
            "contract": "ProtocolManager",
            "label": "checkIfApprovedBountyCollectors",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\ProtocolManager.sol:92"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedBountyCollectors",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\ProtocolManager.sol:96"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedStrategiesCheck",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\ProtocolManager.sol:99"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedStrategies",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\ProtocolManager.sol:103"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedNativeRelayer",
            "type": "t_address",
            "src": "contracts\\ProtocolManager.sol:106"
          },
          {
            "contract": "ProtocolManager",
            "label": "whitelistOperatorsList",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\ProtocolManager.sol:109"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedWorkers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\ProtocolManager.sol:112"
          },
          {
            "contract": "ProtocolManager",
            "label": "whitelistedOperators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\ProtocolManager.sol:116"
          },
          {
            "contract": "ProtocolManager",
            "label": "adminContract",
            "type": "t_address",
            "src": "contracts\\ProtocolManager.sol:119"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "aa5ea666875acb775b10a7c83895ca096f396a1e78efd5aedb08a8367acc5332": {
      "address": "0xB96041e2694B12de8BF47Be35430AD645B895D18",
      "txHash": "0x728636dc02db555459c888f03a0ca8cfe4bfdf210ebb93b0eabc54fc7aea2c51",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "FeeCollector",
            "label": "fees",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\FeeCollector.sol:37"
          },
          {
            "contract": "FeeCollector",
            "label": "_feeToken",
            "type": "t_address",
            "src": "contracts\\FeeCollector.sol:40"
          },
          {
            "contract": "FeeCollector",
            "label": "_feeThreshold",
            "type": "t_uint256",
            "src": "contracts\\FeeCollector.sol:41"
          },
          {
            "contract": "FeeCollector",
            "label": "protocolManager",
            "type": "t_contract(ProtocolManager)3919",
            "src": "contracts\\FeeCollector.sol:42"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(ProtocolManager)3919": {
            "label": "contract ProtocolManager"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7646539d4f3e83652e089ef96e4c99e6a7c2ffaba9d9ca3e3fd49a3cb3ad1680": {
      "address": "0x88C85b48066eCc590Cd7625Bb33229A0892B0154",
      "txHash": "0xff19d0e4b32f2e6135eb1906b1073b664cdf2a917e453c529141e9a621b5ff6d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "Admin",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)5480",
            "src": "contracts\\Admin.sol:35"
          },
          {
            "contract": "Admin",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)5320",
            "src": "contracts\\Admin.sol:36"
          }
        ],
        "types": {
          "t_contract(IProtocolManager)5480": {
            "label": "contract IProtocolManager"
          },
          "t_contract(IFeeCollector)5320": {
            "label": "contract IFeeCollector"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "170978604f49decbab927011c0f4c1ac8ec139d74ee1b8bf19a5216f5779bf35": {
      "address": "0xE00292216a1304B88a680c6BaE7f0ac70df2cd0a",
      "txHash": "0x9606a2e3c1dd930da0ee050b37f0569815736fc84f9da0cbea9eaa2609081cff",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "WrappedNativeTokenRelayer",
            "label": "wnative",
            "type": "t_address",
            "src": "contracts\\WrappedNativeTokenRelayer.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "cf20c521d9b8b91141ad3b7c9c1762f83c28df987ec624d67164e055c14b9071": {
      "address": "0xCA92ba1349b229d986a726283cDD834573F22c8F",
      "txHash": "0x3ef4f437003faca2db7e377b095050fb2c71e12fcd39cd622a371142e48a5d61",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "VaultConfig",
            "label": "wrappedNativeToken",
            "type": "t_address",
            "src": "contracts\\VaultConfig.sol:26"
          },
          {
            "contract": "VaultConfig",
            "label": "wrappedNativeTokenRelayer",
            "type": "t_address",
            "src": "contracts\\VaultConfig.sol:28"
          },
          {
            "contract": "VaultConfig",
            "label": "treasuryAccount",
            "type": "t_address",
            "src": "contracts\\VaultConfig.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e9c9429db0caf7cb9eb463cc20660104b166d6771de3d099e5735ba8269c9b0f": {
      "address": "0xA9d6223Af2783436D6cff1021fc3dA3F78009865",
      "txHash": "0x86de2883ed14a11176e5ef6a85ff6d29946e3208dab05b5ceb249167419e57cf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "Vault",
            "label": "_IN_EXEC_LOCK",
            "type": "t_uint256",
            "src": "contracts\\Vault.sol:55"
          },
          {
            "contract": "Vault",
            "label": "POSITION_ID",
            "type": "t_uint256",
            "src": "contracts\\Vault.sol:56"
          },
          {
            "contract": "Vault",
            "label": "STRATEGY",
            "type": "t_address",
            "src": "contracts\\Vault.sol:57"
          },
          {
            "contract": "Vault",
            "label": "token",
            "type": "t_address",
            "src": "contracts\\Vault.sol:61"
          },
          {
            "contract": "Vault",
            "label": "config",
            "type": "t_contract(IVaultConfig)5732",
            "src": "contracts\\Vault.sol:69"
          },
          {
            "contract": "Vault",
            "label": "positions",
            "type": "t_mapping(t_uint256,t_struct(Position)4092_storage)",
            "src": "contracts\\Vault.sol:70"
          },
          {
            "contract": "Vault",
            "label": "nextPositionID",
            "type": "t_uint256",
            "src": "contracts\\Vault.sol:71"
          },
          {
            "contract": "Vault",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)5385",
            "src": "contracts\\Vault.sol:74"
          },
          {
            "contract": "Vault",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)5560",
            "src": "contracts\\Vault.sol:76"
          },
          {
            "contract": "Vault",
            "label": "rewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Vault.sol:79"
          },
          {
            "contract": "Vault",
            "label": "approvedRewardAssigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Vault.sol:80"
          },
          {
            "contract": "Vault",
            "label": "totalRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Vault.sol:82"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IVaultConfig)5732": {
            "label": "contract IVaultConfig"
          },
          "t_mapping(t_uint256,t_struct(Position)4092_storage)": {
            "label": "mapping(uint256 => struct Vault.Position)"
          },
          "t_struct(Position)4092_storage": {
            "label": "struct Vault.Position",
            "members": [
              {
                "label": "worker",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "client",
                "type": "t_address"
              }
            ]
          },
          "t_contract(IFeeCollector)5385": {
            "label": "contract IFeeCollector"
          },
          "t_contract(IProtocolManager)5560": {
            "label": "contract IProtocolManager"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "18d1cbfe3f5588aa4d3a49ef83eca22d6abddebfcf93070c43361e2fb877123f": {
      "address": "0x6516038C95535A09dcd2b4AF93138B6db172dFEB",
      "txHash": "0xeb6597bc500373dd1f1032443ddc0cfed719f34a6fa436a3bb45769fab803d6c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "PancakeswapStrategyAddToPoolWithBaseToken",
            "label": "factory",
            "type": "t_contract(IPancakeFactory)1305",
            "src": "contracts\\strategies\\pancake\\PancakeswapStrategyAddToPoolWithBaseToken.sol:28"
          },
          {
            "contract": "PancakeswapStrategyAddToPoolWithBaseToken",
            "label": "router",
            "type": "t_contract(IPancakeRouterV2)8761",
            "src": "contracts\\strategies\\pancake\\PancakeswapStrategyAddToPoolWithBaseToken.sol:29"
          }
        ],
        "types": {
          "t_contract(IPancakeFactory)1305": {
            "label": "contract IPancakeFactory"
          },
          "t_contract(IPancakeRouterV2)8761": {
            "label": "contract IPancakeRouterV2"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "33bb3c06392dee52cafe42531c940426f443b00b371a719ce5c6fbb961efc6d6": {
      "address": "0x0112B40F0E349b2A2530955862b961c052545D49",
      "txHash": "0xa24127a8e4bd8607714a017d2da42e7e1341eaf115d3483cacccaced7f79f5ad",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "PancakeswapStrategyAddToPoolWithoutBaseToken",
            "label": "factory",
            "type": "t_contract(IPancakeFactory)1305",
            "src": "contracts\\strategies\\pancake\\PancakeswapStrategyAddToPoolWithoutBaseToken.sol:27"
          },
          {
            "contract": "PancakeswapStrategyAddToPoolWithoutBaseToken",
            "label": "router",
            "type": "t_contract(IPancakeRouterV2)8761",
            "src": "contracts\\strategies\\pancake\\PancakeswapStrategyAddToPoolWithoutBaseToken.sol:28"
          }
        ],
        "types": {
          "t_contract(IPancakeFactory)1305": {
            "label": "contract IPancakeFactory"
          },
          "t_contract(IPancakeRouterV2)8761": {
            "label": "contract IPancakeRouterV2"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "19973cfd8bae02cd23d198f9b551f328f91e5ea068226c3dafd34b975ea58840": {
      "address": "0x079c66B44C82A5101Fb2EBC88696cEff7a29d21A",
      "txHash": "0x8db84264efbb15266a0b560e7ed7e9e96b4495fac6c234afbcdb06c79f202e53",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "PancakeswapStrategyLiquidate",
            "label": "factory",
            "type": "t_contract(IPancakeFactory)1305",
            "src": "contracts\\strategies\\pancake\\PancakeswapStrategyLiquidate.sol:24"
          },
          {
            "contract": "PancakeswapStrategyLiquidate",
            "label": "router",
            "type": "t_contract(IPancakeRouterV2)8761",
            "src": "contracts\\strategies\\pancake\\PancakeswapStrategyLiquidate.sol:25"
          }
        ],
        "types": {
          "t_contract(IPancakeFactory)1305": {
            "label": "contract IPancakeFactory"
          },
          "t_contract(IPancakeRouterV2)8761": {
            "label": "contract IPancakeRouterV2"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "029183dce4a0e3675caf429abbcdbd58eea5996845e17de790c66fa7a74aa88a": {
      "address": "0x7C6A5e2fB436dDc91FeA65Bd2D1D9aFfb3117b65",
      "txHash": "0x0b3b86fa85827a40265c81e2b152e20469b7ccd72973a2b9033bda3dc742cba8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "factory",
            "type": "t_contract(IPancakeFactory)1305",
            "src": "contracts\\workers\\PancakeswapWorker.sol:89"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "masterChef",
            "type": "t_contract(IPancakeMasterChef)8369",
            "src": "contracts\\workers\\PancakeswapWorker.sol:90"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "router",
            "type": "t_contract(IPancakeRouterV2)8759",
            "src": "contracts\\workers\\PancakeswapWorker.sol:91"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "lpToken",
            "type": "t_contract(IPancakePair)1547",
            "src": "contracts\\workers\\PancakeswapWorker.sol:92"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "wNative",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:93"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "name",
            "type": "t_string_storage",
            "src": "contracts\\workers\\PancakeswapWorker.sol:94"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "baseToken",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:95"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "token0",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:96"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "token1",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:97"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "cake",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:98"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "operatingVault",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:99"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "pid",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:100"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)5478",
            "src": "contracts\\workers\\PancakeswapWorker.sol:101"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:103"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "feeDenom",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:104"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "harvestThreshold",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:107"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "harvestPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\workers\\PancakeswapWorker.sol:108"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "strategies",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\workers\\PancakeswapWorker.sol:111"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "approvedStrategies",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\workers\\PancakeswapWorker.sol:112"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "shares",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\workers\\PancakeswapWorker.sol:115"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "totalShare",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:116"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "positionIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\workers\\PancakeswapWorker.sol:117"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "treasuryFeeBps",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:118"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "isEnabled",
            "type": "t_bool",
            "src": "contracts\\workers\\PancakeswapWorker.sol:119"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "clientFeesBps",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\workers\\PancakeswapWorker.sol:120"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "okHarvesters",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\workers\\PancakeswapWorker.sol:121"
          }
        ],
        "types": {
          "t_contract(IPancakeFactory)1305": {
            "label": "contract IPancakeFactory"
          },
          "t_contract(IPancakeMasterChef)8369": {
            "label": "contract IPancakeMasterChef"
          },
          "t_contract(IPancakeRouterV2)8759": {
            "label": "contract IPancakeRouterV2"
          },
          "t_contract(IPancakePair)1547": {
            "label": "contract IPancakePair"
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IProtocolManager)5478": {
            "label": "contract IProtocolManager"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "75964bdc7f9697f917345025e0263706f3d10d097aea758dff54df4580d07eb0": {
      "address": "0x3d872665968B1f7a5aF6417334384bE9Be6A717D",
      "txHash": "0x043f3c34ab21dab52578a89b8ba9e0c44ec333cbfa37b1a8dae65b21d5bf2192",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "Client",
            "label": "enabledFarms",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:74"
          },
          {
            "contract": "Client",
            "label": "_KIND_",
            "type": "t_string_storage",
            "src": "contracts\\Client.sol:77"
          },
          {
            "contract": "Client",
            "label": "_CLIENT_NAME_",
            "type": "t_string_storage",
            "src": "contracts\\Client.sol:78"
          },
          {
            "contract": "Client",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)5480",
            "src": "contracts\\Client.sol:81"
          },
          {
            "contract": "Client",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)5320",
            "src": "contracts\\Client.sol:83"
          },
          {
            "contract": "Client",
            "label": "whitelistedUsers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:86"
          },
          {
            "contract": "Client",
            "label": "whitelistedOperators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:87"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IProtocolManager)5480": {
            "label": "contract IProtocolManager"
          },
          "t_contract(IFeeCollector)5320": {
            "label": "contract IFeeCollector"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6605cf2b79ac375ba992e24600cf3ab25bbd3e199c7dc52d29849e2d2e9e0ab3": {
      "address": "0xf95549c28821cC1f0C5d129e3272C330cBC1fD21",
      "txHash": "0xd4378895458fa80eb51de3ab9744a12b2acaa95058106b292257374502870dc1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "Client",
            "label": "enabledFarms",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:74"
          },
          {
            "contract": "Client",
            "label": "_KIND_",
            "type": "t_string_storage",
            "src": "contracts\\Client.sol:77"
          },
          {
            "contract": "Client",
            "label": "_CLIENT_NAME_",
            "type": "t_string_storage",
            "src": "contracts\\Client.sol:78"
          },
          {
            "contract": "Client",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)5478",
            "src": "contracts\\Client.sol:81"
          },
          {
            "contract": "Client",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)5318",
            "src": "contracts\\Client.sol:83"
          },
          {
            "contract": "Client",
            "label": "whitelistedUsers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:86"
          },
          {
            "contract": "Client",
            "label": "whitelistedOperators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:87"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IProtocolManager)5478": {
            "label": "contract IProtocolManager"
          },
          "t_contract(IFeeCollector)5318": {
            "label": "contract IFeeCollector"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c4bd003586cc6c262181dccf414f979e233ca5ca42d20c43448bacccc8e6bf88": {
      "address": "0x18ddAbc9240726Ad39897D8E93Db108b96dB051b",
      "txHash": "0x06355075e4d0fddd1c7b516639adf8618535a2dc9a169aeb8dc2ab64e9cfb4fd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedClients",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\ProtocolManager.sol:83"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedVaults",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\ProtocolManager.sol:87"
          },
          {
            "contract": "ProtocolManager",
            "label": "tokenToVault",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts\\ProtocolManager.sol:90"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedVaultConfigs",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\ProtocolManager.sol:94"
          },
          {
            "contract": "ProtocolManager",
            "label": "checkIfApprovedBountyCollectors",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\ProtocolManager.sol:98"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedBountyCollectors",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\ProtocolManager.sol:102"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedStrategiesCheck",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\ProtocolManager.sol:105"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedStrategies",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\ProtocolManager.sol:109"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedNativeRelayer",
            "type": "t_address",
            "src": "contracts\\ProtocolManager.sol:112"
          },
          {
            "contract": "ProtocolManager",
            "label": "whitelistOperatorsList",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\ProtocolManager.sol:115"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedWorkers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\ProtocolManager.sol:118"
          },
          {
            "contract": "ProtocolManager",
            "label": "whitelistedOperators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\ProtocolManager.sol:122"
          },
          {
            "contract": "ProtocolManager",
            "label": "adminContract",
            "type": "t_address",
            "src": "contracts\\ProtocolManager.sol:125"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedHarvesters",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\ProtocolManager.sol:127"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "558dff2b52c25e5f1e5f1c051c370cbca03e190931e5106355440db96c1f3d07": {
      "address": "0x70a356f6c752F93F156D990C63f16d28c950B15f",
      "txHash": "0xbca32fd131c1e6da0616651fed86483a4efdffc2f058fad8aab6aadf24f3fdbc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "factory",
            "type": "t_contract(IPancakeFactory)1305",
            "src": "contracts\\workers\\PancakeswapWorker.sol:89"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "masterChef",
            "type": "t_contract(IPancakeMasterChef)8441",
            "src": "contracts\\workers\\PancakeswapWorker.sol:90"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "router",
            "type": "t_contract(IPancakeRouterV2)8831",
            "src": "contracts\\workers\\PancakeswapWorker.sol:91"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "lpToken",
            "type": "t_contract(IPancakePair)1547",
            "src": "contracts\\workers\\PancakeswapWorker.sol:92"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "wNative",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:93"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "name",
            "type": "t_string_storage",
            "src": "contracts\\workers\\PancakeswapWorker.sol:94"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "baseToken",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:95"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "token0",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:96"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "token1",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:97"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "cake",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:98"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "operatingVault",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:99"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "pid",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:100"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)5559",
            "src": "contracts\\workers\\PancakeswapWorker.sol:101"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:103"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "feeDenom",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:104"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "harvestThreshold",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:107"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "harvestPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\workers\\PancakeswapWorker.sol:108"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "strategies",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\workers\\PancakeswapWorker.sol:111"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "approvedStrategies",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\workers\\PancakeswapWorker.sol:112"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "shares",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\workers\\PancakeswapWorker.sol:115"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "totalShare",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:116"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "positionIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\workers\\PancakeswapWorker.sol:117"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "treasuryFeeBps",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:118"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "isEnabled",
            "type": "t_bool",
            "src": "contracts\\workers\\PancakeswapWorker.sol:119"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "clientFeesBps",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\workers\\PancakeswapWorker.sol:120"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "okHarvesters",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\workers\\PancakeswapWorker.sol:121"
          }
        ],
        "types": {
          "t_contract(IPancakeFactory)1305": {
            "label": "contract IPancakeFactory"
          },
          "t_contract(IPancakeMasterChef)8441": {
            "label": "contract IPancakeMasterChef"
          },
          "t_contract(IPancakeRouterV2)8831": {
            "label": "contract IPancakeRouterV2"
          },
          "t_contract(IPancakePair)1547": {
            "label": "contract IPancakePair"
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IProtocolManager)5559": {
            "label": "contract IProtocolManager"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4c38c357a5e215c54c03faefa7c4b81dba488b43adc715befcc709a3ea1a3c54": {
      "address": "0xB4D8cf819E946Ff6Ed8f958bf1AC5A57655caF47",
      "txHash": "0x1e11c62ce9999a8554733a12ac0a96a4a196eaa2041cfdcf7002b73a044745d7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "Client",
            "label": "enabledFarms",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:74"
          },
          {
            "contract": "Client",
            "label": "_KIND_",
            "type": "t_string_storage",
            "src": "contracts\\Client.sol:77"
          },
          {
            "contract": "Client",
            "label": "_CLIENT_NAME_",
            "type": "t_string_storage",
            "src": "contracts\\Client.sol:78"
          },
          {
            "contract": "Client",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)5507",
            "src": "contracts\\Client.sol:81"
          },
          {
            "contract": "Client",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)5332",
            "src": "contracts\\Client.sol:83"
          },
          {
            "contract": "Client",
            "label": "whitelistedUsers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:86"
          },
          {
            "contract": "Client",
            "label": "whitelistedOperators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:87"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IProtocolManager)5507": {
            "label": "contract IProtocolManager"
          },
          "t_contract(IFeeCollector)5332": {
            "label": "contract IFeeCollector"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0553400cb0252e94c17d7b16ea005c698b4dd8c16689d7865fd2e032b17773cc": {
      "address": "0x9758ae3963b4BeE23cb1dcB37236d55C31B4fbA6",
      "txHash": "0x906d12b5c05f7a1ab46d7d383925111dd8c5b7eb98de9032377f5d13bae9d00a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "Vault",
            "label": "_IN_EXEC_LOCK",
            "type": "t_uint256",
            "src": "contracts\\Vault.sol:54"
          },
          {
            "contract": "Vault",
            "label": "POSITION_ID",
            "type": "t_uint256",
            "src": "contracts\\Vault.sol:55"
          },
          {
            "contract": "Vault",
            "label": "STRATEGY",
            "type": "t_address",
            "src": "contracts\\Vault.sol:56"
          },
          {
            "contract": "Vault",
            "label": "token",
            "type": "t_address",
            "src": "contracts\\Vault.sol:60"
          },
          {
            "contract": "Vault",
            "label": "config",
            "type": "t_contract(IVaultConfig)5670",
            "src": "contracts\\Vault.sol:68"
          },
          {
            "contract": "Vault",
            "label": "positions",
            "type": "t_mapping(t_uint256,t_struct(Position)4083_storage)",
            "src": "contracts\\Vault.sol:69"
          },
          {
            "contract": "Vault",
            "label": "nextPositionID",
            "type": "t_uint256",
            "src": "contracts\\Vault.sol:70"
          },
          {
            "contract": "Vault",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)5332",
            "src": "contracts\\Vault.sol:73"
          },
          {
            "contract": "Vault",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)5507",
            "src": "contracts\\Vault.sol:75"
          },
          {
            "contract": "Vault",
            "label": "rewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Vault.sol:78"
          },
          {
            "contract": "Vault",
            "label": "approvedRewardAssigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Vault.sol:79"
          },
          {
            "contract": "Vault",
            "label": "totalRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Vault.sol:81"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IVaultConfig)5670": {
            "label": "contract IVaultConfig"
          },
          "t_mapping(t_uint256,t_struct(Position)4083_storage)": {
            "label": "mapping(uint256 => struct Vault.Position)"
          },
          "t_struct(Position)4083_storage": {
            "label": "struct Vault.Position",
            "members": [
              {
                "label": "worker",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "client",
                "type": "t_address"
              }
            ]
          },
          "t_contract(IFeeCollector)5332": {
            "label": "contract IFeeCollector"
          },
          "t_contract(IProtocolManager)5507": {
            "label": "contract IProtocolManager"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6aabc7e648e21c03303c2f2900431812a9bdb4663883dfdc220c08c862a4773e": {
      "address": "0xc3EE366875118bd9C8c6bd32fC778fC32ceb1bED",
      "txHash": "0xd808a84be36b827636a9c9cc87bf05d92ee5a1254e1db6db157614946b2ff000",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "Vault",
            "label": "_IN_EXEC_LOCK",
            "type": "t_uint256",
            "src": "contracts\\Vault.sol:54"
          },
          {
            "contract": "Vault",
            "label": "POSITION_ID",
            "type": "t_uint256",
            "src": "contracts\\Vault.sol:55"
          },
          {
            "contract": "Vault",
            "label": "STRATEGY",
            "type": "t_address",
            "src": "contracts\\Vault.sol:56"
          },
          {
            "contract": "Vault",
            "label": "token",
            "type": "t_address",
            "src": "contracts\\Vault.sol:60"
          },
          {
            "contract": "Vault",
            "label": "config",
            "type": "t_contract(IVaultConfig)5835",
            "src": "contracts\\Vault.sol:68"
          },
          {
            "contract": "Vault",
            "label": "positions",
            "type": "t_mapping(t_uint256,t_struct(Position)4185_storage)",
            "src": "contracts\\Vault.sol:69"
          },
          {
            "contract": "Vault",
            "label": "nextPositionID",
            "type": "t_uint256",
            "src": "contracts\\Vault.sol:70"
          },
          {
            "contract": "Vault",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)5486",
            "src": "contracts\\Vault.sol:73"
          },
          {
            "contract": "Vault",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)5661",
            "src": "contracts\\Vault.sol:75"
          },
          {
            "contract": "Vault",
            "label": "rewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Vault.sol:78"
          },
          {
            "contract": "Vault",
            "label": "approvedRewardAssigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Vault.sol:79"
          },
          {
            "contract": "Vault",
            "label": "totalRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Vault.sol:81"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IVaultConfig)5835": {
            "label": "contract IVaultConfig"
          },
          "t_mapping(t_uint256,t_struct(Position)4185_storage)": {
            "label": "mapping(uint256 => struct Vault.Position)"
          },
          "t_struct(Position)4185_storage": {
            "label": "struct Vault.Position",
            "members": [
              {
                "label": "worker",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "client",
                "type": "t_address"
              }
            ]
          },
          "t_contract(IFeeCollector)5486": {
            "label": "contract IFeeCollector"
          },
          "t_contract(IProtocolManager)5661": {
            "label": "contract IProtocolManager"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7b327a89d5dc5bfe60936aa253e810c800e8ff48d99fe38e7db494441a923a96": {
      "address": "0x78A8c1fF546D32883BaEC59169ec68B39C928463",
      "txHash": "0x22026145d6d8531959d38954954b97740e70d92004ff6554f420d3d4e374232a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "Client",
            "label": "enabledFarms",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:74"
          },
          {
            "contract": "Client",
            "label": "_KIND_",
            "type": "t_string_storage",
            "src": "contracts\\Client.sol:77"
          },
          {
            "contract": "Client",
            "label": "_CLIENT_NAME_",
            "type": "t_string_storage",
            "src": "contracts\\Client.sol:78"
          },
          {
            "contract": "Client",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)5585",
            "src": "contracts\\Client.sol:81"
          },
          {
            "contract": "Client",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)5410",
            "src": "contracts\\Client.sol:83"
          },
          {
            "contract": "Client",
            "label": "whitelistedUsers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:86"
          },
          {
            "contract": "Client",
            "label": "whitelistedOperators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:87"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IProtocolManager)5585": {
            "label": "contract IProtocolManager"
          },
          "t_contract(IFeeCollector)5410": {
            "label": "contract IFeeCollector"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a0b65e83c4fbae2deb3a3fd441e856a61fb4f1fb611d25d1c7d9227fc652ff2e": {
      "address": "0x6C6c58A526f954ac00e5a7806B20b418181D6c04",
      "txHash": "0x71c32847d152f4fd58235f562d3b80af18bad5b9e71b3ef642355a45ec17699d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "Client",
            "label": "enabledFarms",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:74"
          },
          {
            "contract": "Client",
            "label": "_KIND_",
            "type": "t_string_storage",
            "src": "contracts\\Client.sol:77"
          },
          {
            "contract": "Client",
            "label": "_CLIENT_NAME_",
            "type": "t_string_storage",
            "src": "contracts\\Client.sol:78"
          },
          {
            "contract": "Client",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)5662",
            "src": "contracts\\Client.sol:81"
          },
          {
            "contract": "Client",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)5487",
            "src": "contracts\\Client.sol:83"
          },
          {
            "contract": "Client",
            "label": "whitelistedUsers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:86"
          },
          {
            "contract": "Client",
            "label": "whitelistedOperators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:87"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IProtocolManager)5662": {
            "label": "contract IProtocolManager"
          },
          "t_contract(IFeeCollector)5487": {
            "label": "contract IFeeCollector"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4bad84d2606387150d8d0c24913d9232db3ef5b29eed89d7d3e5726b166bf6bb": {
      "address": "0xb9713cc5b3Fe8d1c75Ac5E3a4A298f3e27fF9E60",
      "txHash": "0x8173f5b63aced9f2845dfc3f8a1da9ad67afbd205b8684d1b18a0c852e031e6b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "Client",
            "label": "enabledFarms",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:74"
          },
          {
            "contract": "Client",
            "label": "_KIND_",
            "type": "t_string_storage",
            "src": "contracts\\Client.sol:77"
          },
          {
            "contract": "Client",
            "label": "_CLIENT_NAME_",
            "type": "t_string_storage",
            "src": "contracts\\Client.sol:78"
          },
          {
            "contract": "Client",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)5636",
            "src": "contracts\\Client.sol:81"
          },
          {
            "contract": "Client",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)5461",
            "src": "contracts\\Client.sol:83"
          },
          {
            "contract": "Client",
            "label": "whitelistedUsers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:86"
          },
          {
            "contract": "Client",
            "label": "whitelistedOperators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:87"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IProtocolManager)5636": {
            "label": "contract IProtocolManager"
          },
          "t_contract(IFeeCollector)5461": {
            "label": "contract IFeeCollector"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "eee6e4788b641fb954e2b8d4c79f26c9fe88bd6af2cebeb54618d3d0909a6ab3": {
      "address": "0x1855B5F6Ee5a463D7f267785118D99F4451956C7",
      "txHash": "0x3d9da0232aadc14952f05c299cef181b364d054459e09c7366195c0fd07ecdb7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "Client",
            "label": "enabledFarms",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:74"
          },
          {
            "contract": "Client",
            "label": "_KIND_",
            "type": "t_string_storage",
            "src": "contracts\\Client.sol:77"
          },
          {
            "contract": "Client",
            "label": "_CLIENT_NAME_",
            "type": "t_string_storage",
            "src": "contracts\\Client.sol:78"
          },
          {
            "contract": "Client",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)5651",
            "src": "contracts\\Client.sol:81"
          },
          {
            "contract": "Client",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)5476",
            "src": "contracts\\Client.sol:83"
          },
          {
            "contract": "Client",
            "label": "whitelistedUsers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:86"
          },
          {
            "contract": "Client",
            "label": "whitelistedOperators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:87"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IProtocolManager)5651": {
            "label": "contract IProtocolManager"
          },
          "t_contract(IFeeCollector)5476": {
            "label": "contract IFeeCollector"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "edb04bd8822a91f1b07139ef926d4763b875f441368e4dcf686619c4283e62bc": {
      "address": "0x06D9D16a3a9860E644892aaB9b1b8c0e411D838b",
      "txHash": "0x25a5036bd3ba3dd78fcdbaea5a916e3601fe25d9f80a5306d9fa823e2c673739",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "Vault",
            "label": "_IN_EXEC_LOCK",
            "type": "t_uint256",
            "src": "contracts\\Vault.sol:54"
          },
          {
            "contract": "Vault",
            "label": "POSITION_ID",
            "type": "t_uint256",
            "src": "contracts\\Vault.sol:55"
          },
          {
            "contract": "Vault",
            "label": "STRATEGY",
            "type": "t_address",
            "src": "contracts\\Vault.sol:56"
          },
          {
            "contract": "Vault",
            "label": "token",
            "type": "t_address",
            "src": "contracts\\Vault.sol:60"
          },
          {
            "contract": "Vault",
            "label": "config",
            "type": "t_contract(IVaultConfig)6062",
            "src": "contracts\\Vault.sol:68"
          },
          {
            "contract": "Vault",
            "label": "positions",
            "type": "t_mapping(t_uint256,t_struct(Position)4276_storage)",
            "src": "contracts\\Vault.sol:69"
          },
          {
            "contract": "Vault",
            "label": "nextPositionID",
            "type": "t_uint256",
            "src": "contracts\\Vault.sol:70"
          },
          {
            "contract": "Vault",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)5701",
            "src": "contracts\\Vault.sol:73"
          },
          {
            "contract": "Vault",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)5876",
            "src": "contracts\\Vault.sol:75"
          },
          {
            "contract": "Vault",
            "label": "rewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Vault.sol:78"
          },
          {
            "contract": "Vault",
            "label": "approvedRewardAssigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Vault.sol:79"
          },
          {
            "contract": "Vault",
            "label": "totalRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Vault.sol:81"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IVaultConfig)6062": {
            "label": "contract IVaultConfig"
          },
          "t_mapping(t_uint256,t_struct(Position)4276_storage)": {
            "label": "mapping(uint256 => struct Vault.Position)"
          },
          "t_struct(Position)4276_storage": {
            "label": "struct Vault.Position",
            "members": [
              {
                "label": "worker",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "client",
                "type": "t_address"
              }
            ]
          },
          "t_contract(IFeeCollector)5701": {
            "label": "contract IFeeCollector"
          },
          "t_contract(IProtocolManager)5876": {
            "label": "contract IProtocolManager"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4dc720e9a7b986c5c47d3dffc24b978b275cec75735323d542196c1c378cbb24": {
      "address": "0x415fd97836F41Df41B3cCc0800064b365b1628fB",
      "txHash": "0xde6dcb8a7095f5bed80e82d5dcb465e28476089707a51cbc8d4ec4d8bb3e9b76",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "Client",
            "label": "enabledFarms",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:80"
          },
          {
            "contract": "Client",
            "label": "_KIND_",
            "type": "t_string_storage",
            "src": "contracts\\Client.sol:83"
          },
          {
            "contract": "Client",
            "label": "_CLIENT_NAME_",
            "type": "t_string_storage",
            "src": "contracts\\Client.sol:84"
          },
          {
            "contract": "Client",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)5876",
            "src": "contracts\\Client.sol:87"
          },
          {
            "contract": "Client",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)5701",
            "src": "contracts\\Client.sol:89"
          },
          {
            "contract": "Client",
            "label": "whitelistedUsers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:92"
          },
          {
            "contract": "Client",
            "label": "whitelistedOperators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:93"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IProtocolManager)5876": {
            "label": "contract IProtocolManager"
          },
          "t_contract(IFeeCollector)5701": {
            "label": "contract IFeeCollector"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9fe0a0ab366b8f1732a3a960b90d6cf2f2a9555864cd01f8311eb68c10e8d18c": {
      "address": "0x5939cb51333604368ea70Fc3D9DFc92f2F542014",
      "txHash": "0x2ca93208a9c700986bd3206c9a8fd2661e165645ae9080e6fa5477c600cfd018",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "Client",
            "label": "enabledFarms",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:80"
          },
          {
            "contract": "Client",
            "label": "_KIND_",
            "type": "t_string_storage",
            "src": "contracts\\Client.sol:83"
          },
          {
            "contract": "Client",
            "label": "_CLIENT_NAME_",
            "type": "t_string_storage",
            "src": "contracts\\Client.sol:84"
          },
          {
            "contract": "Client",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)5933",
            "src": "contracts\\Client.sol:87"
          },
          {
            "contract": "Client",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)5758",
            "src": "contracts\\Client.sol:89"
          },
          {
            "contract": "Client",
            "label": "whitelistedUsers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:92"
          },
          {
            "contract": "Client",
            "label": "whitelistedOperators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:93"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IProtocolManager)5933": {
            "label": "contract IProtocolManager"
          },
          "t_contract(IFeeCollector)5758": {
            "label": "contract IFeeCollector"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a423b69a7f7c312c6c520a77321e222ee5ed0bf739bf1a01a7c5affdd7e83272": {
      "address": "0xD51e51a70f0B057ae5eE2B50eb96669F4F552151",
      "txHash": "0x3011fc27d134c90bf49898616ce992d107f6971798dfc78408efae6ac42a39c8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "Client",
            "label": "enabledFarms",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:80"
          },
          {
            "contract": "Client",
            "label": "_KIND_",
            "type": "t_string_storage",
            "src": "contracts\\Client.sol:83"
          },
          {
            "contract": "Client",
            "label": "_CLIENT_NAME_",
            "type": "t_string_storage",
            "src": "contracts\\Client.sol:84"
          },
          {
            "contract": "Client",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)5957",
            "src": "contracts\\Client.sol:87"
          },
          {
            "contract": "Client",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)5782",
            "src": "contracts\\Client.sol:89"
          },
          {
            "contract": "Client",
            "label": "whitelistedUsers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:92"
          },
          {
            "contract": "Client",
            "label": "whitelistedOperators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:93"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IProtocolManager)5957": {
            "label": "contract IProtocolManager"
          },
          "t_contract(IFeeCollector)5782": {
            "label": "contract IFeeCollector"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "87ed566024d7bced8bc8f334d2f3e28fefcd2746ca40f584c92e3ad0ee49b5cc": {
      "address": "0xd2e95F44F9529c07dD7f0cDD8C56584F560443f3",
      "txHash": "0xfb8705c99c47f48ddb86083626a53a412992d9f2b0eba28bae392d76beff2b1b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "Vault",
            "label": "_IN_EXEC_LOCK",
            "type": "t_uint256",
            "src": "contracts\\Vault.sol:61"
          },
          {
            "contract": "Vault",
            "label": "POSITION_ID",
            "type": "t_uint256",
            "src": "contracts\\Vault.sol:62"
          },
          {
            "contract": "Vault",
            "label": "STRATEGY",
            "type": "t_address",
            "src": "contracts\\Vault.sol:63"
          },
          {
            "contract": "Vault",
            "label": "token",
            "type": "t_address",
            "src": "contracts\\Vault.sol:67"
          },
          {
            "contract": "Vault",
            "label": "config",
            "type": "t_contract(IVaultConfig)6143",
            "src": "contracts\\Vault.sol:75"
          },
          {
            "contract": "Vault",
            "label": "positions",
            "type": "t_mapping(t_uint256,t_struct(Position)4344_storage)",
            "src": "contracts\\Vault.sol:76"
          },
          {
            "contract": "Vault",
            "label": "nextPositionID",
            "type": "t_uint256",
            "src": "contracts\\Vault.sol:77"
          },
          {
            "contract": "Vault",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)5782",
            "src": "contracts\\Vault.sol:80"
          },
          {
            "contract": "Vault",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)5957",
            "src": "contracts\\Vault.sol:82"
          },
          {
            "contract": "Vault",
            "label": "rewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Vault.sol:85"
          },
          {
            "contract": "Vault",
            "label": "approvedRewardAssigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Vault.sol:86"
          },
          {
            "contract": "Vault",
            "label": "totalRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Vault.sol:88"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IVaultConfig)6143": {
            "label": "contract IVaultConfig"
          },
          "t_mapping(t_uint256,t_struct(Position)4344_storage)": {
            "label": "mapping(uint256 => struct Vault.Position)"
          },
          "t_struct(Position)4344_storage": {
            "label": "struct Vault.Position",
            "members": [
              {
                "label": "worker",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "client",
                "type": "t_address"
              }
            ]
          },
          "t_contract(IFeeCollector)5782": {
            "label": "contract IFeeCollector"
          },
          "t_contract(IProtocolManager)5957": {
            "label": "contract IProtocolManager"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "28d5949f9f65bcbd53a19b3ec9829b80bbca3619d87080b6e4c14f41023c5d12": {
      "address": "0xAd37bbf3b9191671138FbfF266eB0CDDfF82580D",
      "txHash": "0xb235c731f67f8af583b038504db2eeba9608c834ddd68972c7e8c7517fe7de16",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "FeeCollector",
            "label": "fees",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\FeeCollector.sol:37"
          },
          {
            "contract": "FeeCollector",
            "label": "_feeToken",
            "type": "t_address",
            "src": "contracts\\FeeCollector.sol:40"
          },
          {
            "contract": "FeeCollector",
            "label": "_feeThreshold",
            "type": "t_uint256",
            "src": "contracts\\FeeCollector.sol:41"
          },
          {
            "contract": "FeeCollector",
            "label": "protocolManager",
            "type": "t_contract(ProtocolManager)4248",
            "src": "contracts\\FeeCollector.sol:42"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(ProtocolManager)4248": {
            "label": "contract ProtocolManager"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "30d6723f86b0feb68984d82141af3bdb87c83098893dffdf3f2805eab0b60b0b": {
      "address": "0xC511f8DD6bEc023ac8a9bbFb48F285350Bb56343",
      "txHash": "0x6aa335d55abdba6a4737a9d6ce0f43e807d1f6b2ead9ceb4cea459be328773c4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "FeeCollector",
            "label": "fees",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\FeeCollector.sol:37"
          },
          {
            "contract": "FeeCollector",
            "label": "_feeToken",
            "type": "t_address",
            "src": "contracts\\FeeCollector.sol:40"
          },
          {
            "contract": "FeeCollector",
            "label": "_feeThreshold",
            "type": "t_uint256",
            "src": "contracts\\FeeCollector.sol:41"
          },
          {
            "contract": "FeeCollector",
            "label": "protocolManager",
            "type": "t_contract(ProtocolManager)4236",
            "src": "contracts\\FeeCollector.sol:42"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(ProtocolManager)4236": {
            "label": "contract ProtocolManager"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "93ef62d3346ceaef1282ee1c87a392d00d1acb1dc60dad950fec369a92acffab": {
      "address": "0x4E410Aa9818FC58825171D5eC60DB1D0856b2B14",
      "txHash": "0xd84451b1c0d8bede2779da6abfea28385cd46b973ab11f35d350946c0b5649b1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "VaultConfig",
            "label": "wrappedNativeToken",
            "type": "t_address",
            "src": "contracts\\VaultConfig.sol:26"
          },
          {
            "contract": "VaultConfig",
            "label": "wrappedNativeTokenRelayer",
            "type": "t_address",
            "src": "contracts\\VaultConfig.sol:28"
          },
          {
            "contract": "VaultConfig",
            "label": "treasuryAccount",
            "type": "t_address",
            "src": "contracts\\VaultConfig.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "9e16f9ff6d942becf3e11526d45e4ed006b745d6988fe78614d087a432c5e815": {
      "address": "0x6beEAA0eEA4F85B5Ee52cdbaC76BCD6AFD1C91D0",
      "txHash": "0x1460fb4ebe81ab081434a4c33293c0e42af9ac9bb2443d4f9ac7a11aa6a07c43",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "Client",
            "label": "enabledFarms",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:80"
          },
          {
            "contract": "Client",
            "label": "_KIND_",
            "type": "t_string_storage",
            "src": "contracts\\Client.sol:83"
          },
          {
            "contract": "Client",
            "label": "_CLIENT_NAME_",
            "type": "t_string_storage",
            "src": "contracts\\Client.sol:84"
          },
          {
            "contract": "Client",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)5989",
            "src": "contracts\\Client.sol:87"
          },
          {
            "contract": "Client",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)5814",
            "src": "contracts\\Client.sol:89"
          },
          {
            "contract": "Client",
            "label": "whitelistedUsers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:92"
          },
          {
            "contract": "Client",
            "label": "whitelistedOperators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:93"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IProtocolManager)5989": {
            "label": "contract IProtocolManager"
          },
          "t_contract(IFeeCollector)5814": {
            "label": "contract IFeeCollector"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}

{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x454E7541Fd56dbDBBEc79fD2eEcDF21B7e2a84E1",
    "txHash": "0x98e63fbb9f6728dc656299aad349e4e177e275839f528728c283da83e47901d2",
    "deployTransaction": {
      "hash": "0x98e63fbb9f6728dc656299aad349e4e177e275839f528728c283da83e47901d2",
      "type": 0,
      "accessList": null,
      "blockHash": null,
      "blockNumber": null,
      "transactionIndex": null,
      "confirmations": 0,
      "from": "0x32d9A383F53B1317BBa7F99AeC19a7E97D44b76e",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x02540be400"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x075da0"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 1,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0x46110f0e3b7459ff0bd807fa1dec0749d48b95b54924899c92567a8fd62804d9",
      "s": "0x02d3981e7d89833a08a53b7942e0f0a1669fe14d54fc91c760aa776bbdc52508",
      "v": 230,
      "creates": "0x454E7541Fd56dbDBBEc79fD2eEcDF21B7e2a84E1",
      "chainId": 97
    }
  },
  "proxies": [
    {
      "address": "0x8f5Ccf63976338CcD02f0eB3C6A5753c5468ABC0",
      "txHash": "0x87adaedbe42406d8206f2774944be1376599615e6460c151f92d99f4570b0bc3",
      "kind": "transparent"
    },
    {
      "address": "0x6Ea1d3fC73dd2207F97c74715373A7A4f432dfe5",
      "txHash": "0xd9140c46500a0c000294c42d765ec089d22cb394b793909f560ac7c34aa0aab0",
      "kind": "transparent"
    },
    {
      "address": "0x3FbD9e47Fc85C6b489639E9D0414e1Aac1841FaC",
      "txHash": "0x9a54530dcda99479fe1f268d28637353ad2b4b95d19ed2886aa44565f8866d97",
      "kind": "transparent"
    },
    {
      "address": "0xEcB919458700157D5a4D15D472D38727b09644DD",
      "txHash": "0x5295c0e72ffee09215fce49d7a87e032097b0d287c9cdaf805e9c2a89f42949b",
      "kind": "transparent"
    },
    {
      "address": "0xcC4d7158760c85D48AfF142D78b06919a4852BE5",
      "txHash": "0x1cd5ef5e72abfa7cfc523103c3717366d2e9a468c86dfa7aea58b57972b1fdd3",
      "kind": "transparent"
    },
    {
      "address": "0x2F9322016f683E328b9501072957Bc42D1cC2bb9",
      "txHash": "0x9023228bc6e3e2027737b581c845c70951034ca967179e5154bbd88b6aca6806",
      "kind": "transparent"
    },
    {
      "address": "0x24676a9A5952f6B3381CA264E0FeCe4308E3A935",
      "txHash": "0x0ca89a47ac9f9107469b253a98195fedd783e1516894cf59330543c199025ab2",
      "kind": "transparent"
    },
    {
      "address": "0x39728b3700Ec9C79ffB7C462e39BB6c3a683B94F",
      "txHash": "0x2837ce65ac99c7a2d0d9caec89b0607a6c8ad93be211425a40a6c74ec1ac7421",
      "kind": "transparent"
    },
    {
      "address": "0x0cDD4Bb2756266d3b097Ba87dbB2d90cC3141c3F",
      "txHash": "0xdab62471953a1373b05bc74752951df72846e01d8de041dfb911609900c7b6e2",
      "kind": "transparent"
    },
    {
      "address": "0x5AB100ABE5806640eECDe0e44f3BaCCBbB252998",
      "txHash": "0x62f7c0d0971dd80f32393033a24019d85de31c42cb95f9ca036316ce339c1129",
      "kind": "transparent"
    },
    {
      "address": "0x3b349d1326b3777A578342c87d8b60f75078BAdc",
      "txHash": "0xf20a1e39ff79a703df1d7bf0fee2f39bac8c87acee6efe75049101a5c20c3436",
      "kind": "transparent"
    },
    {
      "address": "0xaA6F53894d5a935e2611514997c388BEbc879189",
      "txHash": "0xb464eb4b6cd5281d069adc80241ba66680b7b22be38ac3f3c23f3fed37ccb8ce",
      "kind": "transparent"
    }
  ],
  "impls": {
    "c4bd003586cc6c262181dccf414f979e233ca5ca42d20c43448bacccc8e6bf88": {
      "address": "0xccFc056Ba59d9A37cE1756EEe55FE9A97EEfC8CB",
      "txHash": "0xa9fcb5ed9466cc506afeb0669496887ac1ff4eb0944aae962de01edfa0763c62",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedClients",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/ProtocolManager.sol:83"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedVaults",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/ProtocolManager.sol:87"
          },
          {
            "contract": "ProtocolManager",
            "label": "tokenToVault",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/ProtocolManager.sol:90"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedVaultConfigs",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/ProtocolManager.sol:94"
          },
          {
            "contract": "ProtocolManager",
            "label": "checkIfApprovedBountyCollectors",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/ProtocolManager.sol:98"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedBountyCollectors",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/ProtocolManager.sol:102"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedStrategiesCheck",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/ProtocolManager.sol:105"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedStrategies",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/ProtocolManager.sol:109"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedNativeRelayer",
            "type": "t_address",
            "src": "contracts/ProtocolManager.sol:112"
          },
          {
            "contract": "ProtocolManager",
            "label": "whitelistOperatorsList",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/ProtocolManager.sol:115"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedWorkers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/ProtocolManager.sol:118"
          },
          {
            "contract": "ProtocolManager",
            "label": "whitelistedOperators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/ProtocolManager.sol:122"
          },
          {
            "contract": "ProtocolManager",
            "label": "adminContract",
            "type": "t_address",
            "src": "contracts/ProtocolManager.sol:125"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedHarvesters",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/ProtocolManager.sol:127"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "337f1a83576a5a86b9c7a5214bd4bbae823461c5a4f0fdf147783550c8d2c7ae": {
      "address": "0x9F3152b644Bc2E53511417946c1fdA34b00527a9",
      "txHash": "0x1a9fb59ff52626ca9746e3d21635a37ecfb78091256842635085c2f00415cf15",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "FeeCollector",
            "label": "fees",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/FeeCollector.sol:37"
          },
          {
            "contract": "FeeCollector",
            "label": "_feeToken",
            "type": "t_address",
            "src": "contracts/FeeCollector.sol:40"
          },
          {
            "contract": "FeeCollector",
            "label": "_feeThreshold",
            "type": "t_uint256",
            "src": "contracts/FeeCollector.sol:41"
          },
          {
            "contract": "FeeCollector",
            "label": "protocolManager",
            "type": "t_contract(ProtocolManager)4851",
            "src": "contracts/FeeCollector.sol:42"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(ProtocolManager)4851": {
            "label": "contract ProtocolManager"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "fb90595e8593fbf330d7412547c4455842b4068cc1e2bcec8e656d2ee5fcc8e8": {
      "address": "0x276577DB9cb79734c514958a94a4654E3577d467",
      "txHash": "0xdebcd752e90fabd4facc5d1164e17753edd7921000f176c6a72a8cc76e276f46",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "Admin",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)6683",
            "src": "contracts/Admin.sol:36"
          },
          {
            "contract": "Admin",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)6508",
            "src": "contracts/Admin.sol:37"
          }
        ],
        "types": {
          "t_contract(IProtocolManager)6683": {
            "label": "contract IProtocolManager"
          },
          "t_contract(IFeeCollector)6508": {
            "label": "contract IFeeCollector"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "170978604f49decbab927011c0f4c1ac8ec139d74ee1b8bf19a5216f5779bf35": {
      "address": "0x076C4c72Da665a78805A72Bb93735b1BFFE14Dcd",
      "txHash": "0x9b51ba9378cd3d72c8d0e7850687a831f584d779142f099dc41d19dc80c4b6b2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "WrappedNativeTokenRelayer",
            "label": "wnative",
            "type": "t_address",
            "src": "contracts/WrappedNativeTokenRelayer.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "93ef62d3346ceaef1282ee1c87a392d00d1acb1dc60dad950fec369a92acffab": {
      "address": "0x01d715A05B341E3328A39A73e2D30a59eDee074C",
      "txHash": "0xcdb3b7fe13a7b0ecf70f4c366610a61bfad6c8be27aa62fff860fa203708cbb0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "VaultConfig",
            "label": "wrappedNativeToken",
            "type": "t_address",
            "src": "contracts/VaultConfig.sol:26"
          },
          {
            "contract": "VaultConfig",
            "label": "wrappedNativeTokenRelayer",
            "type": "t_address",
            "src": "contracts/VaultConfig.sol:28"
          },
          {
            "contract": "VaultConfig",
            "label": "treasuryAccount",
            "type": "t_address",
            "src": "contracts/VaultConfig.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "0cf90797e0e297df455f615111dda39c0a520057d98a3038d5e75c9d98c9b5a1": {
      "address": "0x72F11E20d20dF1010B47e3bd5F090E9c48369666",
      "txHash": "0x0cf4fbd8c6b4794cf48277928c0b37523133bc4f1b5e718ee3d62d3684326271",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "Vault",
            "label": "_IN_EXEC_LOCK",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:67"
          },
          {
            "contract": "Vault",
            "label": "POSITION_ID",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:68"
          },
          {
            "contract": "Vault",
            "label": "STRATEGY",
            "type": "t_address",
            "src": "contracts/Vault.sol:69"
          },
          {
            "contract": "Vault",
            "label": "token",
            "type": "t_address",
            "src": "contracts/Vault.sol:73"
          },
          {
            "contract": "Vault",
            "label": "config",
            "type": "t_contract(IVaultConfig)6875",
            "src": "contracts/Vault.sol:81"
          },
          {
            "contract": "Vault",
            "label": "positions",
            "type": "t_mapping(t_uint256,t_struct(Position)4961_storage)",
            "src": "contracts/Vault.sol:82"
          },
          {
            "contract": "Vault",
            "label": "nextPositionID",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:83"
          },
          {
            "contract": "Vault",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)6508",
            "src": "contracts/Vault.sol:86"
          },
          {
            "contract": "Vault",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)6683",
            "src": "contracts/Vault.sol:88"
          },
          {
            "contract": "Vault",
            "label": "rewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/Vault.sol:91"
          },
          {
            "contract": "Vault",
            "label": "approvedRewardAssigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/Vault.sol:92"
          },
          {
            "contract": "Vault",
            "label": "totalRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/Vault.sol:94"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IVaultConfig)6875": {
            "label": "contract IVaultConfig"
          },
          "t_mapping(t_uint256,t_struct(Position)4961_storage)": {
            "label": "mapping(uint256 => struct Vault.Position)"
          },
          "t_struct(Position)4961_storage": {
            "label": "struct Vault.Position",
            "members": [
              {
                "label": "worker",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "client",
                "type": "t_address"
              }
            ]
          },
          "t_contract(IFeeCollector)6508": {
            "label": "contract IFeeCollector"
          },
          "t_contract(IProtocolManager)6683": {
            "label": "contract IProtocolManager"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "18d1cbfe3f5588aa4d3a49ef83eca22d6abddebfcf93070c43361e2fb877123f": {
      "address": "0xAF2A2c13cA660320502c891Be78E74e2E994C3BE",
      "txHash": "0xf32fc0e07f1c06974c31047da2924c339cee90915444fe3768831a07b6749edb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "PancakeswapStrategyAddToPoolWithBaseToken",
            "label": "factory",
            "type": "t_contract(IPancakeFactory)1305",
            "src": "contracts/strategies/pancake/PancakeswapStrategyAddToPoolWithBaseToken.sol:28"
          },
          {
            "contract": "PancakeswapStrategyAddToPoolWithBaseToken",
            "label": "router",
            "type": "t_contract(IPancakeRouterV2)12057",
            "src": "contracts/strategies/pancake/PancakeswapStrategyAddToPoolWithBaseToken.sol:29"
          }
        ],
        "types": {
          "t_contract(IPancakeFactory)1305": {
            "label": "contract IPancakeFactory"
          },
          "t_contract(IPancakeRouterV2)12057": {
            "label": "contract IPancakeRouterV2"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "33bb3c06392dee52cafe42531c940426f443b00b371a719ce5c6fbb961efc6d6": {
      "address": "0x02EDc508a1dB9B9b26a5419c10C5F5DFd15b3dBD",
      "txHash": "0xb762d0c815c9f59f19dd2ea2d0e4862001d1d15ba715c034c36284140b81dc74",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "PancakeswapStrategyAddToPoolWithoutBaseToken",
            "label": "factory",
            "type": "t_contract(IPancakeFactory)1305",
            "src": "contracts/strategies/pancake/PancakeswapStrategyAddToPoolWithoutBaseToken.sol:27"
          },
          {
            "contract": "PancakeswapStrategyAddToPoolWithoutBaseToken",
            "label": "router",
            "type": "t_contract(IPancakeRouterV2)12057",
            "src": "contracts/strategies/pancake/PancakeswapStrategyAddToPoolWithoutBaseToken.sol:28"
          }
        ],
        "types": {
          "t_contract(IPancakeFactory)1305": {
            "label": "contract IPancakeFactory"
          },
          "t_contract(IPancakeRouterV2)12057": {
            "label": "contract IPancakeRouterV2"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "277af929f21b0c7ed10b502a55a276bd4011e1635a6bd77cc2fdd9fc340760e6": {
      "address": "0xa3d56F85c7dcA1A7799F90aAA2230eE5e2B8A14e",
      "txHash": "0x3cc6b22b90ff6d9038d8a685999e5275d8901b6a2f05dbd8eb0673c812842906",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "PancakeswapStrategyLiquidate",
            "label": "factory",
            "type": "t_contract(IPancakeFactory)1305",
            "src": "contracts/strategies/pancake/PancakeswapStrategyLiquidate.sol:27"
          },
          {
            "contract": "PancakeswapStrategyLiquidate",
            "label": "router",
            "type": "t_contract(IPancakeRouterV2)12057",
            "src": "contracts/strategies/pancake/PancakeswapStrategyLiquidate.sol:28"
          }
        ],
        "types": {
          "t_contract(IPancakeFactory)1305": {
            "label": "contract IPancakeFactory"
          },
          "t_contract(IPancakeRouterV2)12057": {
            "label": "contract IPancakeRouterV2"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b642c4fd6ce78191a7a9539cc627d78f53884cea3ce5e759dc36e02ef636a55d": {
      "address": "0x453BFb3C959fb664b82dc01B6B674723433de6aA",
      "txHash": "0xd08236a7a6dfa30c02224a358c5623653e137f73058e1c28253c126e8d458c90",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "factory",
            "type": "t_contract(IPancakeFactory)1305",
            "src": "contracts/workers/PancakeswapWorker.sol:89"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "masterChef",
            "type": "t_contract(IPancakeMasterChef)11425",
            "src": "contracts/workers/PancakeswapWorker.sol:90"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "router",
            "type": "t_contract(IPancakeRouterV2)12057",
            "src": "contracts/workers/PancakeswapWorker.sol:91"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "lpToken",
            "type": "t_contract(IPancakePair)1547",
            "src": "contracts/workers/PancakeswapWorker.sol:92"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "wNative",
            "type": "t_address",
            "src": "contracts/workers/PancakeswapWorker.sol:93"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "name",
            "type": "t_string_storage",
            "src": "contracts/workers/PancakeswapWorker.sol:94"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "baseToken",
            "type": "t_address",
            "src": "contracts/workers/PancakeswapWorker.sol:95"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "token0",
            "type": "t_address",
            "src": "contracts/workers/PancakeswapWorker.sol:96"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "token1",
            "type": "t_address",
            "src": "contracts/workers/PancakeswapWorker.sol:97"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "cake",
            "type": "t_address",
            "src": "contracts/workers/PancakeswapWorker.sol:98"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "operatingVault",
            "type": "t_address",
            "src": "contracts/workers/PancakeswapWorker.sol:99"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "pid",
            "type": "t_uint256",
            "src": "contracts/workers/PancakeswapWorker.sol:100"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)6683",
            "src": "contracts/workers/PancakeswapWorker.sol:101"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/workers/PancakeswapWorker.sol:103"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "feeDenom",
            "type": "t_uint256",
            "src": "contracts/workers/PancakeswapWorker.sol:104"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "harvestThreshold",
            "type": "t_uint256",
            "src": "contracts/workers/PancakeswapWorker.sol:107"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "harvestPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/workers/PancakeswapWorker.sol:108"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "strategies",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/workers/PancakeswapWorker.sol:111"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "approvedStrategies",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/workers/PancakeswapWorker.sol:112"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "shares",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/workers/PancakeswapWorker.sol:115"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "totalShare",
            "type": "t_uint256",
            "src": "contracts/workers/PancakeswapWorker.sol:116"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "positionIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/workers/PancakeswapWorker.sol:117"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "treasuryFeeBps",
            "type": "t_uint256",
            "src": "contracts/workers/PancakeswapWorker.sol:118"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "isEnabled",
            "type": "t_bool",
            "src": "contracts/workers/PancakeswapWorker.sol:119"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "clientFeesBps",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/workers/PancakeswapWorker.sol:120"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "okHarvesters",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/workers/PancakeswapWorker.sol:121"
          }
        ],
        "types": {
          "t_contract(IPancakeFactory)1305": {
            "label": "contract IPancakeFactory"
          },
          "t_contract(IPancakeMasterChef)11425": {
            "label": "contract IPancakeMasterChef"
          },
          "t_contract(IPancakeRouterV2)12057": {
            "label": "contract IPancakeRouterV2"
          },
          "t_contract(IPancakePair)1547": {
            "label": "contract IPancakePair"
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IProtocolManager)6683": {
            "label": "contract IProtocolManager"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "54a50f35b40e38b7b7e607154d368f11709988cd8b52db9f375c00e1ecf5edb3": {
      "address": "0xF028747024Eea3Ee39Db123B2110A931a3ADcDdB",
      "txHash": "0xdde664a1d7b755896ce60031800955853d1208056c489330c246a1f4dadce123",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "Client",
            "label": "confirmations",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/Client.sol:31"
          },
          {
            "contract": "Client",
            "label": "additionalWithdrawers",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/Client.sol:34"
          },
          {
            "contract": "Client",
            "label": "withdrawTargets",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/Client.sol:35"
          },
          {
            "contract": "Client",
            "label": "required",
            "type": "t_uint256",
            "src": "contracts/Client.sol:36"
          },
          {
            "contract": "Client",
            "label": "enabledFarms",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/Client.sol:102"
          },
          {
            "contract": "Client",
            "label": "_KIND_",
            "type": "t_string_storage",
            "src": "contracts/Client.sol:105"
          },
          {
            "contract": "Client",
            "label": "_CLIENT_NAME_",
            "type": "t_string_storage",
            "src": "contracts/Client.sol:106"
          },
          {
            "contract": "Client",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)6683",
            "src": "contracts/Client.sol:109"
          },
          {
            "contract": "Client",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)6508",
            "src": "contracts/Client.sol:111"
          },
          {
            "contract": "Client",
            "label": "whitelistedUsers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/Client.sol:114"
          },
          {
            "contract": "Client",
            "label": "whitelistedOperators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/Client.sol:115"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IProtocolManager)6683": {
            "label": "contract IProtocolManager"
          },
          "t_contract(IFeeCollector)6508": {
            "label": "contract IFeeCollector"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}

{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x454E7541Fd56dbDBBEc79fD2eEcDF21B7e2a84E1",
    "txHash": "0x98e63fbb9f6728dc656299aad349e4e177e275839f528728c283da83e47901d2"
  },
  "proxies": [
    {
      "address": "0x8f5Ccf63976338CcD02f0eB3C6A5753c5468ABC0",
      "txHash": "0x87adaedbe42406d8206f2774944be1376599615e6460c151f92d99f4570b0bc3",
      "kind": "transparent"
    },
    {
      "address": "0x6Ea1d3fC73dd2207F97c74715373A7A4f432dfe5",
      "txHash": "0xd9140c46500a0c000294c42d765ec089d22cb394b793909f560ac7c34aa0aab0",
      "kind": "transparent"
    },
    {
      "address": "0x3FbD9e47Fc85C6b489639E9D0414e1Aac1841FaC",
      "txHash": "0x9a54530dcda99479fe1f268d28637353ad2b4b95d19ed2886aa44565f8866d97",
      "kind": "transparent"
    },
    {
      "address": "0xEcB919458700157D5a4D15D472D38727b09644DD",
      "txHash": "0x5295c0e72ffee09215fce49d7a87e032097b0d287c9cdaf805e9c2a89f42949b",
      "kind": "transparent"
    },
    {
      "address": "0xcC4d7158760c85D48AfF142D78b06919a4852BE5",
      "txHash": "0x1cd5ef5e72abfa7cfc523103c3717366d2e9a468c86dfa7aea58b57972b1fdd3",
      "kind": "transparent"
    },
    {
      "address": "0x2F9322016f683E328b9501072957Bc42D1cC2bb9",
      "txHash": "0x9023228bc6e3e2027737b581c845c70951034ca967179e5154bbd88b6aca6806",
      "kind": "transparent"
    },
    {
      "address": "0x24676a9A5952f6B3381CA264E0FeCe4308E3A935",
      "txHash": "0x0ca89a47ac9f9107469b253a98195fedd783e1516894cf59330543c199025ab2",
      "kind": "transparent"
    },
    {
      "address": "0x39728b3700Ec9C79ffB7C462e39BB6c3a683B94F",
      "txHash": "0x2837ce65ac99c7a2d0d9caec89b0607a6c8ad93be211425a40a6c74ec1ac7421",
      "kind": "transparent"
    },
    {
      "address": "0x0cDD4Bb2756266d3b097Ba87dbB2d90cC3141c3F",
      "txHash": "0xdab62471953a1373b05bc74752951df72846e01d8de041dfb911609900c7b6e2",
      "kind": "transparent"
    },
    {
      "address": "0x5AB100ABE5806640eECDe0e44f3BaCCBbB252998",
      "txHash": "0x62f7c0d0971dd80f32393033a24019d85de31c42cb95f9ca036316ce339c1129",
      "kind": "transparent"
    },
    {
      "address": "0x3b349d1326b3777A578342c87d8b60f75078BAdc",
      "txHash": "0xf20a1e39ff79a703df1d7bf0fee2f39bac8c87acee6efe75049101a5c20c3436",
      "kind": "transparent"
    },
    {
      "address": "0xaA6F53894d5a935e2611514997c388BEbc879189",
      "txHash": "0xb464eb4b6cd5281d069adc80241ba66680b7b22be38ac3f3c23f3fed37ccb8ce",
      "kind": "transparent"
    },
    {
      "address": "0x6296Cd62CB31b78482Dc2102117787f3f4d4bD33",
      "txHash": "0x4a8658f745782b61884e0bc08416942063c8fc49d1d5f22a35e19d969cfd2a4e",
      "kind": "transparent"
    },
    {
      "address": "0xd0F8ECBe9cAE077659af6207bf8900cBe80831Ac",
      "txHash": "0xb8d9f42e67afe1be100aa49a51a8c60a17281710c1e528c09a10cf8eeeb9a610",
      "kind": "transparent"
    },
    {
      "address": "0x544b7D1BBb7177706E87c63272D382445Cd7a61B",
      "txHash": "0x9c1376483d158e0c27929a6a6bc6ee70f71b94df876b5b3ac1f804bacf569cc3",
      "kind": "transparent"
    },
    {
      "address": "0xfc36cb9f541F2087aA7C286289aAAFa57Ef3C841",
      "txHash": "0xcfba671e2e6cc895556c8c4d6d0fe1f79c53c2fffd01a37ff1cd6bed71641991",
      "kind": "transparent"
    },
    {
      "address": "0xedA3146DE9CE1C38C99C1c908bd173f77ec6132A",
      "txHash": "0x886488767f69efbdf154b7aa188b8fef01f8af74257d433becd1241d35ad0a8d",
      "kind": "transparent"
    },
    {
      "address": "0x1b45942d198E84b146B082971535D42753978D6A",
      "txHash": "0x5ced902b6d6631e8a63f55e08c6f06e742d2fe010b10eddac14e615231c472b1",
      "kind": "transparent"
    },
    {
      "address": "0x75be00109546ad943DBadd17E89952638C31d209",
      "txHash": "0xc81d02f832aca1756ec0bd0194220bac7555c8dc62615781a42a95f228072794",
      "kind": "transparent"
    },
    {
      "address": "0x0530AaEFD93d4F18678d9065720Fb41ADD599072",
      "txHash": "0x94719295adffda22aeb91fe20d38dc720ec10acc236ede0d42d969354cf80122",
      "kind": "transparent"
    },
    {
      "address": "0xE115146e9aA11a2020bC5705Ab55C16c71F3460D",
      "txHash": "0x19f1f34437a9d49a8931ba8b0640fb8eeeed881895cdf74870aa60c243f57407",
      "kind": "transparent"
    },
    {
      "address": "0x5a1ef2d90D743c0AfE36BD171bEf6028Ef957341",
      "txHash": "0x67020f728f148e4fcab9fe14751a813baba0bb751eca4233ab9a6eeb966ad1ee",
      "kind": "transparent"
    },
    {
      "address": "0x18C9f5D77116acaaa423AB83B84d1A9821050Ef8",
      "txHash": "0xae072dcac361396392276abb03038192ee1b51b0c4c50a4903ba8694bf6176f4",
      "kind": "transparent"
    },
    {
      "address": "0xBBC4E25aAc6B595447A7176DB0dEc95f25684FD4",
      "txHash": "0xbe0117a63899e771eb52c5e6e87e9fca11d482aa036305ca8526a7dbbd659d23",
      "kind": "transparent"
    },
    {
      "address": "0x3b1859e1Bbb3ee2e87dCde4f519F1f83974149C6",
      "txHash": "0xe8d15f0a2685c619266c61e20ca06bf499195d1e5f6d511c4b90dc6a9dbafb2b",
      "kind": "transparent"
    },
    {
      "address": "0xb5B39Ff4458d8aDEFA493CfB98eEE3190af8dA19",
      "txHash": "0x0e769489b1d9a285f26768b19b889109bbddef4819df3e7107e0ee1c1a0cabc8",
      "kind": "transparent"
    },
    {
      "address": "0x7D6F2D4bCD0a7DB3B690714124a30caCDE19791e",
      "txHash": "0x5f32cb2b504c35e45b32e2c073ab7b2aa02e2b9d7fec7e31539befa04ea4b8d0",
      "kind": "transparent"
    },
    {
      "address": "0xB17e65D974c84fe85C64712221974654E3148d5f",
      "kind": "transparent"
    }
  ],
  "impls": {
    "c4bd003586cc6c262181dccf414f979e233ca5ca42d20c43448bacccc8e6bf88": {
      "address": "0xccFc056Ba59d9A37cE1756EEe55FE9A97EEfC8CB",
      "txHash": "0xa9fcb5ed9466cc506afeb0669496887ac1ff4eb0944aae962de01edfa0763c62",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedClients",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/ProtocolManager.sol:83"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedVaults",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/ProtocolManager.sol:87"
          },
          {
            "contract": "ProtocolManager",
            "label": "tokenToVault",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/ProtocolManager.sol:90"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedVaultConfigs",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/ProtocolManager.sol:94"
          },
          {
            "contract": "ProtocolManager",
            "label": "checkIfApprovedBountyCollectors",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/ProtocolManager.sol:98"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedBountyCollectors",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/ProtocolManager.sol:102"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedStrategiesCheck",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/ProtocolManager.sol:105"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedStrategies",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/ProtocolManager.sol:109"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedNativeRelayer",
            "type": "t_address",
            "src": "contracts/ProtocolManager.sol:112"
          },
          {
            "contract": "ProtocolManager",
            "label": "whitelistOperatorsList",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/ProtocolManager.sol:115"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedWorkers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/ProtocolManager.sol:118"
          },
          {
            "contract": "ProtocolManager",
            "label": "whitelistedOperators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/ProtocolManager.sol:122"
          },
          {
            "contract": "ProtocolManager",
            "label": "adminContract",
            "type": "t_address",
            "src": "contracts/ProtocolManager.sol:125"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedHarvesters",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/ProtocolManager.sol:127"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "337f1a83576a5a86b9c7a5214bd4bbae823461c5a4f0fdf147783550c8d2c7ae": {
      "address": "0x9F3152b644Bc2E53511417946c1fdA34b00527a9",
      "txHash": "0x1a9fb59ff52626ca9746e3d21635a37ecfb78091256842635085c2f00415cf15",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "FeeCollector",
            "label": "fees",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/FeeCollector.sol:37"
          },
          {
            "contract": "FeeCollector",
            "label": "_feeToken",
            "type": "t_address",
            "src": "contracts/FeeCollector.sol:40"
          },
          {
            "contract": "FeeCollector",
            "label": "_feeThreshold",
            "type": "t_uint256",
            "src": "contracts/FeeCollector.sol:41"
          },
          {
            "contract": "FeeCollector",
            "label": "protocolManager",
            "type": "t_contract(ProtocolManager)4851",
            "src": "contracts/FeeCollector.sol:42"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(ProtocolManager)4851": {
            "label": "contract ProtocolManager"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "fb90595e8593fbf330d7412547c4455842b4068cc1e2bcec8e656d2ee5fcc8e8": {
      "address": "0x276577DB9cb79734c514958a94a4654E3577d467",
      "txHash": "0xdebcd752e90fabd4facc5d1164e17753edd7921000f176c6a72a8cc76e276f46",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "Admin",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)6683",
            "src": "contracts/Admin.sol:36"
          },
          {
            "contract": "Admin",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)6508",
            "src": "contracts/Admin.sol:37"
          }
        ],
        "types": {
          "t_contract(IProtocolManager)6683": {
            "label": "contract IProtocolManager"
          },
          "t_contract(IFeeCollector)6508": {
            "label": "contract IFeeCollector"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "170978604f49decbab927011c0f4c1ac8ec139d74ee1b8bf19a5216f5779bf35": {
      "address": "0x076C4c72Da665a78805A72Bb93735b1BFFE14Dcd",
      "txHash": "0x9b51ba9378cd3d72c8d0e7850687a831f584d779142f099dc41d19dc80c4b6b2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "WrappedNativeTokenRelayer",
            "label": "wnative",
            "type": "t_address",
            "src": "contracts/WrappedNativeTokenRelayer.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "93ef62d3346ceaef1282ee1c87a392d00d1acb1dc60dad950fec369a92acffab": {
      "address": "0x01d715A05B341E3328A39A73e2D30a59eDee074C",
      "txHash": "0xcdb3b7fe13a7b0ecf70f4c366610a61bfad6c8be27aa62fff860fa203708cbb0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "VaultConfig",
            "label": "wrappedNativeToken",
            "type": "t_address",
            "src": "contracts/VaultConfig.sol:26"
          },
          {
            "contract": "VaultConfig",
            "label": "wrappedNativeTokenRelayer",
            "type": "t_address",
            "src": "contracts/VaultConfig.sol:28"
          },
          {
            "contract": "VaultConfig",
            "label": "treasuryAccount",
            "type": "t_address",
            "src": "contracts/VaultConfig.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "0cf90797e0e297df455f615111dda39c0a520057d98a3038d5e75c9d98c9b5a1": {
      "address": "0x72F11E20d20dF1010B47e3bd5F090E9c48369666",
      "txHash": "0x0cf4fbd8c6b4794cf48277928c0b37523133bc4f1b5e718ee3d62d3684326271",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "Vault",
            "label": "_IN_EXEC_LOCK",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:67"
          },
          {
            "contract": "Vault",
            "label": "POSITION_ID",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:68"
          },
          {
            "contract": "Vault",
            "label": "STRATEGY",
            "type": "t_address",
            "src": "contracts/Vault.sol:69"
          },
          {
            "contract": "Vault",
            "label": "token",
            "type": "t_address",
            "src": "contracts/Vault.sol:73"
          },
          {
            "contract": "Vault",
            "label": "config",
            "type": "t_contract(IVaultConfig)6875",
            "src": "contracts/Vault.sol:81"
          },
          {
            "contract": "Vault",
            "label": "positions",
            "type": "t_mapping(t_uint256,t_struct(Position)4961_storage)",
            "src": "contracts/Vault.sol:82"
          },
          {
            "contract": "Vault",
            "label": "nextPositionID",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:83"
          },
          {
            "contract": "Vault",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)6508",
            "src": "contracts/Vault.sol:86"
          },
          {
            "contract": "Vault",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)6683",
            "src": "contracts/Vault.sol:88"
          },
          {
            "contract": "Vault",
            "label": "rewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/Vault.sol:91"
          },
          {
            "contract": "Vault",
            "label": "approvedRewardAssigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/Vault.sol:92"
          },
          {
            "contract": "Vault",
            "label": "totalRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/Vault.sol:94"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IVaultConfig)6875": {
            "label": "contract IVaultConfig"
          },
          "t_mapping(t_uint256,t_struct(Position)4961_storage)": {
            "label": "mapping(uint256 => struct Vault.Position)"
          },
          "t_struct(Position)4961_storage": {
            "label": "struct Vault.Position",
            "members": [
              {
                "label": "worker",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "client",
                "type": "t_address"
              }
            ]
          },
          "t_contract(IFeeCollector)6508": {
            "label": "contract IFeeCollector"
          },
          "t_contract(IProtocolManager)6683": {
            "label": "contract IProtocolManager"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "18d1cbfe3f5588aa4d3a49ef83eca22d6abddebfcf93070c43361e2fb877123f": {
      "address": "0xAF2A2c13cA660320502c891Be78E74e2E994C3BE",
      "txHash": "0xf32fc0e07f1c06974c31047da2924c339cee90915444fe3768831a07b6749edb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "PancakeswapStrategyAddToPoolWithBaseToken",
            "label": "factory",
            "type": "t_contract(IPancakeFactory)1305",
            "src": "contracts/strategies/pancake/PancakeswapStrategyAddToPoolWithBaseToken.sol:28"
          },
          {
            "contract": "PancakeswapStrategyAddToPoolWithBaseToken",
            "label": "router",
            "type": "t_contract(IPancakeRouterV2)12057",
            "src": "contracts/strategies/pancake/PancakeswapStrategyAddToPoolWithBaseToken.sol:29"
          }
        ],
        "types": {
          "t_contract(IPancakeFactory)1305": {
            "label": "contract IPancakeFactory"
          },
          "t_contract(IPancakeRouterV2)12057": {
            "label": "contract IPancakeRouterV2"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "33bb3c06392dee52cafe42531c940426f443b00b371a719ce5c6fbb961efc6d6": {
      "address": "0x02EDc508a1dB9B9b26a5419c10C5F5DFd15b3dBD",
      "txHash": "0xb762d0c815c9f59f19dd2ea2d0e4862001d1d15ba715c034c36284140b81dc74",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "PancakeswapStrategyAddToPoolWithoutBaseToken",
            "label": "factory",
            "type": "t_contract(IPancakeFactory)1305",
            "src": "contracts/strategies/pancake/PancakeswapStrategyAddToPoolWithoutBaseToken.sol:27"
          },
          {
            "contract": "PancakeswapStrategyAddToPoolWithoutBaseToken",
            "label": "router",
            "type": "t_contract(IPancakeRouterV2)12057",
            "src": "contracts/strategies/pancake/PancakeswapStrategyAddToPoolWithoutBaseToken.sol:28"
          }
        ],
        "types": {
          "t_contract(IPancakeFactory)1305": {
            "label": "contract IPancakeFactory"
          },
          "t_contract(IPancakeRouterV2)12057": {
            "label": "contract IPancakeRouterV2"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "277af929f21b0c7ed10b502a55a276bd4011e1635a6bd77cc2fdd9fc340760e6": {
      "address": "0xa3d56F85c7dcA1A7799F90aAA2230eE5e2B8A14e",
      "txHash": "0x3cc6b22b90ff6d9038d8a685999e5275d8901b6a2f05dbd8eb0673c812842906",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "PancakeswapStrategyLiquidate",
            "label": "factory",
            "type": "t_contract(IPancakeFactory)1305",
            "src": "contracts/strategies/pancake/PancakeswapStrategyLiquidate.sol:27"
          },
          {
            "contract": "PancakeswapStrategyLiquidate",
            "label": "router",
            "type": "t_contract(IPancakeRouterV2)12057",
            "src": "contracts/strategies/pancake/PancakeswapStrategyLiquidate.sol:28"
          }
        ],
        "types": {
          "t_contract(IPancakeFactory)1305": {
            "label": "contract IPancakeFactory"
          },
          "t_contract(IPancakeRouterV2)12057": {
            "label": "contract IPancakeRouterV2"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b642c4fd6ce78191a7a9539cc627d78f53884cea3ce5e759dc36e02ef636a55d": {
      "address": "0x453BFb3C959fb664b82dc01B6B674723433de6aA",
      "txHash": "0xd08236a7a6dfa30c02224a358c5623653e137f73058e1c28253c126e8d458c90",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "factory",
            "type": "t_contract(IPancakeFactory)1305",
            "src": "contracts/workers/PancakeswapWorker.sol:89"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "masterChef",
            "type": "t_contract(IPancakeMasterChef)11425",
            "src": "contracts/workers/PancakeswapWorker.sol:90"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "router",
            "type": "t_contract(IPancakeRouterV2)12057",
            "src": "contracts/workers/PancakeswapWorker.sol:91"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "lpToken",
            "type": "t_contract(IPancakePair)1547",
            "src": "contracts/workers/PancakeswapWorker.sol:92"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "wNative",
            "type": "t_address",
            "src": "contracts/workers/PancakeswapWorker.sol:93"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "name",
            "type": "t_string_storage",
            "src": "contracts/workers/PancakeswapWorker.sol:94"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "baseToken",
            "type": "t_address",
            "src": "contracts/workers/PancakeswapWorker.sol:95"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "token0",
            "type": "t_address",
            "src": "contracts/workers/PancakeswapWorker.sol:96"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "token1",
            "type": "t_address",
            "src": "contracts/workers/PancakeswapWorker.sol:97"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "cake",
            "type": "t_address",
            "src": "contracts/workers/PancakeswapWorker.sol:98"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "operatingVault",
            "type": "t_address",
            "src": "contracts/workers/PancakeswapWorker.sol:99"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "pid",
            "type": "t_uint256",
            "src": "contracts/workers/PancakeswapWorker.sol:100"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)6683",
            "src": "contracts/workers/PancakeswapWorker.sol:101"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/workers/PancakeswapWorker.sol:103"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "feeDenom",
            "type": "t_uint256",
            "src": "contracts/workers/PancakeswapWorker.sol:104"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "harvestThreshold",
            "type": "t_uint256",
            "src": "contracts/workers/PancakeswapWorker.sol:107"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "harvestPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/workers/PancakeswapWorker.sol:108"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "strategies",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/workers/PancakeswapWorker.sol:111"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "approvedStrategies",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/workers/PancakeswapWorker.sol:112"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "shares",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/workers/PancakeswapWorker.sol:115"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "totalShare",
            "type": "t_uint256",
            "src": "contracts/workers/PancakeswapWorker.sol:116"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "positionIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/workers/PancakeswapWorker.sol:117"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "treasuryFeeBps",
            "type": "t_uint256",
            "src": "contracts/workers/PancakeswapWorker.sol:118"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "isEnabled",
            "type": "t_bool",
            "src": "contracts/workers/PancakeswapWorker.sol:119"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "clientFeesBps",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/workers/PancakeswapWorker.sol:120"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "okHarvesters",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/workers/PancakeswapWorker.sol:121"
          }
        ],
        "types": {
          "t_contract(IPancakeFactory)1305": {
            "label": "contract IPancakeFactory"
          },
          "t_contract(IPancakeMasterChef)11425": {
            "label": "contract IPancakeMasterChef"
          },
          "t_contract(IPancakeRouterV2)12057": {
            "label": "contract IPancakeRouterV2"
          },
          "t_contract(IPancakePair)1547": {
            "label": "contract IPancakePair"
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IProtocolManager)6683": {
            "label": "contract IProtocolManager"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "54a50f35b40e38b7b7e607154d368f11709988cd8b52db9f375c00e1ecf5edb3": {
      "address": "0xF028747024Eea3Ee39Db123B2110A931a3ADcDdB",
      "txHash": "0xdde664a1d7b755896ce60031800955853d1208056c489330c246a1f4dadce123",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "Client",
            "label": "confirmations",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/Client.sol:31"
          },
          {
            "contract": "Client",
            "label": "additionalWithdrawers",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/Client.sol:34"
          },
          {
            "contract": "Client",
            "label": "withdrawTargets",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/Client.sol:35"
          },
          {
            "contract": "Client",
            "label": "required",
            "type": "t_uint256",
            "src": "contracts/Client.sol:36"
          },
          {
            "contract": "Client",
            "label": "enabledFarms",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/Client.sol:102"
          },
          {
            "contract": "Client",
            "label": "_KIND_",
            "type": "t_string_storage",
            "src": "contracts/Client.sol:105"
          },
          {
            "contract": "Client",
            "label": "_CLIENT_NAME_",
            "type": "t_string_storage",
            "src": "contracts/Client.sol:106"
          },
          {
            "contract": "Client",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)6683",
            "src": "contracts/Client.sol:109"
          },
          {
            "contract": "Client",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)6508",
            "src": "contracts/Client.sol:111"
          },
          {
            "contract": "Client",
            "label": "whitelistedUsers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/Client.sol:114"
          },
          {
            "contract": "Client",
            "label": "whitelistedOperators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/Client.sol:115"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IProtocolManager)6683": {
            "label": "contract IProtocolManager"
          },
          "t_contract(IFeeCollector)6508": {
            "label": "contract IFeeCollector"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "bc8cf1376b39176f1619ba7619e07290eab5c331a7d3762bae6f3fee02c66bef": {
      "address": "0xb924116A1dabc53293299b4340610a95D6Eb8E0C",
      "txHash": "0xf978a6b83cdb5976a833c1c63dee52c3371438f7146cccc4112c58101f6c5ba0",
      "layout": {
        "storage": [
          {
            "label": "initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "label": "initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeSafe",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeSafe",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeSafe",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "label": "_notEntered",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IPancakeFactory)3072",
            "contract": "PancakeswapWorkerV2",
            "src": "contracts\\workers\\PancakeswapWorkerV2.sol:89"
          },
          {
            "label": "masterChef",
            "offset": 0,
            "slot": "202",
            "type": "t_contract(IMasterChef)15258",
            "contract": "PancakeswapWorkerV2",
            "src": "contracts\\workers\\PancakeswapWorkerV2.sol:90"
          },
          {
            "label": "router",
            "offset": 0,
            "slot": "203",
            "type": "t_contract(IPancakeRouterV2)16035",
            "contract": "PancakeswapWorkerV2",
            "src": "contracts\\workers\\PancakeswapWorkerV2.sol:91"
          },
          {
            "label": "lpToken",
            "offset": 0,
            "slot": "204",
            "type": "t_contract(IPancakePair)3314",
            "contract": "PancakeswapWorkerV2",
            "src": "contracts\\workers\\PancakeswapWorkerV2.sol:92"
          },
          {
            "label": "wNative",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "PancakeswapWorkerV2",
            "src": "contracts\\workers\\PancakeswapWorkerV2.sol:93"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "206",
            "type": "t_string_storage",
            "contract": "PancakeswapWorkerV2",
            "src": "contracts\\workers\\PancakeswapWorkerV2.sol:94"
          },
          {
            "label": "baseToken",
            "offset": 0,
            "slot": "207",
            "type": "t_address",
            "contract": "PancakeswapWorkerV2",
            "src": "contracts\\workers\\PancakeswapWorkerV2.sol:95"
          },
          {
            "label": "token0",
            "offset": 0,
            "slot": "208",
            "type": "t_address",
            "contract": "PancakeswapWorkerV2",
            "src": "contracts\\workers\\PancakeswapWorkerV2.sol:96"
          },
          {
            "label": "token1",
            "offset": 0,
            "slot": "209",
            "type": "t_address",
            "contract": "PancakeswapWorkerV2",
            "src": "contracts\\workers\\PancakeswapWorkerV2.sol:97"
          },
          {
            "label": "cake",
            "offset": 0,
            "slot": "210",
            "type": "t_address",
            "contract": "PancakeswapWorkerV2",
            "src": "contracts\\workers\\PancakeswapWorkerV2.sol:98"
          },
          {
            "label": "operatingVault",
            "offset": 0,
            "slot": "211",
            "type": "t_address",
            "contract": "PancakeswapWorkerV2",
            "src": "contracts\\workers\\PancakeswapWorkerV2.sol:99"
          },
          {
            "label": "pid",
            "offset": 0,
            "slot": "212",
            "type": "t_uint256",
            "contract": "PancakeswapWorkerV2",
            "src": "contracts\\workers\\PancakeswapWorkerV2.sol:100"
          },
          {
            "label": "protocolManager",
            "offset": 0,
            "slot": "213",
            "type": "t_contract(IProtocolManager)8617",
            "contract": "PancakeswapWorkerV2",
            "src": "contracts\\workers\\PancakeswapWorkerV2.sol:101"
          },
          {
            "label": "fee",
            "offset": 0,
            "slot": "214",
            "type": "t_uint256",
            "contract": "PancakeswapWorkerV2",
            "src": "contracts\\workers\\PancakeswapWorkerV2.sol:103"
          },
          {
            "label": "feeDenom",
            "offset": 0,
            "slot": "215",
            "type": "t_uint256",
            "contract": "PancakeswapWorkerV2",
            "src": "contracts\\workers\\PancakeswapWorkerV2.sol:104"
          },
          {
            "label": "harvestThreshold",
            "offset": 0,
            "slot": "216",
            "type": "t_uint256",
            "contract": "PancakeswapWorkerV2",
            "src": "contracts\\workers\\PancakeswapWorkerV2.sol:107"
          },
          {
            "label": "harvestPath",
            "offset": 0,
            "slot": "217",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PancakeswapWorkerV2",
            "src": "contracts\\workers\\PancakeswapWorkerV2.sol:108"
          },
          {
            "label": "strategies",
            "offset": 0,
            "slot": "218",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PancakeswapWorkerV2",
            "src": "contracts\\workers\\PancakeswapWorkerV2.sol:111"
          },
          {
            "label": "approvedStrategies",
            "offset": 0,
            "slot": "219",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PancakeswapWorkerV2",
            "src": "contracts\\workers\\PancakeswapWorkerV2.sol:112"
          },
          {
            "label": "shares",
            "offset": 0,
            "slot": "220",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "PancakeswapWorkerV2",
            "src": "contracts\\workers\\PancakeswapWorkerV2.sol:115"
          },
          {
            "label": "totalShare",
            "offset": 0,
            "slot": "221",
            "type": "t_uint256",
            "contract": "PancakeswapWorkerV2",
            "src": "contracts\\workers\\PancakeswapWorkerV2.sol:116"
          },
          {
            "label": "positionIds",
            "offset": 0,
            "slot": "222",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "PancakeswapWorkerV2",
            "src": "contracts\\workers\\PancakeswapWorkerV2.sol:117"
          },
          {
            "label": "treasuryFeeBps",
            "offset": 0,
            "slot": "223",
            "type": "t_uint256",
            "contract": "PancakeswapWorkerV2",
            "src": "contracts\\workers\\PancakeswapWorkerV2.sol:118"
          },
          {
            "label": "isEnabled",
            "offset": 0,
            "slot": "224",
            "type": "t_bool",
            "contract": "PancakeswapWorkerV2",
            "src": "contracts\\workers\\PancakeswapWorkerV2.sol:119"
          },
          {
            "label": "clientFeesBps",
            "offset": 0,
            "slot": "225",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PancakeswapWorkerV2",
            "src": "contracts\\workers\\PancakeswapWorkerV2.sol:120"
          },
          {
            "label": "okHarvesters",
            "offset": 0,
            "slot": "226",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PancakeswapWorkerV2",
            "src": "contracts\\workers\\PancakeswapWorkerV2.sol:121"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IMasterChef)15258": {
            "label": "contract IMasterChef",
            "numberOfBytes": "20"
          },
          "t_contract(IPancakeFactory)3072": {
            "label": "contract IPancakeFactory",
            "numberOfBytes": "20"
          },
          "t_contract(IPancakePair)3314": {
            "label": "contract IPancakePair",
            "numberOfBytes": "20"
          },
          "t_contract(IPancakeRouterV2)16035": {
            "label": "contract IPancakeRouterV2",
            "numberOfBytes": "20"
          },
          "t_contract(IProtocolManager)8617": {
            "label": "contract IProtocolManager",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "0a1eeaa7deff075ff2b23a521295b2db455f9d44d1d630184e45b740a5a24cb9": {
      "address": "0x150f59fcD77bc0fbD37229e56fB77650CE6D9c76",
      "txHash": "0x485d053f38e43d4dbb6b7c58eaad72e9d19bcefbcb80dc6b2ae6fd3d9fab7bf8",
      "layout": {
        "storage": [
          {
            "label": "initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "label": "initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeSafe",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeSafe",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeSafe",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "label": "_notEntered",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IPancakeFactory)556",
            "contract": "PancakeswapStrategyLiquidate",
            "src": "contracts\\strategies\\pancake\\PancakeswapStrategyLiquidate.sol:30"
          },
          {
            "label": "router",
            "offset": 0,
            "slot": "202",
            "type": "t_contract(IPancakeRouterV2)1847",
            "contract": "PancakeswapStrategyLiquidate",
            "src": "contracts\\strategies\\pancake\\PancakeswapStrategyLiquidate.sol:31"
          },
          {
            "label": "protocolManager",
            "offset": 0,
            "slot": "203",
            "type": "t_contract(IProtocolManager)970",
            "contract": "PancakeswapStrategyLiquidate",
            "src": "contracts\\strategies\\pancake\\PancakeswapStrategyLiquidate.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IPancakeFactory)556": {
            "label": "contract IPancakeFactory",
            "numberOfBytes": "20"
          },
          "t_contract(IPancakeRouterV2)1847": {
            "label": "contract IPancakeRouterV2",
            "numberOfBytes": "20"
          },
          "t_contract(IProtocolManager)970": {
            "label": "contract IProtocolManager",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      },
      "allAddresses": [
        "0x150f59fcD77bc0fbD37229e56fB77650CE6D9c76",
        "0xa0298D8a922f1B573836C216bC9a4a843127e889"
      ]
    }
  }
}

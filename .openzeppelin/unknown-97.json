{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x58fcFD7d07748bc41dbFaB000742ceD489047B97",
    "txHash": "0x63a69e716fe389172c2e45b89894a30312ccc3a23ece4d9171763b6186139e47"
  },
  "proxies": [
    {
      "address": "0x42991Fad54cA10F0C0A57945991Bfba423F37249",
      "txHash": "0xab30af9c00fff9c28f62e8d1fcc93a85576bb161e8a281a5fca3a356210f4063",
      "kind": "transparent"
    },
    {
      "address": "0x795511BEdb51B1d28549896a4b5e5699579F1aEA",
      "txHash": "0x3231c66b7916155cad81917250b79fe1619e43f884ed2ce054a996f9bdf70443",
      "kind": "transparent"
    },
    {
      "address": "0x66194F8FFcA81c476554183F953089019936D9F0",
      "txHash": "0xe7d67c90044b261feeb6ba48ac7333cac7ba30fa0ca9f3c85d898b2f26e7b20e",
      "kind": "transparent"
    },
    {
      "address": "0xB6b260Cb62D87BEBf38871ed780B51203cB35d89",
      "txHash": "0xe898baa11764717b2371547f10b24db8f234d5e3c8e4a0dbfeb96bcbb64e49da",
      "kind": "transparent"
    },
    {
      "address": "0x62957B015e5389273c269afaf583b960Fb0Ef3FC",
      "txHash": "0x3f9d61d4807c5ce28819fb885b5b108466a6ce6ab09e2fbd5233b51c88b71d5d",
      "kind": "transparent"
    },
    {
      "address": "0xE5d0B7d609c057ad1CE2F27D49Aad80144936CA7",
      "txHash": "0x17b989881698d5f6a8293d281e8826dc9c733dd417c6defa5a606a1d03bba577",
      "kind": "transparent"
    },
    {
      "address": "0x5C024fEf8CFf1C154A5de991387cDaF98F3c7222",
      "txHash": "0x5c7820c38d2b9fb9daa773329f92682d4ca6efa1aacfa489e83d2c0ba31d08bf",
      "kind": "transparent"
    },
    {
      "address": "0x613F72801f2Ef7BC328e22753Ab7Da1866F02067",
      "txHash": "0x274a68553771296852eb2b24a3378a9126565fe1af5b7d68d54e60f9d8a05048",
      "kind": "transparent"
    },
    {
      "address": "0x097ED2FA662c5a58C81d767F15Bc16227DC55C8E",
      "txHash": "0xd4f319521fc4ea51d84ef3ec246d81c96ab59f7fb28c4baa8b098eadd2ff8a9d",
      "kind": "transparent"
    },
    {
      "address": "0x7084D729A4240F458167cE33e0329EA0d29c9D5a",
      "txHash": "0x95648b581777d3aec0e214b7bf68b76bf755dd7c5d7dc7cca7b5fde44b8b0a48",
      "kind": "transparent"
    },
    {
      "address": "0xAA4AAd87114948Aa160F0179568d26b454EdcC2C",
      "txHash": "0xadc3f1be7dd3f61966e0b45eca85db9df8619954b10fd55e7ba33b2b88ee1b4c",
      "kind": "transparent"
    },
    {
      "address": "0x55f4dd762D6f7557dd2e31728e748eED8AFcc188",
      "txHash": "0x69a28b500ece470e59919055c426c120945d392a3b90411959e46c09ebe3818f",
      "kind": "transparent"
    },
    {
      "address": "0x5Ce349eDB15922D78A3eE315C2d45F49C4DbFfE1",
      "txHash": "0xbdedd59c350671a3f6f58aa474a3dc6b2c0e65552a1f271a7a53be062eae4405",
      "kind": "transparent"
    },
    {
      "address": "0xcd27Bc932f87C76ff6249d1d96810bfa4608eF18",
      "txHash": "0x7d80a5f904dc5b5050c25f9f075d41ba8625bf9638cbdca034869627c01e0eea",
      "kind": "transparent"
    },
    {
      "address": "0x7145865A1F6DfcA9764718B36bf114d3aA6460e3",
      "txHash": "0x0690ecac957c5868a3205bdc9430a9ed4f55415b4bbf1fce5599750379705a1d",
      "kind": "transparent"
    },
    {
      "address": "0xc17ff9ff1f0CD69CBe42593A4fA314b56B5809B6",
      "txHash": "0x4aed7983e04764c281e8fc79bed0d8a13ab9528701119c6125b8726bae7d53cd",
      "kind": "transparent"
    },
    {
      "address": "0xf07a50fB889b968AB85A1EB022B830819E416D24",
      "txHash": "0x5a6b11948291474971c4c01457840e1be45ef931bb154b9153ec14659bd0cca0",
      "kind": "transparent"
    },
    {
      "address": "0xF2B51A4959e95c7fA59D1939640A10B53eeBedFB",
      "txHash": "0xa85805476a3b4ff81173f9dd35888c4233809858feb483d67546993f617539de",
      "kind": "transparent"
    },
    {
      "address": "0xd522802222EE597C6550E87472247A86769DABa9",
      "txHash": "0xa80f4bc0f550e88536dfe7e78bfe43e4c14180cd208fa575946861519b61c371",
      "kind": "transparent"
    },
    {
      "address": "0x1d4ee50C09599848c46EeD794eDB86BCEC8e4399",
      "txHash": "0x9f1ce3baf925213412e1581ba48b0b0f948767f0153284141334782a4e2f97e0",
      "kind": "transparent"
    },
    {
      "address": "0xcEF94fE61bbaD3aa21b120dDfe22AE22E341B3E5",
      "txHash": "0x43f8b745d399ec094ec443331f6f0edb9e5175e97be0d7fbea8b71a8373acd4a",
      "kind": "transparent"
    },
    {
      "address": "0xBFDf0eE4B8F7A600fDF8dd438B61C4F0A35F272b",
      "txHash": "0x5044a606afba0451642d2745620c9eef5cde3790069bb26c96292c6864f29cbd",
      "kind": "transparent"
    },
    {
      "address": "0x28CbD344a246Cc65B8943B955D8822de2fA2F110",
      "txHash": "0xe42492d64e8caa38ce0e9e345d095ca84719ed9217f1ef4b00ab98675b984f62",
      "kind": "transparent"
    },
    {
      "address": "0xB25B26F77e86a657eA07177b99A7672c5Cff6c80",
      "txHash": "0xe021b83f95fa242400b7086c308fcce920e421d69fdd6bc2fc005a1cd3b9465e",
      "kind": "transparent"
    },
    {
      "address": "0x844d043AAE9391F9Bc48fD397Ca132860cb43f67",
      "txHash": "0x085640ef541b725080147bafc605076ff5addacf9b7b4b463eba6d495f03b87c",
      "kind": "transparent"
    },
    {
      "address": "0x7FF08c6C3F0EdE44b7d7831b3071e3ad9c1C993A",
      "txHash": "0x2213f2b1804e826ad4015d6aaa9bd87ef77041da05f89861bb7ce97fdc391de1",
      "kind": "transparent"
    },
    {
      "address": "0x66C3c16516be4513B57cf80e8C1503552ae7841a",
      "txHash": "0x3263939a837fecc927b12ed03bac4cb3942cd0154f232c71e6293467a313de99",
      "kind": "transparent"
    },
    {
      "address": "0x647d5223adfb794BdEFBCe77237C4d834Bb211EA",
      "txHash": "0x6c5c161342740dabfe0717851b8d3cb70f1653bb23052d7f44d292f763f2faf5",
      "kind": "transparent"
    },
    {
      "address": "0xA70D3E2EC79165c573dF4Da157F48E51b9B37916",
      "txHash": "0xf16930d5f903b84511b7c5079a44038dcc3b72f99db42bcc0a308c2296ea389a",
      "kind": "transparent"
    },
    {
      "address": "0x97b025F226F4ec2262860A1f9ff93F82c1b029D2",
      "txHash": "0x12fad022b82cf6c866decc8322e60aad54eb5098c850dea4a9d6113c8551c64d",
      "kind": "transparent"
    },
    {
      "address": "0x39cA0ab244A8A12Ef7A049e2E5D89837E87Ff3c9",
      "txHash": "0x296fbc103a273d1e682d4ab2dce8d78f438d82b1274a59a9584af2c582dc76f0",
      "kind": "transparent"
    },
    {
      "address": "0x6Bf54886522711841b6BdCA7Be0a08E989359B58",
      "txHash": "0x239207ecf42c416941b28700349f86073b58ac370b37020fe8eff073745b5f8e",
      "kind": "transparent"
    },
    {
      "address": "0x9ceb0082439b53B6cE625b1CdA71Eb99e3ACD610",
      "txHash": "0x553f917c0b4a68b70222cf358d81c7038001778eb8fd776025e0d7ef6ef27903",
      "kind": "transparent"
    },
    {
      "address": "0x67d1E743fbc890F2F506E8743A40DBec237d5669",
      "txHash": "0xec2e77420eb4e414ec99c25e88a9d23b84cc096f1e8305a32a540cb1d855752f",
      "kind": "transparent"
    },
    {
      "address": "0xb2a5909C45f58693a43F1d062fbe79481DFDB124",
      "txHash": "0x90da1729840c2be4026f7bcce4ba00531017a57f8ede4da173637650f7c9bdd5",
      "kind": "transparent"
    },
    {
      "address": "0x81Fb813F1A900154e442665ce7e5AE9c820AE76a",
      "txHash": "0x98d5fcbbf6ea6417f6201009cf81c2790dbd588bb5ff792f9cb208ab94c6c41c",
      "kind": "transparent"
    },
    {
      "address": "0x2710C784f565dAeaa3B1f9C7719066177F82535b",
      "txHash": "0x8314237c441f65c9a3cec01a5b1ec1ce47fcb8408a1975313208a75d7187dc2f",
      "kind": "transparent"
    },
    {
      "address": "0x74758233702Cf2f28DCa58E380AD8144363F3EE4",
      "txHash": "0x994ce1cc2e8747f0cd7e68033108809accc4d8a25967cc4ae19ec373368af0d8",
      "kind": "transparent"
    },
    {
      "address": "0xA1648C2d8883060bf2D83Ca037650409487d8bD3",
      "txHash": "0x86bd672a32f3b85e1dbc836206c3ff720ea599d0c70091127f4c41c95851de62",
      "kind": "transparent"
    },
    {
      "address": "0x74F07D83fCdbFb9e294Ab6E3082cd2a8ec251Ed7",
      "txHash": "0x9988cd10b3798a5029586527d820b491d3fadb9060e9cb2edfcb7bd6339869a8",
      "kind": "transparent"
    },
    {
      "address": "0x15b8F0fF52306bae2e3fCD367EE875196AB7F8F3",
      "txHash": "0x725881e8fa955b8a1a738b693e0320f8080b232c67ada921eb51481932dbc84f",
      "kind": "transparent"
    },
    {
      "address": "0x47b40e076Ebd3826ba1D1CA92079AEf2E87303A4",
      "txHash": "0x24d6421d663a13a0f24edbd738f6e63c9f157bf252105f88542a74aeb1a1d0d3",
      "kind": "transparent"
    },
    {
      "address": "0x942b4206fB98877Af79fd70a9BABfF15f2930eb6",
      "txHash": "0x7e3bd90e4a81bf6e6caf74ac0ac423963f1a24fb83fc4fb083c30c3c28b0ebea",
      "kind": "transparent"
    },
    {
      "address": "0x2642abEcd2E164c8b4C5AC2016c5EF63DFc7163d",
      "txHash": "0x5c06446e9bbbee9d77b44bdcb6bbe32a6474ea9e4924b6c18960f8fc554baade",
      "kind": "transparent"
    },
    {
      "address": "0xB17e65D974c84fe85C64712221974654E3148d5f",
      "txHash": "0x7d00af1dae469bf3606d87b884a99c4730f587b6ed9d725181a8152c7b72f8f9",
      "kind": "transparent"
    },
    {
      "address": "0x23d1795831F1a618990213c4f539941D743162a2",
      "txHash": "0x1e4c909bcdd9499c4f4643d3cb0dcdfee587620571b139b22e20453417cae36d",
      "kind": "transparent"
    },
    {
      "address": "0x06b714Aa5a827a22CB5a66AC978C7962a2C9B6a0",
      "txHash": "0x154324cf7fdb55850945f1a62de5d832b19709d25833b8068ee1246a2d99d821",
      "kind": "transparent"
    },
    {
      "address": "0x28DF5D376Ad33a64Ed72CDF46ce14c8014e37a74",
      "txHash": "0x2904d92187bd89b19d19895731d2f9a43b8f4f11f21e3e86fe552e3ad8c91b89",
      "kind": "transparent"
    },
    {
      "address": "0x56810eBa003389bBA354E306D0e05b81227Bf582",
      "txHash": "0x2a251aa4e0d32453717a512e27294630e66b6c5f3678c5de2338a16cab739b0c",
      "kind": "transparent"
    },
    {
      "address": "0xFDF1C9c222e394cB043f2f12a1bfA50f3733CDE0",
      "txHash": "0x426a1f4ae3192c0cc2054c192dfba9b3cfd56b584e7fd544cc6a69a516189609",
      "kind": "transparent"
    },
    {
      "address": "0xd323871FDC8f2F23653b6A2Dc497FAd8a6c9Ab05",
      "txHash": "0x624f0b0f021b1617f7e9382e62c31fe4d1b6550dfb5c7fa5a64deca942c9b536",
      "kind": "transparent"
    },
    {
      "address": "0xed54D3537E974259ad2cC82a4F925ab7d5fAf410",
      "txHash": "0x2d667f0229640bb76ef32f5b412e6196969b44a5887aa7d170e0976620b197d1",
      "kind": "transparent"
    },
    {
      "address": "0xf9d9b0b20969639de844ceeA22aF2Ff1735513d5",
      "txHash": "0x4733b0485168d07c9739ea814a205d6e6d15faecb3eb2fb7c364d58b66002f02",
      "kind": "transparent"
    },
    {
      "address": "0x7D0933E71d857AAC259acCC973286CD99ba05afD",
      "txHash": "0x1f342eb859e8caca9a6d951b0aec82a908c4ef4717ad2e7f5b9eb527ef1f8efe",
      "kind": "transparent"
    },
    {
      "address": "0x811a4e20C57c7C4Fc979ea440C4DB9030b7458C4",
      "txHash": "0xa95551ad08fe60b04a5cad22aabc66a9fdd5cc103e985d396da56b49eebb6bd7",
      "kind": "transparent"
    },
    {
      "address": "0xBE01dAaa0236A3f747F9CA9040F5dDB62E3de46D",
      "txHash": "0xfadc2003c53909a383b6209e22eba12fddcb56b7a123e36f6074f231364282e0",
      "kind": "transparent"
    }
  ],
  "impls": {
    "567d1fd4122a7469f19c7304ff9d3a77f91f61c566618599ffd99d2f3df3a2b1": {
      "address": "0x3c0A3E6200b429c66Eb685a3a99F9009cACb67Ec",
      "txHash": "0xc48834a18cf1837535b4c0e8b9fedd7481e539a9c6282ea41f68ac3a3d085353",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedClients",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\ProtocolManager.sol:77"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedVaults",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\ProtocolManager.sol:81"
          },
          {
            "contract": "ProtocolManager",
            "label": "tokenToVault",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts\\ProtocolManager.sol:84"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedVaultConfigs",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\ProtocolManager.sol:88"
          },
          {
            "contract": "ProtocolManager",
            "label": "checkIfApprovedBountyCollectors",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\ProtocolManager.sol:92"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedBountyCollectors",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\ProtocolManager.sol:96"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedStrategiesCheck",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\ProtocolManager.sol:99"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedStrategies",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\ProtocolManager.sol:103"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedNativeRelayer",
            "type": "t_address",
            "src": "contracts\\ProtocolManager.sol:106"
          },
          {
            "contract": "ProtocolManager",
            "label": "whitelistOperatorsList",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\ProtocolManager.sol:109"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedWorkers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\ProtocolManager.sol:112"
          },
          {
            "contract": "ProtocolManager",
            "label": "whitelistedOperators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\ProtocolManager.sol:116"
          },
          {
            "contract": "ProtocolManager",
            "label": "adminContract",
            "type": "t_address",
            "src": "contracts\\ProtocolManager.sol:119"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "aa5ea666875acb775b10a7c83895ca096f396a1e78efd5aedb08a8367acc5332": {
      "address": "0xB96041e2694B12de8BF47Be35430AD645B895D18",
      "txHash": "0x728636dc02db555459c888f03a0ca8cfe4bfdf210ebb93b0eabc54fc7aea2c51",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "FeeCollector",
            "label": "fees",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\FeeCollector.sol:37"
          },
          {
            "contract": "FeeCollector",
            "label": "_feeToken",
            "type": "t_address",
            "src": "contracts\\FeeCollector.sol:40"
          },
          {
            "contract": "FeeCollector",
            "label": "_feeThreshold",
            "type": "t_uint256",
            "src": "contracts\\FeeCollector.sol:41"
          },
          {
            "contract": "FeeCollector",
            "label": "protocolManager",
            "type": "t_contract(ProtocolManager)3919",
            "src": "contracts\\FeeCollector.sol:42"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(ProtocolManager)3919": {
            "label": "contract ProtocolManager"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7646539d4f3e83652e089ef96e4c99e6a7c2ffaba9d9ca3e3fd49a3cb3ad1680": {
      "address": "0x88C85b48066eCc590Cd7625Bb33229A0892B0154",
      "txHash": "0xff19d0e4b32f2e6135eb1906b1073b664cdf2a917e453c529141e9a621b5ff6d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "Admin",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)5480",
            "src": "contracts\\Admin.sol:35"
          },
          {
            "contract": "Admin",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)5320",
            "src": "contracts\\Admin.sol:36"
          }
        ],
        "types": {
          "t_contract(IProtocolManager)5480": {
            "label": "contract IProtocolManager"
          },
          "t_contract(IFeeCollector)5320": {
            "label": "contract IFeeCollector"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "170978604f49decbab927011c0f4c1ac8ec139d74ee1b8bf19a5216f5779bf35": {
      "address": "0xE00292216a1304B88a680c6BaE7f0ac70df2cd0a",
      "txHash": "0x9606a2e3c1dd930da0ee050b37f0569815736fc84f9da0cbea9eaa2609081cff",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "WrappedNativeTokenRelayer",
            "label": "wnative",
            "type": "t_address",
            "src": "contracts\\WrappedNativeTokenRelayer.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "cf20c521d9b8b91141ad3b7c9c1762f83c28df987ec624d67164e055c14b9071": {
      "address": "0xCA92ba1349b229d986a726283cDD834573F22c8F",
      "txHash": "0x3ef4f437003faca2db7e377b095050fb2c71e12fcd39cd622a371142e48a5d61",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "VaultConfig",
            "label": "wrappedNativeToken",
            "type": "t_address",
            "src": "contracts\\VaultConfig.sol:26"
          },
          {
            "contract": "VaultConfig",
            "label": "wrappedNativeTokenRelayer",
            "type": "t_address",
            "src": "contracts\\VaultConfig.sol:28"
          },
          {
            "contract": "VaultConfig",
            "label": "treasuryAccount",
            "type": "t_address",
            "src": "contracts\\VaultConfig.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e9c9429db0caf7cb9eb463cc20660104b166d6771de3d099e5735ba8269c9b0f": {
      "address": "0xA9d6223Af2783436D6cff1021fc3dA3F78009865",
      "txHash": "0x86de2883ed14a11176e5ef6a85ff6d29946e3208dab05b5ceb249167419e57cf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "Vault",
            "label": "_IN_EXEC_LOCK",
            "type": "t_uint256",
            "src": "contracts\\Vault.sol:55"
          },
          {
            "contract": "Vault",
            "label": "POSITION_ID",
            "type": "t_uint256",
            "src": "contracts\\Vault.sol:56"
          },
          {
            "contract": "Vault",
            "label": "STRATEGY",
            "type": "t_address",
            "src": "contracts\\Vault.sol:57"
          },
          {
            "contract": "Vault",
            "label": "token",
            "type": "t_address",
            "src": "contracts\\Vault.sol:61"
          },
          {
            "contract": "Vault",
            "label": "config",
            "type": "t_contract(IVaultConfig)5732",
            "src": "contracts\\Vault.sol:69"
          },
          {
            "contract": "Vault",
            "label": "positions",
            "type": "t_mapping(t_uint256,t_struct(Position)4092_storage)",
            "src": "contracts\\Vault.sol:70"
          },
          {
            "contract": "Vault",
            "label": "nextPositionID",
            "type": "t_uint256",
            "src": "contracts\\Vault.sol:71"
          },
          {
            "contract": "Vault",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)5385",
            "src": "contracts\\Vault.sol:74"
          },
          {
            "contract": "Vault",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)5560",
            "src": "contracts\\Vault.sol:76"
          },
          {
            "contract": "Vault",
            "label": "rewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Vault.sol:79"
          },
          {
            "contract": "Vault",
            "label": "approvedRewardAssigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Vault.sol:80"
          },
          {
            "contract": "Vault",
            "label": "totalRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Vault.sol:82"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IVaultConfig)5732": {
            "label": "contract IVaultConfig"
          },
          "t_mapping(t_uint256,t_struct(Position)4092_storage)": {
            "label": "mapping(uint256 => struct Vault.Position)"
          },
          "t_struct(Position)4092_storage": {
            "label": "struct Vault.Position",
            "members": [
              {
                "label": "worker",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "client",
                "type": "t_address"
              }
            ]
          },
          "t_contract(IFeeCollector)5385": {
            "label": "contract IFeeCollector"
          },
          "t_contract(IProtocolManager)5560": {
            "label": "contract IProtocolManager"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "18d1cbfe3f5588aa4d3a49ef83eca22d6abddebfcf93070c43361e2fb877123f": {
      "address": "0x6516038C95535A09dcd2b4AF93138B6db172dFEB",
      "txHash": "0xeb6597bc500373dd1f1032443ddc0cfed719f34a6fa436a3bb45769fab803d6c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "PancakeswapStrategyAddToPoolWithBaseToken",
            "label": "factory",
            "type": "t_contract(IPancakeFactory)1305",
            "src": "contracts\\strategies\\pancake\\PancakeswapStrategyAddToPoolWithBaseToken.sol:28"
          },
          {
            "contract": "PancakeswapStrategyAddToPoolWithBaseToken",
            "label": "router",
            "type": "t_contract(IPancakeRouterV2)9339",
            "src": "contracts\\strategies\\pancake\\PancakeswapStrategyAddToPoolWithBaseToken.sol:29"
          }
        ],
        "types": {
          "t_contract(IPancakeFactory)1305": {
            "label": "contract IPancakeFactory"
          },
          "t_contract(IPancakeRouterV2)9339": {
            "label": "contract IPancakeRouterV2"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "33bb3c06392dee52cafe42531c940426f443b00b371a719ce5c6fbb961efc6d6": {
      "address": "0x0112B40F0E349b2A2530955862b961c052545D49",
      "txHash": "0xa24127a8e4bd8607714a017d2da42e7e1341eaf115d3483cacccaced7f79f5ad",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "PancakeswapStrategyAddToPoolWithoutBaseToken",
            "label": "factory",
            "type": "t_contract(IPancakeFactory)1305",
            "src": "contracts\\strategies\\pancake\\PancakeswapStrategyAddToPoolWithoutBaseToken.sol:27"
          },
          {
            "contract": "PancakeswapStrategyAddToPoolWithoutBaseToken",
            "label": "router",
            "type": "t_contract(IPancakeRouterV2)9309",
            "src": "contracts\\strategies\\pancake\\PancakeswapStrategyAddToPoolWithoutBaseToken.sol:28"
          }
        ],
        "types": {
          "t_contract(IPancakeFactory)1305": {
            "label": "contract IPancakeFactory"
          },
          "t_contract(IPancakeRouterV2)9309": {
            "label": "contract IPancakeRouterV2"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "19973cfd8bae02cd23d198f9b551f328f91e5ea068226c3dafd34b975ea58840": {
      "address": "0x079c66B44C82A5101Fb2EBC88696cEff7a29d21A",
      "txHash": "0x8db84264efbb15266a0b560e7ed7e9e96b4495fac6c234afbcdb06c79f202e53",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "PancakeswapStrategyLiquidate",
            "label": "factory",
            "type": "t_contract(IPancakeFactory)1305",
            "src": "contracts\\strategies\\pancake\\PancakeswapStrategyLiquidate.sol:24"
          },
          {
            "contract": "PancakeswapStrategyLiquidate",
            "label": "router",
            "type": "t_contract(IPancakeRouterV2)9277",
            "src": "contracts\\strategies\\pancake\\PancakeswapStrategyLiquidate.sol:25"
          }
        ],
        "types": {
          "t_contract(IPancakeFactory)1305": {
            "label": "contract IPancakeFactory"
          },
          "t_contract(IPancakeRouterV2)9277": {
            "label": "contract IPancakeRouterV2"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "029183dce4a0e3675caf429abbcdbd58eea5996845e17de790c66fa7a74aa88a": {
      "address": "0x7C6A5e2fB436dDc91FeA65Bd2D1D9aFfb3117b65",
      "txHash": "0x0b3b86fa85827a40265c81e2b152e20469b7ccd72973a2b9033bda3dc742cba8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "factory",
            "type": "t_contract(IPancakeFactory)1305",
            "src": "contracts\\workers\\PancakeswapWorker.sol:89"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "masterChef",
            "type": "t_contract(IPancakeMasterChef)8369",
            "src": "contracts\\workers\\PancakeswapWorker.sol:90"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "router",
            "type": "t_contract(IPancakeRouterV2)8759",
            "src": "contracts\\workers\\PancakeswapWorker.sol:91"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "lpToken",
            "type": "t_contract(IPancakePair)1547",
            "src": "contracts\\workers\\PancakeswapWorker.sol:92"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "wNative",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:93"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "name",
            "type": "t_string_storage",
            "src": "contracts\\workers\\PancakeswapWorker.sol:94"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "baseToken",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:95"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "token0",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:96"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "token1",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:97"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "cake",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:98"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "operatingVault",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:99"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "pid",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:100"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)5478",
            "src": "contracts\\workers\\PancakeswapWorker.sol:101"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:103"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "feeDenom",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:104"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "harvestThreshold",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:107"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "harvestPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\workers\\PancakeswapWorker.sol:108"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "strategies",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\workers\\PancakeswapWorker.sol:111"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "approvedStrategies",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\workers\\PancakeswapWorker.sol:112"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "shares",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\workers\\PancakeswapWorker.sol:115"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "totalShare",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:116"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "positionIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\workers\\PancakeswapWorker.sol:117"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "treasuryFeeBps",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:118"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "isEnabled",
            "type": "t_bool",
            "src": "contracts\\workers\\PancakeswapWorker.sol:119"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "clientFeesBps",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\workers\\PancakeswapWorker.sol:120"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "okHarvesters",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\workers\\PancakeswapWorker.sol:121"
          }
        ],
        "types": {
          "t_contract(IPancakeFactory)1305": {
            "label": "contract IPancakeFactory"
          },
          "t_contract(IPancakeMasterChef)8369": {
            "label": "contract IPancakeMasterChef"
          },
          "t_contract(IPancakeRouterV2)8759": {
            "label": "contract IPancakeRouterV2"
          },
          "t_contract(IPancakePair)1547": {
            "label": "contract IPancakePair"
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IProtocolManager)5478": {
            "label": "contract IProtocolManager"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "75964bdc7f9697f917345025e0263706f3d10d097aea758dff54df4580d07eb0": {
      "address": "0x3d872665968B1f7a5aF6417334384bE9Be6A717D",
      "txHash": "0x043f3c34ab21dab52578a89b8ba9e0c44ec333cbfa37b1a8dae65b21d5bf2192",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "Client",
            "label": "enabledFarms",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:74"
          },
          {
            "contract": "Client",
            "label": "_KIND_",
            "type": "t_string_storage",
            "src": "contracts\\Client.sol:77"
          },
          {
            "contract": "Client",
            "label": "_CLIENT_NAME_",
            "type": "t_string_storage",
            "src": "contracts\\Client.sol:78"
          },
          {
            "contract": "Client",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)5480",
            "src": "contracts\\Client.sol:81"
          },
          {
            "contract": "Client",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)5320",
            "src": "contracts\\Client.sol:83"
          },
          {
            "contract": "Client",
            "label": "whitelistedUsers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:86"
          },
          {
            "contract": "Client",
            "label": "whitelistedOperators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:87"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IProtocolManager)5480": {
            "label": "contract IProtocolManager"
          },
          "t_contract(IFeeCollector)5320": {
            "label": "contract IFeeCollector"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6605cf2b79ac375ba992e24600cf3ab25bbd3e199c7dc52d29849e2d2e9e0ab3": {
      "address": "0xf95549c28821cC1f0C5d129e3272C330cBC1fD21",
      "txHash": "0xd4378895458fa80eb51de3ab9744a12b2acaa95058106b292257374502870dc1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "Client",
            "label": "enabledFarms",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:74"
          },
          {
            "contract": "Client",
            "label": "_KIND_",
            "type": "t_string_storage",
            "src": "contracts\\Client.sol:77"
          },
          {
            "contract": "Client",
            "label": "_CLIENT_NAME_",
            "type": "t_string_storage",
            "src": "contracts\\Client.sol:78"
          },
          {
            "contract": "Client",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)5478",
            "src": "contracts\\Client.sol:81"
          },
          {
            "contract": "Client",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)5318",
            "src": "contracts\\Client.sol:83"
          },
          {
            "contract": "Client",
            "label": "whitelistedUsers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:86"
          },
          {
            "contract": "Client",
            "label": "whitelistedOperators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:87"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IProtocolManager)5478": {
            "label": "contract IProtocolManager"
          },
          "t_contract(IFeeCollector)5318": {
            "label": "contract IFeeCollector"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c4bd003586cc6c262181dccf414f979e233ca5ca42d20c43448bacccc8e6bf88": {
      "address": "0x18ddAbc9240726Ad39897D8E93Db108b96dB051b",
      "txHash": "0x06355075e4d0fddd1c7b516639adf8618535a2dc9a169aeb8dc2ab64e9cfb4fd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedClients",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\ProtocolManager.sol:83"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedVaults",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\ProtocolManager.sol:87"
          },
          {
            "contract": "ProtocolManager",
            "label": "tokenToVault",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts\\ProtocolManager.sol:90"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedVaultConfigs",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\ProtocolManager.sol:94"
          },
          {
            "contract": "ProtocolManager",
            "label": "checkIfApprovedBountyCollectors",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\ProtocolManager.sol:98"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedBountyCollectors",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\ProtocolManager.sol:102"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedStrategiesCheck",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\ProtocolManager.sol:105"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedStrategies",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\ProtocolManager.sol:109"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedNativeRelayer",
            "type": "t_address",
            "src": "contracts\\ProtocolManager.sol:112"
          },
          {
            "contract": "ProtocolManager",
            "label": "whitelistOperatorsList",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\ProtocolManager.sol:115"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedWorkers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\ProtocolManager.sol:118"
          },
          {
            "contract": "ProtocolManager",
            "label": "whitelistedOperators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\ProtocolManager.sol:122"
          },
          {
            "contract": "ProtocolManager",
            "label": "adminContract",
            "type": "t_address",
            "src": "contracts\\ProtocolManager.sol:125"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedHarvesters",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\ProtocolManager.sol:127"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "558dff2b52c25e5f1e5f1c051c370cbca03e190931e5106355440db96c1f3d07": {
      "address": "0x70a356f6c752F93F156D990C63f16d28c950B15f",
      "txHash": "0xbca32fd131c1e6da0616651fed86483a4efdffc2f058fad8aab6aadf24f3fdbc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "factory",
            "type": "t_contract(IPancakeFactory)1305",
            "src": "contracts\\workers\\PancakeswapWorker.sol:89"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "masterChef",
            "type": "t_contract(IPancakeMasterChef)8940",
            "src": "contracts\\workers\\PancakeswapWorker.sol:90"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "router",
            "type": "t_contract(IPancakeRouterV2)9330",
            "src": "contracts\\workers\\PancakeswapWorker.sol:91"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "lpToken",
            "type": "t_contract(IPancakePair)1547",
            "src": "contracts\\workers\\PancakeswapWorker.sol:92"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "wNative",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:93"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "name",
            "type": "t_string_storage",
            "src": "contracts\\workers\\PancakeswapWorker.sol:94"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "baseToken",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:95"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "token0",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:96"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "token1",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:97"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "cake",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:98"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "operatingVault",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:99"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "pid",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:100"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)6044",
            "src": "contracts\\workers\\PancakeswapWorker.sol:101"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:103"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "feeDenom",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:104"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "harvestThreshold",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:107"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "harvestPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\workers\\PancakeswapWorker.sol:108"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "strategies",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\workers\\PancakeswapWorker.sol:111"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "approvedStrategies",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\workers\\PancakeswapWorker.sol:112"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "shares",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\workers\\PancakeswapWorker.sol:115"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "totalShare",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:116"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "positionIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\workers\\PancakeswapWorker.sol:117"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "treasuryFeeBps",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:118"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "isEnabled",
            "type": "t_bool",
            "src": "contracts\\workers\\PancakeswapWorker.sol:119"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "clientFeesBps",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\workers\\PancakeswapWorker.sol:120"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "okHarvesters",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\workers\\PancakeswapWorker.sol:121"
          }
        ],
        "types": {
          "t_contract(IPancakeFactory)1305": {
            "label": "contract IPancakeFactory"
          },
          "t_contract(IPancakeMasterChef)8940": {
            "label": "contract IPancakeMasterChef"
          },
          "t_contract(IPancakeRouterV2)9330": {
            "label": "contract IPancakeRouterV2"
          },
          "t_contract(IPancakePair)1547": {
            "label": "contract IPancakePair"
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IProtocolManager)6044": {
            "label": "contract IProtocolManager"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4c38c357a5e215c54c03faefa7c4b81dba488b43adc715befcc709a3ea1a3c54": {
      "address": "0xB4D8cf819E946Ff6Ed8f958bf1AC5A57655caF47",
      "txHash": "0x1e11c62ce9999a8554733a12ac0a96a4a196eaa2041cfdcf7002b73a044745d7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "Client",
            "label": "enabledFarms",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:74"
          },
          {
            "contract": "Client",
            "label": "_KIND_",
            "type": "t_string_storage",
            "src": "contracts\\Client.sol:77"
          },
          {
            "contract": "Client",
            "label": "_CLIENT_NAME_",
            "type": "t_string_storage",
            "src": "contracts\\Client.sol:78"
          },
          {
            "contract": "Client",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)5507",
            "src": "contracts\\Client.sol:81"
          },
          {
            "contract": "Client",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)5332",
            "src": "contracts\\Client.sol:83"
          },
          {
            "contract": "Client",
            "label": "whitelistedUsers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:86"
          },
          {
            "contract": "Client",
            "label": "whitelistedOperators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:87"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IProtocolManager)5507": {
            "label": "contract IProtocolManager"
          },
          "t_contract(IFeeCollector)5332": {
            "label": "contract IFeeCollector"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0553400cb0252e94c17d7b16ea005c698b4dd8c16689d7865fd2e032b17773cc": {
      "address": "0x9758ae3963b4BeE23cb1dcB37236d55C31B4fbA6",
      "txHash": "0x906d12b5c05f7a1ab46d7d383925111dd8c5b7eb98de9032377f5d13bae9d00a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "Vault",
            "label": "_IN_EXEC_LOCK",
            "type": "t_uint256",
            "src": "contracts\\Vault.sol:54"
          },
          {
            "contract": "Vault",
            "label": "POSITION_ID",
            "type": "t_uint256",
            "src": "contracts\\Vault.sol:55"
          },
          {
            "contract": "Vault",
            "label": "STRATEGY",
            "type": "t_address",
            "src": "contracts\\Vault.sol:56"
          },
          {
            "contract": "Vault",
            "label": "token",
            "type": "t_address",
            "src": "contracts\\Vault.sol:60"
          },
          {
            "contract": "Vault",
            "label": "config",
            "type": "t_contract(IVaultConfig)5670",
            "src": "contracts\\Vault.sol:68"
          },
          {
            "contract": "Vault",
            "label": "positions",
            "type": "t_mapping(t_uint256,t_struct(Position)4083_storage)",
            "src": "contracts\\Vault.sol:69"
          },
          {
            "contract": "Vault",
            "label": "nextPositionID",
            "type": "t_uint256",
            "src": "contracts\\Vault.sol:70"
          },
          {
            "contract": "Vault",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)5332",
            "src": "contracts\\Vault.sol:73"
          },
          {
            "contract": "Vault",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)5507",
            "src": "contracts\\Vault.sol:75"
          },
          {
            "contract": "Vault",
            "label": "rewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Vault.sol:78"
          },
          {
            "contract": "Vault",
            "label": "approvedRewardAssigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Vault.sol:79"
          },
          {
            "contract": "Vault",
            "label": "totalRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Vault.sol:81"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IVaultConfig)5670": {
            "label": "contract IVaultConfig"
          },
          "t_mapping(t_uint256,t_struct(Position)4083_storage)": {
            "label": "mapping(uint256 => struct Vault.Position)"
          },
          "t_struct(Position)4083_storage": {
            "label": "struct Vault.Position",
            "members": [
              {
                "label": "worker",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "client",
                "type": "t_address"
              }
            ]
          },
          "t_contract(IFeeCollector)5332": {
            "label": "contract IFeeCollector"
          },
          "t_contract(IProtocolManager)5507": {
            "label": "contract IProtocolManager"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6aabc7e648e21c03303c2f2900431812a9bdb4663883dfdc220c08c862a4773e": {
      "address": "0xc3EE366875118bd9C8c6bd32fC778fC32ceb1bED",
      "txHash": "0xd808a84be36b827636a9c9cc87bf05d92ee5a1254e1db6db157614946b2ff000",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "Vault",
            "label": "_IN_EXEC_LOCK",
            "type": "t_uint256",
            "src": "contracts\\Vault.sol:54"
          },
          {
            "contract": "Vault",
            "label": "POSITION_ID",
            "type": "t_uint256",
            "src": "contracts\\Vault.sol:55"
          },
          {
            "contract": "Vault",
            "label": "STRATEGY",
            "type": "t_address",
            "src": "contracts\\Vault.sol:56"
          },
          {
            "contract": "Vault",
            "label": "token",
            "type": "t_address",
            "src": "contracts\\Vault.sol:60"
          },
          {
            "contract": "Vault",
            "label": "config",
            "type": "t_contract(IVaultConfig)5835",
            "src": "contracts\\Vault.sol:68"
          },
          {
            "contract": "Vault",
            "label": "positions",
            "type": "t_mapping(t_uint256,t_struct(Position)4185_storage)",
            "src": "contracts\\Vault.sol:69"
          },
          {
            "contract": "Vault",
            "label": "nextPositionID",
            "type": "t_uint256",
            "src": "contracts\\Vault.sol:70"
          },
          {
            "contract": "Vault",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)5486",
            "src": "contracts\\Vault.sol:73"
          },
          {
            "contract": "Vault",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)5661",
            "src": "contracts\\Vault.sol:75"
          },
          {
            "contract": "Vault",
            "label": "rewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Vault.sol:78"
          },
          {
            "contract": "Vault",
            "label": "approvedRewardAssigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Vault.sol:79"
          },
          {
            "contract": "Vault",
            "label": "totalRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Vault.sol:81"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IVaultConfig)5835": {
            "label": "contract IVaultConfig"
          },
          "t_mapping(t_uint256,t_struct(Position)4185_storage)": {
            "label": "mapping(uint256 => struct Vault.Position)"
          },
          "t_struct(Position)4185_storage": {
            "label": "struct Vault.Position",
            "members": [
              {
                "label": "worker",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "client",
                "type": "t_address"
              }
            ]
          },
          "t_contract(IFeeCollector)5486": {
            "label": "contract IFeeCollector"
          },
          "t_contract(IProtocolManager)5661": {
            "label": "contract IProtocolManager"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7b327a89d5dc5bfe60936aa253e810c800e8ff48d99fe38e7db494441a923a96": {
      "address": "0x78A8c1fF546D32883BaEC59169ec68B39C928463",
      "txHash": "0x22026145d6d8531959d38954954b97740e70d92004ff6554f420d3d4e374232a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "Client",
            "label": "enabledFarms",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:74"
          },
          {
            "contract": "Client",
            "label": "_KIND_",
            "type": "t_string_storage",
            "src": "contracts\\Client.sol:77"
          },
          {
            "contract": "Client",
            "label": "_CLIENT_NAME_",
            "type": "t_string_storage",
            "src": "contracts\\Client.sol:78"
          },
          {
            "contract": "Client",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)5585",
            "src": "contracts\\Client.sol:81"
          },
          {
            "contract": "Client",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)5410",
            "src": "contracts\\Client.sol:83"
          },
          {
            "contract": "Client",
            "label": "whitelistedUsers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:86"
          },
          {
            "contract": "Client",
            "label": "whitelistedOperators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:87"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IProtocolManager)5585": {
            "label": "contract IProtocolManager"
          },
          "t_contract(IFeeCollector)5410": {
            "label": "contract IFeeCollector"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a0b65e83c4fbae2deb3a3fd441e856a61fb4f1fb611d25d1c7d9227fc652ff2e": {
      "address": "0x6C6c58A526f954ac00e5a7806B20b418181D6c04",
      "txHash": "0x71c32847d152f4fd58235f562d3b80af18bad5b9e71b3ef642355a45ec17699d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "Client",
            "label": "enabledFarms",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:74"
          },
          {
            "contract": "Client",
            "label": "_KIND_",
            "type": "t_string_storage",
            "src": "contracts\\Client.sol:77"
          },
          {
            "contract": "Client",
            "label": "_CLIENT_NAME_",
            "type": "t_string_storage",
            "src": "contracts\\Client.sol:78"
          },
          {
            "contract": "Client",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)5662",
            "src": "contracts\\Client.sol:81"
          },
          {
            "contract": "Client",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)5487",
            "src": "contracts\\Client.sol:83"
          },
          {
            "contract": "Client",
            "label": "whitelistedUsers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:86"
          },
          {
            "contract": "Client",
            "label": "whitelistedOperators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:87"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IProtocolManager)5662": {
            "label": "contract IProtocolManager"
          },
          "t_contract(IFeeCollector)5487": {
            "label": "contract IFeeCollector"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4bad84d2606387150d8d0c24913d9232db3ef5b29eed89d7d3e5726b166bf6bb": {
      "address": "0xb9713cc5b3Fe8d1c75Ac5E3a4A298f3e27fF9E60",
      "txHash": "0x8173f5b63aced9f2845dfc3f8a1da9ad67afbd205b8684d1b18a0c852e031e6b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "Client",
            "label": "enabledFarms",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:74"
          },
          {
            "contract": "Client",
            "label": "_KIND_",
            "type": "t_string_storage",
            "src": "contracts\\Client.sol:77"
          },
          {
            "contract": "Client",
            "label": "_CLIENT_NAME_",
            "type": "t_string_storage",
            "src": "contracts\\Client.sol:78"
          },
          {
            "contract": "Client",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)5636",
            "src": "contracts\\Client.sol:81"
          },
          {
            "contract": "Client",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)5461",
            "src": "contracts\\Client.sol:83"
          },
          {
            "contract": "Client",
            "label": "whitelistedUsers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:86"
          },
          {
            "contract": "Client",
            "label": "whitelistedOperators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:87"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IProtocolManager)5636": {
            "label": "contract IProtocolManager"
          },
          "t_contract(IFeeCollector)5461": {
            "label": "contract IFeeCollector"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "eee6e4788b641fb954e2b8d4c79f26c9fe88bd6af2cebeb54618d3d0909a6ab3": {
      "address": "0x1855B5F6Ee5a463D7f267785118D99F4451956C7",
      "txHash": "0x3d9da0232aadc14952f05c299cef181b364d054459e09c7366195c0fd07ecdb7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "Client",
            "label": "enabledFarms",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:74"
          },
          {
            "contract": "Client",
            "label": "_KIND_",
            "type": "t_string_storage",
            "src": "contracts\\Client.sol:77"
          },
          {
            "contract": "Client",
            "label": "_CLIENT_NAME_",
            "type": "t_string_storage",
            "src": "contracts\\Client.sol:78"
          },
          {
            "contract": "Client",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)5651",
            "src": "contracts\\Client.sol:81"
          },
          {
            "contract": "Client",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)5476",
            "src": "contracts\\Client.sol:83"
          },
          {
            "contract": "Client",
            "label": "whitelistedUsers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:86"
          },
          {
            "contract": "Client",
            "label": "whitelistedOperators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:87"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IProtocolManager)5651": {
            "label": "contract IProtocolManager"
          },
          "t_contract(IFeeCollector)5476": {
            "label": "contract IFeeCollector"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "edb04bd8822a91f1b07139ef926d4763b875f441368e4dcf686619c4283e62bc": {
      "address": "0x06D9D16a3a9860E644892aaB9b1b8c0e411D838b",
      "txHash": "0x25a5036bd3ba3dd78fcdbaea5a916e3601fe25d9f80a5306d9fa823e2c673739",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "Vault",
            "label": "_IN_EXEC_LOCK",
            "type": "t_uint256",
            "src": "contracts\\Vault.sol:54"
          },
          {
            "contract": "Vault",
            "label": "POSITION_ID",
            "type": "t_uint256",
            "src": "contracts\\Vault.sol:55"
          },
          {
            "contract": "Vault",
            "label": "STRATEGY",
            "type": "t_address",
            "src": "contracts\\Vault.sol:56"
          },
          {
            "contract": "Vault",
            "label": "token",
            "type": "t_address",
            "src": "contracts\\Vault.sol:60"
          },
          {
            "contract": "Vault",
            "label": "config",
            "type": "t_contract(IVaultConfig)6062",
            "src": "contracts\\Vault.sol:68"
          },
          {
            "contract": "Vault",
            "label": "positions",
            "type": "t_mapping(t_uint256,t_struct(Position)4276_storage)",
            "src": "contracts\\Vault.sol:69"
          },
          {
            "contract": "Vault",
            "label": "nextPositionID",
            "type": "t_uint256",
            "src": "contracts\\Vault.sol:70"
          },
          {
            "contract": "Vault",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)5701",
            "src": "contracts\\Vault.sol:73"
          },
          {
            "contract": "Vault",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)5876",
            "src": "contracts\\Vault.sol:75"
          },
          {
            "contract": "Vault",
            "label": "rewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Vault.sol:78"
          },
          {
            "contract": "Vault",
            "label": "approvedRewardAssigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Vault.sol:79"
          },
          {
            "contract": "Vault",
            "label": "totalRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Vault.sol:81"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IVaultConfig)6062": {
            "label": "contract IVaultConfig"
          },
          "t_mapping(t_uint256,t_struct(Position)4276_storage)": {
            "label": "mapping(uint256 => struct Vault.Position)"
          },
          "t_struct(Position)4276_storage": {
            "label": "struct Vault.Position",
            "members": [
              {
                "label": "worker",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "client",
                "type": "t_address"
              }
            ]
          },
          "t_contract(IFeeCollector)5701": {
            "label": "contract IFeeCollector"
          },
          "t_contract(IProtocolManager)5876": {
            "label": "contract IProtocolManager"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4dc720e9a7b986c5c47d3dffc24b978b275cec75735323d542196c1c378cbb24": {
      "address": "0x415fd97836F41Df41B3cCc0800064b365b1628fB",
      "txHash": "0xde6dcb8a7095f5bed80e82d5dcb465e28476089707a51cbc8d4ec4d8bb3e9b76",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "Client",
            "label": "enabledFarms",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:80"
          },
          {
            "contract": "Client",
            "label": "_KIND_",
            "type": "t_string_storage",
            "src": "contracts\\Client.sol:83"
          },
          {
            "contract": "Client",
            "label": "_CLIENT_NAME_",
            "type": "t_string_storage",
            "src": "contracts\\Client.sol:84"
          },
          {
            "contract": "Client",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)5876",
            "src": "contracts\\Client.sol:87"
          },
          {
            "contract": "Client",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)5701",
            "src": "contracts\\Client.sol:89"
          },
          {
            "contract": "Client",
            "label": "whitelistedUsers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:92"
          },
          {
            "contract": "Client",
            "label": "whitelistedOperators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:93"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IProtocolManager)5876": {
            "label": "contract IProtocolManager"
          },
          "t_contract(IFeeCollector)5701": {
            "label": "contract IFeeCollector"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9fe0a0ab366b8f1732a3a960b90d6cf2f2a9555864cd01f8311eb68c10e8d18c": {
      "address": "0x5939cb51333604368ea70Fc3D9DFc92f2F542014",
      "txHash": "0x2ca93208a9c700986bd3206c9a8fd2661e165645ae9080e6fa5477c600cfd018",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "Client",
            "label": "enabledFarms",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:80"
          },
          {
            "contract": "Client",
            "label": "_KIND_",
            "type": "t_string_storage",
            "src": "contracts\\Client.sol:83"
          },
          {
            "contract": "Client",
            "label": "_CLIENT_NAME_",
            "type": "t_string_storage",
            "src": "contracts\\Client.sol:84"
          },
          {
            "contract": "Client",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)5933",
            "src": "contracts\\Client.sol:87"
          },
          {
            "contract": "Client",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)5758",
            "src": "contracts\\Client.sol:89"
          },
          {
            "contract": "Client",
            "label": "whitelistedUsers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:92"
          },
          {
            "contract": "Client",
            "label": "whitelistedOperators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:93"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IProtocolManager)5933": {
            "label": "contract IProtocolManager"
          },
          "t_contract(IFeeCollector)5758": {
            "label": "contract IFeeCollector"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a423b69a7f7c312c6c520a77321e222ee5ed0bf739bf1a01a7c5affdd7e83272": {
      "address": "0xD51e51a70f0B057ae5eE2B50eb96669F4F552151",
      "txHash": "0x3011fc27d134c90bf49898616ce992d107f6971798dfc78408efae6ac42a39c8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "Client",
            "label": "enabledFarms",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:80"
          },
          {
            "contract": "Client",
            "label": "_KIND_",
            "type": "t_string_storage",
            "src": "contracts\\Client.sol:83"
          },
          {
            "contract": "Client",
            "label": "_CLIENT_NAME_",
            "type": "t_string_storage",
            "src": "contracts\\Client.sol:84"
          },
          {
            "contract": "Client",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)5957",
            "src": "contracts\\Client.sol:87"
          },
          {
            "contract": "Client",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)5782",
            "src": "contracts\\Client.sol:89"
          },
          {
            "contract": "Client",
            "label": "whitelistedUsers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:92"
          },
          {
            "contract": "Client",
            "label": "whitelistedOperators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:93"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IProtocolManager)5957": {
            "label": "contract IProtocolManager"
          },
          "t_contract(IFeeCollector)5782": {
            "label": "contract IFeeCollector"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "87ed566024d7bced8bc8f334d2f3e28fefcd2746ca40f584c92e3ad0ee49b5cc": {
      "address": "0xd2e95F44F9529c07dD7f0cDD8C56584F560443f3",
      "txHash": "0xfb8705c99c47f48ddb86083626a53a412992d9f2b0eba28bae392d76beff2b1b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "Vault",
            "label": "_IN_EXEC_LOCK",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:61"
          },
          {
            "contract": "Vault",
            "label": "POSITION_ID",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:62"
          },
          {
            "contract": "Vault",
            "label": "STRATEGY",
            "type": "t_address",
            "src": "contracts/Vault.sol:63"
          },
          {
            "contract": "Vault",
            "label": "token",
            "type": "t_address",
            "src": "contracts/Vault.sol:67"
          },
          {
            "contract": "Vault",
            "label": "config",
            "type": "t_contract(IVaultConfig)6139",
            "src": "contracts/Vault.sol:75"
          },
          {
            "contract": "Vault",
            "label": "positions",
            "type": "t_mapping(t_uint256,t_struct(Position)4344_storage)",
            "src": "contracts/Vault.sol:76"
          },
          {
            "contract": "Vault",
            "label": "nextPositionID",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:77"
          },
          {
            "contract": "Vault",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)5778",
            "src": "contracts/Vault.sol:80"
          },
          {
            "contract": "Vault",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)5953",
            "src": "contracts/Vault.sol:82"
          },
          {
            "contract": "Vault",
            "label": "rewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/Vault.sol:85"
          },
          {
            "contract": "Vault",
            "label": "approvedRewardAssigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/Vault.sol:86"
          },
          {
            "contract": "Vault",
            "label": "totalRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/Vault.sol:88"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IVaultConfig)6139": {
            "label": "contract IVaultConfig"
          },
          "t_mapping(t_uint256,t_struct(Position)4344_storage)": {
            "label": "mapping(uint256 => struct Vault.Position)"
          },
          "t_struct(Position)4344_storage": {
            "label": "struct Vault.Position",
            "members": [
              {
                "label": "worker",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "client",
                "type": "t_address"
              }
            ]
          },
          "t_contract(IFeeCollector)5778": {
            "label": "contract IFeeCollector"
          },
          "t_contract(IProtocolManager)5953": {
            "label": "contract IProtocolManager"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "28d5949f9f65bcbd53a19b3ec9829b80bbca3619d87080b6e4c14f41023c5d12": {
      "address": "0xAd37bbf3b9191671138FbfF266eB0CDDfF82580D",
      "txHash": "0xb235c731f67f8af583b038504db2eeba9608c834ddd68972c7e8c7517fe7de16",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "FeeCollector",
            "label": "fees",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\FeeCollector.sol:37"
          },
          {
            "contract": "FeeCollector",
            "label": "_feeToken",
            "type": "t_address",
            "src": "contracts\\FeeCollector.sol:40"
          },
          {
            "contract": "FeeCollector",
            "label": "_feeThreshold",
            "type": "t_uint256",
            "src": "contracts\\FeeCollector.sol:41"
          },
          {
            "contract": "FeeCollector",
            "label": "protocolManager",
            "type": "t_contract(ProtocolManager)4248",
            "src": "contracts\\FeeCollector.sol:42"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(ProtocolManager)4248": {
            "label": "contract ProtocolManager"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "30d6723f86b0feb68984d82141af3bdb87c83098893dffdf3f2805eab0b60b0b": {
      "address": "0xC511f8DD6bEc023ac8a9bbFb48F285350Bb56343",
      "txHash": "0x6aa335d55abdba6a4737a9d6ce0f43e807d1f6b2ead9ceb4cea459be328773c4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "FeeCollector",
            "label": "fees",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\FeeCollector.sol:37"
          },
          {
            "contract": "FeeCollector",
            "label": "_feeToken",
            "type": "t_address",
            "src": "contracts\\FeeCollector.sol:40"
          },
          {
            "contract": "FeeCollector",
            "label": "_feeThreshold",
            "type": "t_uint256",
            "src": "contracts\\FeeCollector.sol:41"
          },
          {
            "contract": "FeeCollector",
            "label": "protocolManager",
            "type": "t_contract(ProtocolManager)4236",
            "src": "contracts\\FeeCollector.sol:42"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(ProtocolManager)4236": {
            "label": "contract ProtocolManager"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "93ef62d3346ceaef1282ee1c87a392d00d1acb1dc60dad950fec369a92acffab": {
      "address": "0x4E410Aa9818FC58825171D5eC60DB1D0856b2B14",
      "txHash": "0xd84451b1c0d8bede2779da6abfea28385cd46b973ab11f35d350946c0b5649b1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "VaultConfig",
            "label": "wrappedNativeToken",
            "type": "t_address",
            "src": "contracts/VaultConfig.sol:26"
          },
          {
            "contract": "VaultConfig",
            "label": "wrappedNativeTokenRelayer",
            "type": "t_address",
            "src": "contracts/VaultConfig.sol:28"
          },
          {
            "contract": "VaultConfig",
            "label": "treasuryAccount",
            "type": "t_address",
            "src": "contracts/VaultConfig.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "9e16f9ff6d942becf3e11526d45e4ed006b745d6988fe78614d087a432c5e815": {
      "address": "0x6beEAA0eEA4F85B5Ee52cdbaC76BCD6AFD1C91D0",
      "txHash": "0x1460fb4ebe81ab081434a4c33293c0e42af9ac9bb2443d4f9ac7a11aa6a07c43",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "Client",
            "label": "enabledFarms",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:80"
          },
          {
            "contract": "Client",
            "label": "_KIND_",
            "type": "t_string_storage",
            "src": "contracts\\Client.sol:83"
          },
          {
            "contract": "Client",
            "label": "_CLIENT_NAME_",
            "type": "t_string_storage",
            "src": "contracts\\Client.sol:84"
          },
          {
            "contract": "Client",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)5991",
            "src": "contracts\\Client.sol:87"
          },
          {
            "contract": "Client",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)5816",
            "src": "contracts\\Client.sol:89"
          },
          {
            "contract": "Client",
            "label": "whitelistedUsers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:92"
          },
          {
            "contract": "Client",
            "label": "whitelistedOperators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:93"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IProtocolManager)5991": {
            "label": "contract IProtocolManager"
          },
          "t_contract(IFeeCollector)5816": {
            "label": "contract IFeeCollector"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1ce5d0cb5e47cac09e150c319da92143af4edeae5722ef8c92707dfbc1ea7bc9": {
      "address": "0xda2E35EB9dEDcB00B37867ace56688748692D94F",
      "txHash": "0xea72c870a6f6c2f4985d271225950a704292aeae70d7d8bcadaef9b76203edb6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "Vault",
            "label": "_IN_EXEC_LOCK",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:67"
          },
          {
            "contract": "Vault",
            "label": "POSITION_ID",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:68"
          },
          {
            "contract": "Vault",
            "label": "STRATEGY",
            "type": "t_address",
            "src": "contracts/Vault.sol:69"
          },
          {
            "contract": "Vault",
            "label": "token",
            "type": "t_address",
            "src": "contracts/Vault.sol:73"
          },
          {
            "contract": "Vault",
            "label": "config",
            "type": "t_contract(IVaultConfig)6196",
            "src": "contracts/Vault.sol:81"
          },
          {
            "contract": "Vault",
            "label": "positions",
            "type": "t_mapping(t_uint256,t_struct(Position)4378_storage)",
            "src": "contracts/Vault.sol:82"
          },
          {
            "contract": "Vault",
            "label": "nextPositionID",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:83"
          },
          {
            "contract": "Vault",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)5835",
            "src": "contracts/Vault.sol:86"
          },
          {
            "contract": "Vault",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)6010",
            "src": "contracts/Vault.sol:88"
          },
          {
            "contract": "Vault",
            "label": "rewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/Vault.sol:91"
          },
          {
            "contract": "Vault",
            "label": "approvedRewardAssigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/Vault.sol:92"
          },
          {
            "contract": "Vault",
            "label": "totalRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/Vault.sol:94"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IVaultConfig)6196": {
            "label": "contract IVaultConfig"
          },
          "t_mapping(t_uint256,t_struct(Position)4378_storage)": {
            "label": "mapping(uint256 => struct Vault.Position)"
          },
          "t_struct(Position)4378_storage": {
            "label": "struct Vault.Position",
            "members": [
              {
                "label": "worker",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "client",
                "type": "t_address"
              }
            ]
          },
          "t_contract(IFeeCollector)5835": {
            "label": "contract IFeeCollector"
          },
          "t_contract(IProtocolManager)6010": {
            "label": "contract IProtocolManager"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "281c0be319f0eee92e42705c7a80bb124f554fbfd0679a8cc42c213bb8b61102": {
      "address": "0x43bec30079a2932c46e29e2477913dB0321e4918",
      "txHash": "0x6dbd05d8e563ab38693a0dd0b1cc1fde77bcdce488bf0c742d56693f06e125fe",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "Vault",
            "label": "_IN_EXEC_LOCK",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:67"
          },
          {
            "contract": "Vault",
            "label": "POSITION_ID",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:68"
          },
          {
            "contract": "Vault",
            "label": "STRATEGY",
            "type": "t_address",
            "src": "contracts/Vault.sol:69"
          },
          {
            "contract": "Vault",
            "label": "token",
            "type": "t_address",
            "src": "contracts/Vault.sol:73"
          },
          {
            "contract": "Vault",
            "label": "config",
            "type": "t_contract(IVaultConfig)6177",
            "src": "contracts/Vault.sol:81"
          },
          {
            "contract": "Vault",
            "label": "positions",
            "type": "t_mapping(t_uint256,t_struct(Position)4378_storage)",
            "src": "contracts/Vault.sol:82"
          },
          {
            "contract": "Vault",
            "label": "nextPositionID",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:83"
          },
          {
            "contract": "Vault",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)5816",
            "src": "contracts/Vault.sol:86"
          },
          {
            "contract": "Vault",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)5991",
            "src": "contracts/Vault.sol:88"
          },
          {
            "contract": "Vault",
            "label": "rewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/Vault.sol:91"
          },
          {
            "contract": "Vault",
            "label": "approvedRewardAssigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/Vault.sol:92"
          },
          {
            "contract": "Vault",
            "label": "totalRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/Vault.sol:94"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IVaultConfig)6177": {
            "label": "contract IVaultConfig"
          },
          "t_mapping(t_uint256,t_struct(Position)4378_storage)": {
            "label": "mapping(uint256 => struct Vault.Position)"
          },
          "t_struct(Position)4378_storage": {
            "label": "struct Vault.Position",
            "members": [
              {
                "label": "worker",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "client",
                "type": "t_address"
              }
            ]
          },
          "t_contract(IFeeCollector)5816": {
            "label": "contract IFeeCollector"
          },
          "t_contract(IProtocolManager)5991": {
            "label": "contract IProtocolManager"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "32d17f060f4a173a3ff0e4f578674836cd2a78df4162a1e3e2659eb0c2ba9556": {
      "address": "0x557Cfd7E5544006F530460dBA9D3e2e005804F03",
      "txHash": "0xb6581045b18624fb225bb3f58b0b9602020d81053b2c6c6f9bcf9fd782c36a6e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "Vault",
            "label": "_IN_EXEC_LOCK",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:67"
          },
          {
            "contract": "Vault",
            "label": "POSITION_ID",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:68"
          },
          {
            "contract": "Vault",
            "label": "STRATEGY",
            "type": "t_address",
            "src": "contracts/Vault.sol:69"
          },
          {
            "contract": "Vault",
            "label": "token",
            "type": "t_address",
            "src": "contracts/Vault.sol:73"
          },
          {
            "contract": "Vault",
            "label": "config",
            "type": "t_contract(IVaultConfig)6187",
            "src": "contracts/Vault.sol:81"
          },
          {
            "contract": "Vault",
            "label": "positions",
            "type": "t_mapping(t_uint256,t_struct(Position)4388_storage)",
            "src": "contracts/Vault.sol:82"
          },
          {
            "contract": "Vault",
            "label": "nextPositionID",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:83"
          },
          {
            "contract": "Vault",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)5826",
            "src": "contracts/Vault.sol:86"
          },
          {
            "contract": "Vault",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)6001",
            "src": "contracts/Vault.sol:88"
          },
          {
            "contract": "Vault",
            "label": "rewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/Vault.sol:91"
          },
          {
            "contract": "Vault",
            "label": "approvedRewardAssigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/Vault.sol:92"
          },
          {
            "contract": "Vault",
            "label": "totalRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/Vault.sol:94"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IVaultConfig)6187": {
            "label": "contract IVaultConfig"
          },
          "t_mapping(t_uint256,t_struct(Position)4388_storage)": {
            "label": "mapping(uint256 => struct Vault.Position)"
          },
          "t_struct(Position)4388_storage": {
            "label": "struct Vault.Position",
            "members": [
              {
                "label": "worker",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "client",
                "type": "t_address"
              }
            ]
          },
          "t_contract(IFeeCollector)5826": {
            "label": "contract IFeeCollector"
          },
          "t_contract(IProtocolManager)6001": {
            "label": "contract IProtocolManager"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "22fa1590e91bd884c7932f62eb9dcfc85387812ec433292bfc000b514f80b741": {
      "address": "0x490E374eFfb1072e2C2d5F547a7a403Faf6e1C47",
      "txHash": "0x121cb0b1be554275cb68702dbccbe32f4896054f83168762d7e80043615d0b98",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "Client",
            "label": "enabledFarms",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:80"
          },
          {
            "contract": "Client",
            "label": "_KIND_",
            "type": "t_string_storage",
            "src": "contracts\\Client.sol:83"
          },
          {
            "contract": "Client",
            "label": "_CLIENT_NAME_",
            "type": "t_string_storage",
            "src": "contracts\\Client.sol:84"
          },
          {
            "contract": "Client",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)6001",
            "src": "contracts\\Client.sol:87"
          },
          {
            "contract": "Client",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)5826",
            "src": "contracts\\Client.sol:89"
          },
          {
            "contract": "Client",
            "label": "whitelistedUsers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:92"
          },
          {
            "contract": "Client",
            "label": "whitelistedOperators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:93"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IProtocolManager)6001": {
            "label": "contract IProtocolManager"
          },
          "t_contract(IFeeCollector)5826": {
            "label": "contract IFeeCollector"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2179737bcae5d0b69e54ab49ed2ad57ca4d7e2cc57d9f8f561ba84afc1189dcf": {
      "address": "0x2692B5C5100312614c987AA53B21C9213cD898Fd",
      "txHash": "0xba4b05475f71b7a0821abc52db6f58a036e6f57bfa8d1c90b56a6c6843a2d772",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "PancakeswapStrategyLiquidate",
            "label": "factory",
            "type": "t_contract(IPancakeFactory)1305",
            "src": "contracts\\strategies\\pancake\\PancakeswapStrategyLiquidate.sol:27"
          },
          {
            "contract": "PancakeswapStrategyLiquidate",
            "label": "router",
            "type": "t_contract(IPancakeRouterV2)9330",
            "src": "contracts\\strategies\\pancake\\PancakeswapStrategyLiquidate.sol:28"
          }
        ],
        "types": {
          "t_contract(IPancakeFactory)1305": {
            "label": "contract IPancakeFactory"
          },
          "t_contract(IPancakeRouterV2)9330": {
            "label": "contract IPancakeRouterV2"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c157a36ba0d4e7c6f4f33678135461f64aaf9a1f3da2a4b8296f6621805bea54": {
      "address": "0x15619A41C369e642b98f74bd76E76d1e4e78416f",
      "txHash": "0x9aa40b9eac1f7da7b9014d50923969a1392719ba01247cefbbc78fa51acce66e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "Client",
            "label": "enabledFarms",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:80"
          },
          {
            "contract": "Client",
            "label": "_KIND_",
            "type": "t_string_storage",
            "src": "contracts\\Client.sol:83"
          },
          {
            "contract": "Client",
            "label": "_CLIENT_NAME_",
            "type": "t_string_storage",
            "src": "contracts\\Client.sol:84"
          },
          {
            "contract": "Client",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)6023",
            "src": "contracts\\Client.sol:87"
          },
          {
            "contract": "Client",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)5848",
            "src": "contracts\\Client.sol:89"
          },
          {
            "contract": "Client",
            "label": "whitelistedUsers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:92"
          },
          {
            "contract": "Client",
            "label": "whitelistedOperators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:93"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IProtocolManager)6023": {
            "label": "contract IProtocolManager"
          },
          "t_contract(IFeeCollector)5848": {
            "label": "contract IFeeCollector"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7aad4d5ae6f6fe3cf062ffe7f97914d3d4ed12a4f23b54011f68749f01370106": {
      "address": "0x8b800888AD45444fdfb1C25dE709368B7285F647",
      "txHash": "0x1fa6ca742e879fcf3395a1489e8c21a75d52f6fcc2f46fdd97f89d5b87071409",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol:317"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "00d067310df3ea0609d89a01c27f5f2c3043b787242768dbd1171244d1c96c67": {
      "address": "0x23aef79F1D1a39072DFeeC9B167E8FE07288Aa8f",
      "txHash": "0xe3231c4938b30a9bde6be02f368c6832ad4659d8b8b0b3a476598fd42ecdd7a4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "Admin",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)6023",
            "src": "contracts\\Admin.sol:35"
          },
          {
            "contract": "Admin",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)5848",
            "src": "contracts\\Admin.sol:36"
          }
        ],
        "types": {
          "t_contract(IProtocolManager)6023": {
            "label": "contract IProtocolManager"
          },
          "t_contract(IFeeCollector)5848": {
            "label": "contract IFeeCollector"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0fe4915368daf2a6053259bb6fab246cbc66f462a27915314adb8039a7d05593": {
      "address": "0x42067f4C609013B2195B512C78dB1eF007B31b95",
      "txHash": "0x6028d2bb0bb735ea07d018e3cf78c33ed1f8ff85bf01b4555b319d03a5439dbe",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "Client",
            "label": "enabledFarms",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:80"
          },
          {
            "contract": "Client",
            "label": "_KIND_",
            "type": "t_string_storage",
            "src": "contracts\\Client.sol:83"
          },
          {
            "contract": "Client",
            "label": "_CLIENT_NAME_",
            "type": "t_string_storage",
            "src": "contracts\\Client.sol:84"
          },
          {
            "contract": "Client",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)6044",
            "src": "contracts\\Client.sol:87"
          },
          {
            "contract": "Client",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)5869",
            "src": "contracts\\Client.sol:89"
          },
          {
            "contract": "Client",
            "label": "whitelistedUsers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:92"
          },
          {
            "contract": "Client",
            "label": "whitelistedOperators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:93"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IProtocolManager)6044": {
            "label": "contract IProtocolManager"
          },
          "t_contract(IFeeCollector)5869": {
            "label": "contract IFeeCollector"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d06d996d7d7c60aee48e0ba07d11c84420f22ecafb676efa80ff3645a5abdaef": {
      "address": "0x12dEF7cbb89FD8532Fc99f1de37c4bA2Ea538eB9",
      "txHash": "0x19463454f7b3d15b4e14c27f441969a1ed1674cd8f2be5d211863b5bd01810e4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "factory",
            "type": "t_contract(IPancakeFactory)1305",
            "src": "contracts\\workers\\PancakeswapWorker.sol:89"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "masterChef",
            "type": "t_contract(IPancakeMasterChef)8940",
            "src": "contracts\\workers\\PancakeswapWorker.sol:90"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "router",
            "type": "t_contract(IPancakeRouterV2)9330",
            "src": "contracts\\workers\\PancakeswapWorker.sol:91"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "lpToken",
            "type": "t_contract(IPancakePair)1547",
            "src": "contracts\\workers\\PancakeswapWorker.sol:92"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "wNative",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:93"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "name",
            "type": "t_string_storage",
            "src": "contracts\\workers\\PancakeswapWorker.sol:94"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "baseToken",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:95"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "token0",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:96"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "token1",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:97"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "cake",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:98"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "operatingVault",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:99"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "pid",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:100"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)6044",
            "src": "contracts\\workers\\PancakeswapWorker.sol:101"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:103"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "feeDenom",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:104"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "harvestThreshold",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:107"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "harvestPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\workers\\PancakeswapWorker.sol:108"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "strategies",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\workers\\PancakeswapWorker.sol:111"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "approvedStrategies",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\workers\\PancakeswapWorker.sol:112"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "shares",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\workers\\PancakeswapWorker.sol:115"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "totalShare",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:116"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "positionIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\workers\\PancakeswapWorker.sol:117"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "treasuryFeeBps",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:118"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "isEnabled",
            "type": "t_bool",
            "src": "contracts\\workers\\PancakeswapWorker.sol:119"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "clientFeesBps",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\workers\\PancakeswapWorker.sol:120"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "okHarvesters",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\workers\\PancakeswapWorker.sol:121"
          }
        ],
        "types": {
          "t_contract(IPancakeFactory)1305": {
            "label": "contract IPancakeFactory"
          },
          "t_contract(IPancakeMasterChef)8940": {
            "label": "contract IPancakeMasterChef"
          },
          "t_contract(IPancakeRouterV2)9330": {
            "label": "contract IPancakeRouterV2"
          },
          "t_contract(IPancakePair)1547": {
            "label": "contract IPancakePair"
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IProtocolManager)6044": {
            "label": "contract IProtocolManager"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "277af929f21b0c7ed10b502a55a276bd4011e1635a6bd77cc2fdd9fc340760e6": {
      "address": "0xa0298D8a922f1B573836C216bC9a4a843127e889",
      "txHash": "0xa6967eeed07cc9836e06788c42828636a00a9312ee29ecc9f03e2bab358489ed",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "PancakeswapStrategyLiquidate",
            "label": "factory",
            "type": "t_contract(IPancakeFactory)1305",
            "src": "contracts\\strategies\\pancake\\PancakeswapStrategyLiquidate.sol:27"
          },
          {
            "contract": "PancakeswapStrategyLiquidate",
            "label": "router",
            "type": "t_contract(IPancakeRouterV2)9344",
            "src": "contracts\\strategies\\pancake\\PancakeswapStrategyLiquidate.sol:28"
          }
        ],
        "types": {
          "t_contract(IPancakeFactory)1305": {
            "label": "contract IPancakeFactory"
          },
          "t_contract(IPancakeRouterV2)9344": {
            "label": "contract IPancakeRouterV2"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e71a6ca4e7ebf6fcb232fb1a96f6fcf5aecd301ca8896c846d82238d23310540": {
      "address": "0x4D346499aBF3E87aFf89Ce0C64fbc9D621a6B99B",
      "txHash": "0x65cb48684a68729715b2c7faa1d15f537b7955b1d0fc1254e0fef428553b113a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "Client",
            "label": "enabledFarms",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:80"
          },
          {
            "contract": "Client",
            "label": "_KIND_",
            "type": "t_string_storage",
            "src": "contracts\\Client.sol:83"
          },
          {
            "contract": "Client",
            "label": "_CLIENT_NAME_",
            "type": "t_string_storage",
            "src": "contracts\\Client.sol:84"
          },
          {
            "contract": "Client",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)6053",
            "src": "contracts\\Client.sol:87"
          },
          {
            "contract": "Client",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)5878",
            "src": "contracts\\Client.sol:89"
          },
          {
            "contract": "Client",
            "label": "whitelistedUsers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:92"
          },
          {
            "contract": "Client",
            "label": "whitelistedOperators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Client.sol:93"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IProtocolManager)6053": {
            "label": "contract IProtocolManager"
          },
          "t_contract(IFeeCollector)5878": {
            "label": "contract IFeeCollector"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ff7342b8e317857354d7d77b432bdb7015cf2243d00f9fd6af854270d6ae6387": {
      "address": "0xec8dc497b549a89931d032356BD743feF3056af5",
      "txHash": "0xfa42fdc1ac0424211b0480e62c9275c3672a88ca0c123cad57f3361424a92857",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "factory",
            "type": "t_contract(IPancakeFactory)1305",
            "src": "contracts/workers/PancakeswapWorker.sol:89"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "masterChef",
            "type": "t_contract(IPancakeMasterChef)8954",
            "src": "contracts/workers/PancakeswapWorker.sol:90"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "router",
            "type": "t_contract(IPancakeRouterV2)9344",
            "src": "contracts/workers/PancakeswapWorker.sol:91"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "lpToken",
            "type": "t_contract(IPancakePair)1547",
            "src": "contracts/workers/PancakeswapWorker.sol:92"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "wNative",
            "type": "t_address",
            "src": "contracts/workers/PancakeswapWorker.sol:93"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "name",
            "type": "t_string_storage",
            "src": "contracts/workers/PancakeswapWorker.sol:94"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "baseToken",
            "type": "t_address",
            "src": "contracts/workers/PancakeswapWorker.sol:95"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "token0",
            "type": "t_address",
            "src": "contracts/workers/PancakeswapWorker.sol:96"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "token1",
            "type": "t_address",
            "src": "contracts/workers/PancakeswapWorker.sol:97"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "cake",
            "type": "t_address",
            "src": "contracts/workers/PancakeswapWorker.sol:98"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "operatingVault",
            "type": "t_address",
            "src": "contracts/workers/PancakeswapWorker.sol:99"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "pid",
            "type": "t_uint256",
            "src": "contracts/workers/PancakeswapWorker.sol:100"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)6053",
            "src": "contracts/workers/PancakeswapWorker.sol:101"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/workers/PancakeswapWorker.sol:103"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "feeDenom",
            "type": "t_uint256",
            "src": "contracts/workers/PancakeswapWorker.sol:104"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "harvestThreshold",
            "type": "t_uint256",
            "src": "contracts/workers/PancakeswapWorker.sol:107"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "harvestPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/workers/PancakeswapWorker.sol:108"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "strategies",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/workers/PancakeswapWorker.sol:111"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "approvedStrategies",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/workers/PancakeswapWorker.sol:112"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "shares",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/workers/PancakeswapWorker.sol:115"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "totalShare",
            "type": "t_uint256",
            "src": "contracts/workers/PancakeswapWorker.sol:116"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "positionIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/workers/PancakeswapWorker.sol:117"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "treasuryFeeBps",
            "type": "t_uint256",
            "src": "contracts/workers/PancakeswapWorker.sol:118"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "isEnabled",
            "type": "t_bool",
            "src": "contracts/workers/PancakeswapWorker.sol:119"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "clientFeesBps",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/workers/PancakeswapWorker.sol:120"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "okHarvesters",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/workers/PancakeswapWorker.sol:121"
          }
        ],
        "types": {
          "t_contract(IPancakeFactory)1305": {
            "label": "contract IPancakeFactory"
          },
          "t_contract(IPancakeMasterChef)8954": {
            "label": "contract IPancakeMasterChef"
          },
          "t_contract(IPancakeRouterV2)9344": {
            "label": "contract IPancakeRouterV2"
          },
          "t_contract(IPancakePair)1547": {
            "label": "contract IPancakePair"
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IProtocolManager)6053": {
            "label": "contract IProtocolManager"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9b092cee901a5937b146866deefd14c3842f398a583d4021941cf35d8e392e49": {
      "address": "0xCF8580b3a751b0666DE649DD27713Cb91AC41b4C",
      "txHash": "0x36bafa3c628ffd254df04fecbb6f24db682a72571a5fdc12e16854cfe7165a4a",
      "layout": {
        "storage": [
          {
            "label": "initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "label": "initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeSafe",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeSafe",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeSafe",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "label": "approvedClients",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ProtocolManager",
            "src": "contracts\\ProtocolManager.sol:83"
          },
          {
            "label": "approvedVaults",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ProtocolManager",
            "src": "contracts\\ProtocolManager.sol:87"
          },
          {
            "label": "tokenToVault",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_address)",
            "contract": "ProtocolManager",
            "src": "contracts\\ProtocolManager.sol:90"
          },
          {
            "label": "approvedVaultConfigs",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ProtocolManager",
            "src": "contracts\\ProtocolManager.sol:94"
          },
          {
            "label": "checkIfApprovedBountyCollectors",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ProtocolManager",
            "src": "contracts\\ProtocolManager.sol:98"
          },
          {
            "label": "approvedBountyCollectors",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_address)dyn_storage",
            "contract": "ProtocolManager",
            "src": "contracts\\ProtocolManager.sol:102"
          },
          {
            "label": "approvedStrategiesCheck",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ProtocolManager",
            "src": "contracts\\ProtocolManager.sol:105"
          },
          {
            "label": "approvedStrategies",
            "offset": 0,
            "slot": "158",
            "type": "t_array(t_address)dyn_storage",
            "contract": "ProtocolManager",
            "src": "contracts\\ProtocolManager.sol:109"
          },
          {
            "label": "approvedNativeRelayer",
            "offset": 0,
            "slot": "159",
            "type": "t_address",
            "contract": "ProtocolManager",
            "src": "contracts\\ProtocolManager.sol:112"
          },
          {
            "label": "whitelistOperatorsList",
            "offset": 0,
            "slot": "160",
            "type": "t_array(t_address)dyn_storage",
            "contract": "ProtocolManager",
            "src": "contracts\\ProtocolManager.sol:115"
          },
          {
            "label": "approvedWorkers",
            "offset": 0,
            "slot": "161",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ProtocolManager",
            "src": "contracts\\ProtocolManager.sol:118"
          },
          {
            "label": "whitelistedOperators",
            "offset": 0,
            "slot": "162",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ProtocolManager",
            "src": "contracts\\ProtocolManager.sol:122"
          },
          {
            "label": "adminContract",
            "offset": 0,
            "slot": "163",
            "type": "t_address",
            "contract": "ProtocolManager",
            "src": "contracts\\ProtocolManager.sol:125"
          },
          {
            "label": "approvedHarvesters",
            "offset": 0,
            "slot": "164",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ProtocolManager",
            "src": "contracts\\ProtocolManager.sol:127"
          },
          {
            "label": "stables",
            "offset": 0,
            "slot": "165",
            "type": "t_array(t_address)dyn_storage",
            "contract": "ProtocolManager",
            "src": "contracts\\ProtocolManager.sol:129"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "7782693c9cd427013833f2a204a3c6bd08d06bac07f462b83b6a32c871ca25df": {
      "address": "0x82937733001322DE9bA69e9cA8e698C04f1EE1D8",
      "txHash": "0xb2ec628012b85da203c512686368fe66d2652803b295e1ef06c233711325d10e",
      "layout": {
        "storage": [
          {
            "label": "initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "label": "initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeSafe",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeSafe",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeSafe",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "label": "_notEntered",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IPancakeFactory)2710",
            "contract": "PancakeswapStrategyAddToPoolWithBaseToken",
            "src": "contracts\\strategies\\pancake\\PancakeswapStrategyAddToPoolWithBaseToken.sol:29"
          },
          {
            "label": "router",
            "offset": 0,
            "slot": "202",
            "type": "t_contract(IPancakeRouterV2)15542",
            "contract": "PancakeswapStrategyAddToPoolWithBaseToken",
            "src": "contracts\\strategies\\pancake\\PancakeswapStrategyAddToPoolWithBaseToken.sol:30"
          },
          {
            "label": "protocolManager",
            "offset": 0,
            "slot": "203",
            "type": "t_contract(IProtocolManager)8124",
            "contract": "PancakeswapStrategyAddToPoolWithBaseToken",
            "src": "contracts\\strategies\\pancake\\PancakeswapStrategyAddToPoolWithBaseToken.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IPancakeFactory)2710": {
            "label": "contract IPancakeFactory",
            "numberOfBytes": "20"
          },
          "t_contract(IPancakeRouterV2)15542": {
            "label": "contract IPancakeRouterV2",
            "numberOfBytes": "20"
          },
          "t_contract(IProtocolManager)8124": {
            "label": "contract IProtocolManager",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "fae0b29d225a1830715352a0ca0af0892b37e19a1d185896388e2096c6b633bd": {
      "address": "0x1E8f19Cd7c7A8cD426Bee9F03bD0946654356d94",
      "txHash": "0x017487be46d9577fa20c1db7ab5117d9ae733fa8d44751bcbe1a4d1f026e4dfd",
      "layout": {
        "storage": [
          {
            "label": "initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "label": "initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeSafe",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeSafe",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeSafe",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "label": "_notEntered",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IPancakeFactory)2710",
            "contract": "PancakeswapStrategyAddToPoolWithoutBaseToken",
            "src": "contracts\\strategies\\pancake\\PancakeswapStrategyAddToPoolWithoutBaseToken.sol:29"
          },
          {
            "label": "router",
            "offset": 0,
            "slot": "202",
            "type": "t_contract(IPancakeRouterV2)15542",
            "contract": "PancakeswapStrategyAddToPoolWithoutBaseToken",
            "src": "contracts\\strategies\\pancake\\PancakeswapStrategyAddToPoolWithoutBaseToken.sol:30"
          },
          {
            "label": "protocolManager",
            "offset": 0,
            "slot": "203",
            "type": "t_contract(IProtocolManager)8124",
            "contract": "PancakeswapStrategyAddToPoolWithoutBaseToken",
            "src": "contracts\\strategies\\pancake\\PancakeswapStrategyAddToPoolWithoutBaseToken.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IPancakeFactory)2710": {
            "label": "contract IPancakeFactory",
            "numberOfBytes": "20"
          },
          "t_contract(IPancakeRouterV2)15542": {
            "label": "contract IPancakeRouterV2",
            "numberOfBytes": "20"
          },
          "t_contract(IProtocolManager)8124": {
            "label": "contract IProtocolManager",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "0a1eeaa7deff075ff2b23a521295b2db455f9d44d1d630184e45b740a5a24cb9": {
      "address": "0x29d6b0f9dbA93fBCCC75C31e78ab099A4E5267D1",
      "txHash": "0x974701f53bd478155582c3dc9e16899f82346575fd086484242a107d7e5d4e9e",
      "layout": {
        "storage": [
          {
            "label": "initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "label": "initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeSafe",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeSafe",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeSafe",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "label": "_notEntered",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IPancakeFactory)2710",
            "contract": "PancakeswapStrategyLiquidate",
            "src": "contracts\\strategies\\pancake\\PancakeswapStrategyLiquidate.sol:30"
          },
          {
            "label": "router",
            "offset": 0,
            "slot": "202",
            "type": "t_contract(IPancakeRouterV2)15542",
            "contract": "PancakeswapStrategyLiquidate",
            "src": "contracts\\strategies\\pancake\\PancakeswapStrategyLiquidate.sol:31"
          },
          {
            "label": "protocolManager",
            "offset": 0,
            "slot": "203",
            "type": "t_contract(IProtocolManager)8124",
            "contract": "PancakeswapStrategyLiquidate",
            "src": "contracts\\strategies\\pancake\\PancakeswapStrategyLiquidate.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IPancakeFactory)2710": {
            "label": "contract IPancakeFactory",
            "numberOfBytes": "20"
          },
          "t_contract(IPancakeRouterV2)15542": {
            "label": "contract IPancakeRouterV2",
            "numberOfBytes": "20"
          },
          "t_contract(IProtocolManager)8124": {
            "label": "contract IProtocolManager",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    }
  }
}

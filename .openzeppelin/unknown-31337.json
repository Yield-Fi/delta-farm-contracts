{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "txHash": "0x10f5e2c0816d018481e05c93714d1a5b593cefe79e022eed48177ba9d10af15d",
    "deployTransaction": {
      "hash": "0x10f5e2c0816d018481e05c93714d1a5b593cefe79e022eed48177ba9d10af15d",
      "type": 2,
      "accessList": [],
      "blockHash": "0xc99fc782954982ac3bcf4872176ac1e59ab4298d2328a91cc1335de33f0285da",
      "blockNumber": 2,
      "transactionIndex": 0,
      "confirmations": 1,
      "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x693d4ca9"
      },
      "maxPriorityFeePerGas": {
        "type": "BigNumber",
        "hex": "0x3b9aca00"
      },
      "maxFeePerGas": {
        "type": "BigNumber",
        "hex": "0x96dfcf52"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 1,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0xdf2c801bc0d4bdf2c444beca07b1d52c853d8a15b11165d81a87d46b584eaebc",
      "s": "0x55504bd75f845c7e0a5543e426ede2a43e391283d2c0a80f2227e6ebb19db729",
      "v": 0,
      "creates": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
      "chainId": 31337
    }
  },
  "proxies": [
    {
      "address": "0x51A1ceB83B83F1985a81C295d1fF28Afef186E02",
      "txHash": "0x9c80c5f2261a6a670b9175dbe2824f60af65956c304ff94314e497f7b65b2766",
      "kind": "transparent"
    },
    {
      "address": "0x202CCe504e04bEd6fC0521238dDf04Bc9E8E15aB",
      "txHash": "0xd8b88dae2946ea914f167426bf9520a776d5b67acaec255a053a139795ecd966",
      "kind": "transparent"
    },
    {
      "address": "0x49fd2BE640DB2910c2fAb69bB8531Ab6E76127ff",
      "txHash": "0x80716b2d0933fc2778406a5671a6bbc70bd560905c3cfa8491be86f2ee4fa4f6",
      "kind": "transparent"
    },
    {
      "address": "0x86A2EE8FAf9A840F7a2c64CA3d51209F9A02081D",
      "txHash": "0x0c5c3a74354f4eddf9e1c8758538b02d2ea44c51112c1a139847d0886128e942",
      "kind": "transparent"
    },
    {
      "address": "0x851356ae760d987E095750cCeb3bC6014560891C",
      "txHash": "0x3585e052fd547aea2e677dddfa4803cb3ab18a38fa75506b7dd1d75c6ba74c0a",
      "kind": "transparent"
    },
    {
      "address": "0xCD8a1C3ba11CF5ECfa6267617243239504a98d90",
      "txHash": "0xfa4b7ac94959515ea35a2e430c1dfcee66a8c2798d31501c6fb06883c4b57c49",
      "kind": "transparent"
    },
    {
      "address": "0x7969c5eD335650692Bc04293B07F5BF2e7A673C0",
      "txHash": "0xba040cc684750dab2e2bc385cf8c99d10ba83e2cc27116ea1e2862188746a03d",
      "kind": "transparent"
    },
    {
      "address": "0x7bc06c482DEAd17c0e297aFbC32f6e63d3846650",
      "txHash": "0x2dee690eab838f11aaec62405c1043cebba6a2a1d751ca7fbc9b5b59bcd2bf1c",
      "kind": "transparent"
    },
    {
      "address": "0x36b58F5C1969B7b6591D752ea6F5486D069010AB",
      "txHash": "0xf609e128c011d0f89ec8ddee82a1a8e0568cb614df59466bcce2584d35048e0f",
      "kind": "transparent"
    },
    {
      "address": "0xf4B146FbA71F41E0592668ffbF264F1D186b2Ca8",
      "txHash": "0x0803fdca97eeacc0be077bf12ed4d117a0326b963205f53679e2b3cdbe2949c4",
      "kind": "transparent"
    },
    {
      "address": "0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6",
      "txHash": "0xd01780a8a759be1f52a94ba9b8887d4640662c84070bd9979f82c54823287199",
      "kind": "transparent"
    },
    {
      "address": "0x0DCd1Bf9A1b36cE34237eEaFef220932846BCD82",
      "txHash": "0xa12d684c0606736b99cb40b5b21ea90ee00aaf24e8d61b4aec1dd219c8e7aab0",
      "kind": "transparent"
    },
    {
      "address": "0x9A9f2CCfdE556A7E9Ff0848998Aa4a0CFD8863AE",
      "txHash": "0x34dc58ba46dee73e484385d039b8b8a6fbeae0e29f1095f57b17d0c77293e641",
      "kind": "transparent"
    },
    {
      "address": "0x4A679253410272dd5232B3Ff7cF5dbB88f295319",
      "txHash": "0xa4c0c3d7f3e0f34fc022300912a81489a1da3813ae0a25e34d7a08b5ed0967d0",
      "kind": "transparent"
    },
    {
      "address": "0x7a2088a1bFc9d81c55368AE168C2C02570cB814F",
      "txHash": "0xe2add6c74717b251664280e7de0c8b27db5519c4436d7b4eaf250d6792c357dc",
      "kind": "transparent"
    },
    {
      "address": "0x5f3f1dBD7B74C6B46e8c44f98792A1dAf8d69154",
      "txHash": "0x42843ca4c2c639fbda3c0b816783a3de68786ad45d2585f4df536860cb87db24",
      "kind": "transparent"
    },
    {
      "address": "0xb7278A61aa25c888815aFC32Ad3cC52fF24fE575",
      "txHash": "0xf1943a78d610bfa51e3bf48166e931729c1540e67da9dc69f3e868a00f2ddbdd",
      "kind": "transparent"
    },
    {
      "address": "0x82e01223d51Eb87e16A03E24687EDF0F294da6f1",
      "txHash": "0xee62d66e27cf65957dfea63d10e8099f073534060c1b8315bedde9bfe3e86524",
      "kind": "transparent"
    },
    {
      "address": "0x2bdCC0de6bE1f7D2ee689a0342D76F52E8EFABa3",
      "txHash": "0xfde4c41050f40c5a699229d0934c976ab799ffb82c62f20f11056a628443d637",
      "kind": "transparent"
    },
    {
      "address": "0xDC11f7E700A4c898AE5CAddB1082cFfa76512aDD",
      "txHash": "0x4074b4dd472e79ddd53384b721a92f530731b4fbf1a3260507a4774b79acf238",
      "kind": "transparent"
    },
    {
      "address": "0x0355B7B8cb128fA5692729Ab3AAa199C1753f726",
      "txHash": "0xfccabf1d8005651e5000bf28cca03568d9e9feb84adad638ed7842be34693dfd",
      "kind": "transparent"
    },
    {
      "address": "0x4631BCAbD6dF18D94796344963cB60d44a4136b6",
      "txHash": "0x0efb06af8ae011d2d3b9146479acc2c2002d592008b71b4d7b65a9494f5133c4",
      "kind": "transparent"
    },
    {
      "address": "0xA4899D35897033b927acFCf422bc745916139776",
      "txHash": "0xf7f063c6b1e463aac03c2855c88c2b317a3c7cd91f4cdc60933fb0533476dbe9",
      "kind": "transparent"
    },
    {
      "address": "0xf953b3A269d80e3eB0F2947630Da976B896A8C5b",
      "txHash": "0x15e7a3094c523557ee601db21d03ede62b214922f127045a9ee49fb6baff8293",
      "kind": "transparent"
    },
    {
      "address": "0xAA292E8611aDF267e563f334Ee42320aC96D0463",
      "txHash": "0x87f2fcdf84dc628a619721cdbb5470e2161d38d0167fbacbe2bf2a4391dccb43",
      "kind": "transparent"
    },
    {
      "address": "0x4EE6eCAD1c2Dae9f525404De8555724e3c35d07B",
      "txHash": "0xeced36e3c99f4164d5bb938b30604aa121571feb7aa3642c14d823e2e4c93bdc",
      "kind": "transparent"
    },
    {
      "address": "0x720472c8ce72c2A2D711333e064ABD3E6BbEAdd3",
      "txHash": "0x370b6f909cc32ac3c7bce0f017d4485ed4f4f9c3cc27c68dd1cb8295bf9fe13f",
      "kind": "transparent"
    },
    {
      "address": "0x5067457698Fd6Fa1C6964e416b3f42713513B3dD",
      "txHash": "0xcaf3198e294f7fb5b50e90f4415ac5768ae9e2224eb563b12906bbe779bc92f1",
      "kind": "transparent"
    },
    {
      "address": "0xD5ac451B0c50B9476107823Af206eD814a2e2580",
      "txHash": "0x4b2ba9c331b8a37e887683208ebe9bfcbfafa73f352bc7ee1ae9128ee5161335",
      "kind": "transparent"
    },
    {
      "address": "0x34B40BA116d5Dec75548a9e9A8f15411461E8c70",
      "txHash": "0x7f7bfd235676a5b1f515df97638702b36c8eec7e466daa52c2c4816c05331790",
      "kind": "transparent"
    },
    {
      "address": "0x172076E0166D1F9Cc711C77Adf8488051744980C",
      "txHash": "0xc858043087b47631972189b20e4dfbff89c2460ba9d4943aafbf23cd28e68f41",
      "kind": "transparent"
    },
    {
      "address": "0x5c74c94173F05dA1720953407cbb920F3DF9f887",
      "txHash": "0x8a7d4930b6068c36d3804e7e6e35f63a59a76b27f5231ac4b34f04b500419f68",
      "kind": "transparent"
    },
    {
      "address": "0xe8D2A1E88c91DCd5433208d4152Cc4F399a7e91d",
      "txHash": "0x0a0432a8f003b36be051c7b9bbf1907bb3209d4c72fde3465e3d1664c98ad9c1",
      "kind": "transparent"
    },
    {
      "address": "0x4b6aB5F819A515382B0dEB6935D793817bB4af28",
      "txHash": "0xc7ffbf198b61d01bbb027d483a2bd05b96bb7b9c12e062a6a58c213f5959a028",
      "kind": "transparent"
    },
    {
      "address": "0x0165878A594ca255338adfa4d48449f69242Eb8F",
      "txHash": "0xfb831210d4b27845c791da5982e886e9f9130659ec2853b97ba28baad0078801",
      "kind": "transparent"
    },
    {
      "address": "0x610178dA211FEF7D417bC0e6FeD39F05609AD788",
      "txHash": "0x28aa7ab3d33df846c5fdf167c8d18990d2c8f7b74bf73a99cd15a9f7a964a707",
      "kind": "transparent"
    },
    {
      "address": "0xc5a5C42992dECbae36851359345FE25997F5C42d",
      "txHash": "0xd98fa35e7e26052afc83cff25c9334d5947186c802c99e3ebc69f38e9ca324b4",
      "kind": "transparent"
    },
    {
      "address": "0xE6E340D132b5f46d1e472DebcD681B2aBc16e57E",
      "txHash": "0xd633620916715fc05f0b3c31ce63894e1a6c0f9a4b5269c345c64102e7837123",
      "kind": "transparent"
    },
    {
      "address": "0xa82fF9aFd8f496c3d6ac40E2a0F282E47488CFc9",
      "txHash": "0xa142fd133546166b5093b2b66c127fe590c33cab3057e423003b2f1fbcfa6d8e",
      "kind": "transparent"
    },
    {
      "address": "0x9E545E3C0baAB3E08CdfD552C960A1050f373042",
      "txHash": "0xac8ed619101ad1fe0ad87b11c7b5a60bb19bd0924ad159d529a009005225be17",
      "kind": "transparent"
    },
    {
      "address": "0xf5059a5D33d5853360D16C683c16e67980206f36",
      "txHash": "0x1c9bc5b32b75a3ca749607f1f3f8a3695439e43aa4692567a9af6d21560ed455",
      "kind": "transparent"
    },
    {
      "address": "0x4826533B4897376654Bb4d4AD88B7faFD0C98528",
      "txHash": "0x0ef9b5c932538f27e0f24c3682f42210047248fc55399297eb151ebaa66417b3",
      "kind": "transparent"
    },
    {
      "address": "0xc351628EB244ec633d5f21fBD6621e1a683B1181",
      "txHash": "0x3864ff99284e0702308906f97a5d3f604dee65e56758e3fb2d2a9eecccb6f708",
      "kind": "transparent"
    },
    {
      "address": "0xFD471836031dc5108809D173A067e8486B9047A3",
      "txHash": "0x934d422f45e2190dc5bfd96a4069a81ddae2a732a39c4c5728d5f9ce6ba3dff6",
      "kind": "transparent"
    },
    {
      "address": "0x04C89607413713Ec9775E14b954286519d836FEf",
      "txHash": "0xd62c7ec723be80083b465e2d71862bfebd0fda5660a29c0c0dc5b4a8200920c1",
      "kind": "transparent"
    },
    {
      "address": "0xBEc49fA140aCaA83533fB00A2BB19bDdd0290f25",
      "txHash": "0xebe2996856387c5fb7aa4b7b52e5d52db444a670c6d028ef682892b92baca49e",
      "kind": "transparent"
    },
    {
      "address": "0x46b142DD1E924FAb83eCc3c08e4D46E82f005e0E",
      "txHash": "0x4c64d2aca2911561c9dec7e16a6ff721a8ad6c75e64f1567d9a8615d89f852bb",
      "kind": "transparent"
    },
    {
      "address": "0xdbC43Ba45381e02825b14322cDdd15eC4B3164E6",
      "txHash": "0x41285bec7c9f1f73afcd9888431cc686acb3209b018e247d0f5d02899335fcd2",
      "kind": "transparent"
    },
    {
      "address": "0x2E2Ed0Cfd3AD2f1d34481277b3204d807Ca2F8c2",
      "txHash": "0xa49f5d15997e0fbe73ab73592aad7a348ca96d622f90f15c04289b61f9ac7e96",
      "kind": "transparent"
    },
    {
      "address": "0xfbC22278A96299D91d41C453234d97b4F5Eb9B2d",
      "txHash": "0x66c58380177a4ac9032086f5d8e1d416d390fe664cfa2613afc0bf43a422c6ca",
      "kind": "transparent"
    },
    {
      "address": "0xC9a43158891282A2B1475592D5719c001986Aaec",
      "txHash": "0xd57a6432bd1d6d1d681eac1c0eb96848f2ef0e53259aefc66e6bb89dcb5c2295",
      "kind": "transparent"
    },
    {
      "address": "0x367761085BF3C12e5DA2Df99AC6E1a824612b8fb",
      "txHash": "0xda170b3e6bde9c0813ad2dbb0dd0cb024a7d7c58c9b67bc8ef85898aade2ff4a",
      "kind": "transparent"
    },
    {
      "address": "0x4C2F7092C2aE51D986bEFEe378e50BD4dB99C901",
      "txHash": "0x5cda901ad04732c1a6970b6b11d91f120fe5ac6ec807a8cc19e950d211dce496",
      "kind": "transparent"
    },
    {
      "address": "0x7A9Ec1d04904907De0ED7b6839CcdD59c3716AC9",
      "txHash": "0x62619c6012762e7aa19bb1c43895c8c0518b72f1bd73e1b8881762ac41df3ea1",
      "kind": "transparent"
    },
    {
      "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      "txHash": "0xbabef1212ea63c79e515988bbb0498d32abc4f1d666e3218710f51513659045e",
      "kind": "transparent"
    },
    {
      "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
      "txHash": "0x751d49ec2e09c04ef8d5835dba34020772c2d61c739965e2b63ec19e9f3076d5",
      "kind": "transparent"
    },
    {
      "address": "0xA51c1fc2f0D1a1b8494Ed1FE312d7C3a78Ed91C0",
      "txHash": "0xe1b202aa77c45ab2476db3667d885bbb6c4b73b201baa20690aefa3de311f967",
      "kind": "transparent"
    },
    {
      "address": "0x0B306BF915C4d645ff596e518fAf3F9669b97016",
      "txHash": "0xcbc1f2026640e4528bd2b2c93ca31b301255210278081ac628595dbfcf7ae21e",
      "kind": "transparent"
    },
    {
      "address": "0xc6e7DF5E7b4f2A278906862b61205850344D4e7d",
      "txHash": "0x87b54456a453d41ccb14783cbda60a0045d069d87f47445545f40335e601ba07",
      "kind": "transparent"
    },
    {
      "address": "0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f",
      "txHash": "0x1a1e5d1531d48764f5857946ee2fa7bd4f8406a4330b1740d3ccfef6c2ca178d",
      "kind": "transparent"
    },
    {
      "address": "0x09635F643e140090A9A8Dcd712eD6285858ceBef",
      "txHash": "0xe17a0f96066627932b4f26adc4e219576a50389a71afd240648621eca84ab324",
      "kind": "transparent"
    },
    {
      "address": "0x84eA74d481Ee0A5332c457a4d796187F6Ba67fEB",
      "txHash": "0xee804a02e3fbc1d5bba0aeb125c4ca088e3dd0e88d4fe519826d4699f37a1c08",
      "kind": "transparent"
    },
    {
      "address": "0x1613beB3B2C4f22Ee086B2b38C1476A3cE7f78E8",
      "txHash": "0xf9bcf728ebc4aa654ec2fbecdeacd22c06a6f1db678e37e8b4ca5774eabd34ca",
      "kind": "transparent"
    },
    {
      "address": "0x998abeb3E57409262aE5b751f60747921B33613E",
      "txHash": "0x51a959b950c99ec7a7bca2b3df4087df2a8852c3cd17cdf08f2a4858a7da4eab",
      "kind": "transparent"
    },
    {
      "address": "0x0E801D84Fa97b50751Dbf25036d067dCf18858bF",
      "txHash": "0x389d6f0e0bad40ba0c3664be5b1043af3c3d389b021f69702422aa6de757a706",
      "kind": "transparent"
    },
    {
      "address": "0xcbEAF3BDe82155F56486Fb5a1072cb8baAf547cc",
      "txHash": "0x94fbf06c8fcbc0e4904ed56831fe2d35706482a3f06ac9b6a1de2e949c16452c",
      "kind": "transparent"
    },
    {
      "address": "0x1429859428C0aBc9C2C47C8Ee9FBaf82cFA0F20f",
      "txHash": "0x6da10c4d1f05436d5bf24674a89d237c5759f6fd0d18bc5b10a26b5de40a22e7",
      "kind": "transparent"
    },
    {
      "address": "0xB0D4afd8879eD9F52b28595d31B441D079B2Ca07",
      "txHash": "0xd23db6e8b27447d28339c0a2385ae633c74ae82abf6bd83bd4482f95749c24f3",
      "kind": "transparent"
    },
    {
      "address": "0x922D6956C99E12DFeB3224DEA977D0939758A1Fe",
      "txHash": "0x7bc645cc02428ca4d6a3bad99b844e3f3f9e27abe56900c93c72b419ae97b2ff",
      "kind": "transparent"
    },
    {
      "address": "0x5081a39b8A5f0E35a8D959395a630b68B74Dd30f",
      "txHash": "0xfe85375950ff4e8b35e75ef526813f658e3fab766e62b97b85ae54624aa72f78",
      "kind": "transparent"
    },
    {
      "address": "0x2B0d36FACD61B71CC05ab8F3D2355ec3631C0dd5",
      "txHash": "0xc20fa36aa984b23f9ad4a6255657923660e0b95a35fd84750063317aae5501db",
      "kind": "transparent"
    },
    {
      "address": "0x1c85638e118b37167e9298c2268758e058DdfDA0",
      "txHash": "0xe608ff3338312c77f70cbf6971ccc6de7450762ded3a07ea8a8d4059b31e1bc3",
      "kind": "transparent"
    },
    {
      "address": "0x18E317A7D70d8fBf8e6E893616b52390EbBdb629",
      "txHash": "0x88484ac87bdb15decfffba4ea07c8c5af10d96307105e525689713e8146e002c",
      "kind": "transparent"
    },
    {
      "address": "0xCace1b78160AE76398F486c8a18044da0d66d86D",
      "txHash": "0x246dfa7b6b3bc72fcee9416c5de2718d20233accd91ed09e4fb14db39c986c6b",
      "kind": "transparent"
    },
    {
      "address": "0xF8e31cb472bc70500f08Cd84917E5A1912Ec8397",
      "txHash": "0x07a8c3d04fe5ee7277bca8a6e1f75e3dd0ef5f025e29081afd5a898789812d87",
      "kind": "transparent"
    },
    {
      "address": "0xc0F115A19107322cFBf1cDBC7ea011C19EbDB4F8",
      "txHash": "0xd94207247501043f38e150d4481cd2bff32a435e126aaa566ebcf6a8bb2f2778",
      "kind": "transparent"
    },
    {
      "address": "0xc96304e3c037f81dA488ed9dEa1D8F2a48278a75",
      "txHash": "0xb3254c7c6d188afbfd1073cb028f23756100a584cee98f5f5667dbb126665eb8",
      "kind": "transparent"
    },
    {
      "address": "0x07882Ae1ecB7429a84f1D53048d35c4bB2056877",
      "txHash": "0x5197e47d4335d5be03c6e5674a7fe507a29d95412320c70fe6f12609296d7248",
      "kind": "transparent"
    },
    {
      "address": "0x22753E4264FDDc6181dc7cce468904A80a363E44",
      "txHash": "0xed28328aab8872fa92ef8bc2db5584f8a8c7b8f0e3cc00cc8e08d69f05ebe09d",
      "kind": "transparent"
    }
  ],
  "impls": {
    "7aad4d5ae6f6fe3cf062ffe7f97914d3d4ed12a4f23b54011f68749f01370106": {
      "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      "txHash": "0xd7e391f694079af4818f83fcdab1275940d1045b22095ed4570ee31db72716a8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol:317"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "02b0a00d04adaecbd40aee8d62aea10bb6493bed6e304e46da8006c75a60d85b": {
      "address": "0xc3e53F4d16Ae77Db1c982e75a937B9f60FE63690",
      "txHash": "0x0947cf2ea7970f20730d23ee03f6f695fbad813b0fd322518756672f062de9bc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "PancakeswapStrategyLiquidate",
            "label": "factory",
            "type": "t_contract(IPancakeFactory)1305",
            "src": "contracts\\strategies\\pancake\\PancakeswapStrategyLiquidate.sol:24"
          },
          {
            "contract": "PancakeswapStrategyLiquidate",
            "label": "router",
            "type": "t_contract(IPancakeRouterV2)6307",
            "src": "contracts\\strategies\\pancake\\PancakeswapStrategyLiquidate.sol:25"
          }
        ],
        "types": {
          "t_contract(IPancakeFactory)1305": {
            "label": "contract IPancakeFactory"
          },
          "t_contract(IPancakeRouterV2)6307": {
            "label": "contract IPancakeRouterV2"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "782b917b2dd3551bdf34011d6d5bb414777bfcd4891add8aacd396a7660137c2": {
      "address": "0x5067457698Fd6Fa1C6964e416b3f42713513B3dD",
      "txHash": "0x1bc696e55e6be32de3a9b09c58b1a403700fb0c8d9a91760ec0c7aa1d4a6e23c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "WNativeRelayer",
            "label": "wnative",
            "type": "t_address",
            "src": "contracts\\WNativeRelayer.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "602c068344c0ec1280189180de9b3f25e04ebe549a7809140039b890a56a548e": {
      "address": "0x4b6aB5F819A515382B0dEB6935D793817bB4af28",
      "txHash": "0x9a38c4cd6d61efe7c8f63c9584dc4d53b25017d05d1e598c8106f05a96eecd15",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "VaultConfig",
            "label": "workers",
            "type": "t_mapping(t_address,t_contract(IWorkerConfig)3345)",
            "src": "contracts\\VaultConfig.sol:28"
          },
          {
            "contract": "VaultConfig",
            "label": "nativeTokenAddr",
            "type": "t_address",
            "src": "contracts\\VaultConfig.sol:30"
          },
          {
            "contract": "VaultConfig",
            "label": "wNativeRelayer",
            "type": "t_address",
            "src": "contracts\\VaultConfig.sol:32"
          },
          {
            "contract": "VaultConfig",
            "label": "whitelistedCallers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\VaultConfig.sol:34"
          },
          {
            "contract": "VaultConfig",
            "label": "treasury",
            "type": "t_address",
            "src": "contracts\\VaultConfig.sol:36"
          },
          {
            "contract": "VaultConfig",
            "label": "approvedAddStrategies",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\VaultConfig.sol:38"
          },
          {
            "contract": "VaultConfig",
            "label": "whitelistedLiquidators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\VaultConfig.sol:40"
          }
        ],
        "types": {
          "t_mapping(t_address,t_contract(IWorkerConfig)3345)": {
            "label": "mapping(address => contract IWorkerConfig)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IWorkerConfig)3345": {
            "label": "contract IWorkerConfig"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "cd1d7bc768d78e8d26e3c77cf18b7e74438ba1c9660928baad6a7edf9b39393b": {
      "address": "0xf953b3A269d80e3eB0F2947630Da976B896A8C5b",
      "txHash": "0xe8baabf94d5176828118c44b364a3992b496e6cf96680e782c44620c57a17e6f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol:317"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "Vault",
            "label": "_IN_EXEC_LOCK",
            "type": "t_uint256",
            "src": "contracts\\Vault.sol:41"
          },
          {
            "contract": "Vault",
            "label": "POSITION_ID",
            "type": "t_uint256",
            "src": "contracts\\Vault.sol:42"
          },
          {
            "contract": "Vault",
            "label": "STRATEGY",
            "type": "t_address",
            "src": "contracts\\Vault.sol:43"
          },
          {
            "contract": "Vault",
            "label": "token",
            "type": "t_address",
            "src": "contracts\\Vault.sol:47"
          },
          {
            "contract": "Vault",
            "label": "config",
            "type": "t_contract(IVaultConfig)2865",
            "src": "contracts\\Vault.sol:54"
          },
          {
            "contract": "Vault",
            "label": "positions",
            "type": "t_mapping(t_uint256,t_struct(Position)1802_storage)",
            "src": "contracts\\Vault.sol:55"
          },
          {
            "contract": "Vault",
            "label": "nextPositionID",
            "type": "t_uint256",
            "src": "contracts\\Vault.sol:56"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IVaultConfig)2865": {
            "label": "contract IVaultConfig"
          },
          "t_mapping(t_uint256,t_struct(Position)1802_storage)": {
            "label": "mapping(uint256 => struct Vault.Position)"
          },
          "t_struct(Position)1802_storage": {
            "label": "struct Vault.Position",
            "members": [
              {
                "label": "worker",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c2e1abd0fa4464b1fec87968af558cedc21fcd578fa6421f6570bd82f788d2c7": {
      "address": "0x2bdCC0de6bE1f7D2ee689a0342D76F52E8EFABa3",
      "txHash": "0xf446932a71cddb675ae5c6bc18f7097e75f1a8dd3c2bc362546d2dcead12da7a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "masterChef",
            "type": "t_contract(IPancakeMasterChef)5601",
            "src": "contracts\\workers\\PancakeswapWorker.sol:58"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "router",
            "type": "t_contract(IPancakeRouterV2)5991",
            "src": "contracts\\workers\\PancakeswapWorker.sol:59"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "lpToken",
            "type": "t_contract(IPancakePair)1547",
            "src": "contracts\\workers\\PancakeswapWorker.sol:60"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "wNative",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:61"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "baseToken",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:62"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "token0",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:63"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "token1",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:64"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "cake",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:65"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "operatingVault",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:66"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "pid",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:67"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "shares",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\workers\\PancakeswapWorker.sol:70"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "approvedStrategies",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\workers\\PancakeswapWorker.sol:71"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "totalShare",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:72"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "reinvestStrategy",
            "type": "t_contract(IStrategy)2774",
            "src": "contracts\\workers\\PancakeswapWorker.sol:73"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "liqStrat",
            "type": "t_contract(IStrategy)2774",
            "src": "contracts\\workers\\PancakeswapWorker.sol:74"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "reinvestBountyBps",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:75"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "maxReinvestBountyBps",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:76"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "okReinvestors",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\workers\\PancakeswapWorker.sol:77"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:80"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "feeDenom",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:81"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "reinvestThreshold",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:84"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "reinvestPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\workers\\PancakeswapWorker.sol:85"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "treasuryAccount",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:86"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "treasuryBountyBps",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:87"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "beneficialVault",
            "type": "t_contract(IVault)2796",
            "src": "contracts\\workers\\PancakeswapWorker.sol:88"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "beneficialVaultBountyBps",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:89"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "rewardPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\workers\\PancakeswapWorker.sol:90"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "buybackAmount",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:91"
          }
        ],
        "types": {
          "t_contract(IPancakeMasterChef)5601": {
            "label": "contract IPancakeMasterChef"
          },
          "t_contract(IPancakeRouterV2)5991": {
            "label": "contract IPancakeRouterV2"
          },
          "t_contract(IPancakePair)1547": {
            "label": "contract IPancakePair"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IStrategy)2774": {
            "label": "contract IStrategy"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IVault)2796": {
            "label": "contract IVault"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3185e37d16387e50b96a150434474414a9e75797d18b8f79384087d02c92f5b3": {
      "address": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
      "txHash": "0x1e582d70a3f71bcee703a99998eef710ac4471e36ca74ae4ce9dd2b5afa0c7b7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "BountyCollector",
            "label": "bounties",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\BountyCollector.sol:24"
          },
          {
            "contract": "BountyCollector",
            "label": "okCollectors",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\BountyCollector.sol:27"
          },
          {
            "contract": "BountyCollector",
            "label": "okWorkers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\BountyCollector.sol:29"
          },
          {
            "contract": "BountyCollector",
            "label": "_bountyToken",
            "type": "t_address",
            "src": "contracts\\BountyCollector.sol:32"
          },
          {
            "contract": "BountyCollector",
            "label": "_bountyThreshold",
            "type": "t_uint256",
            "src": "contracts\\BountyCollector.sol:33"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d2e78cf13cf6cdd28ae55c3f15fa8af2314a0d9f2c398379e10f126667ccc358": {
      "address": "0xD5ac451B0c50B9476107823Af206eD814a2e2580",
      "txHash": "0x3b3da231a8848d9db09bd4d210a0fdf77e6fd9864d07feab1d1e79a760e70ac8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol:317"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "Vault",
            "label": "_IN_EXEC_LOCK",
            "type": "t_uint256",
            "src": "contracts\\Vault.sol:41"
          },
          {
            "contract": "Vault",
            "label": "POSITION_ID",
            "type": "t_uint256",
            "src": "contracts\\Vault.sol:42"
          },
          {
            "contract": "Vault",
            "label": "STRATEGY",
            "type": "t_address",
            "src": "contracts\\Vault.sol:43"
          },
          {
            "contract": "Vault",
            "label": "token",
            "type": "t_address",
            "src": "contracts\\Vault.sol:47"
          },
          {
            "contract": "Vault",
            "label": "config",
            "type": "t_contract(IVaultConfig)3204",
            "src": "contracts\\Vault.sol:54"
          },
          {
            "contract": "Vault",
            "label": "positions",
            "type": "t_mapping(t_uint256,t_struct(Position)2090_storage)",
            "src": "contracts\\Vault.sol:55"
          },
          {
            "contract": "Vault",
            "label": "nextPositionID",
            "type": "t_uint256",
            "src": "contracts\\Vault.sol:56"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IVaultConfig)3204": {
            "label": "contract IVaultConfig"
          },
          "t_mapping(t_uint256,t_struct(Position)2090_storage)": {
            "label": "mapping(uint256 => struct Vault.Position)"
          },
          "t_struct(Position)2090_storage": {
            "label": "struct Vault.Position",
            "members": [
              {
                "label": "worker",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8850564c4b06e66b9452ccfb870fb205be10a175484d4d5c2a4d479cf4c8311f": {
      "address": "0x3Aa5ebB10DC797CAC828524e59A333d0A371443c",
      "txHash": "0x9512ab785e20a547b1cb048b132730eec1d0083291c526308365f99c7d7cdc2b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "PancakeswapStrategyAddBaseTokenOnly",
            "label": "factory",
            "type": "t_contract(IPancakeFactory)1305",
            "src": "contracts\\strategies\\pancake\\PancakeswapStrategyAddBaseTokenOnly.sol:29"
          },
          {
            "contract": "PancakeswapStrategyAddBaseTokenOnly",
            "label": "router",
            "type": "t_contract(IPancakeRouterV2)6307",
            "src": "contracts\\strategies\\pancake\\PancakeswapStrategyAddBaseTokenOnly.sol:30"
          }
        ],
        "types": {
          "t_contract(IPancakeFactory)1305": {
            "label": "contract IPancakeFactory"
          },
          "t_contract(IPancakeRouterV2)6307": {
            "label": "contract IPancakeRouterV2"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "60e27a4401e1b344a5bb163e76963770f0724c5456e667099c7820d45303028c": {
      "address": "0x9E545E3C0baAB3E08CdfD552C960A1050f373042",
      "txHash": "0x4d9278dfae709088c6d64d78c35e6cac84db6b6a307ce4e6feb66f085e67211e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "masterChef",
            "type": "t_contract(IPancakeMasterChef)5944",
            "src": "contracts\\workers\\PancakeswapWorker.sol:53"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "router",
            "type": "t_contract(IPancakeRouterV2)6334",
            "src": "contracts\\workers\\PancakeswapWorker.sol:54"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "lpToken",
            "type": "t_contract(IPancakePair)1547",
            "src": "contracts\\workers\\PancakeswapWorker.sol:55"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "wNative",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:56"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "baseToken",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:57"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "token0",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:58"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "token1",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:59"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "cake",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:60"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "operatingVault",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:61"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "pid",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:62"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "shares",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\workers\\PancakeswapWorker.sol:65"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "approvedStrategies",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\workers\\PancakeswapWorker.sol:66"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "totalShare",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:67"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "reinvestStrategy",
            "type": "t_contract(IStrategy)3113",
            "src": "contracts\\workers\\PancakeswapWorker.sol:68"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "liqStrat",
            "type": "t_contract(IStrategy)3113",
            "src": "contracts\\workers\\PancakeswapWorker.sol:69"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "treasuryFeeBps",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:70"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "maxFeeBps",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:71"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "okReinvestors",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\workers\\PancakeswapWorker.sol:72"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:75"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "feeDenom",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:76"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "reinvestThreshold",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:79"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "reinvestPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\workers\\PancakeswapWorker.sol:80"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "bountyCollector",
            "type": "t_contract(IBountyCollector)3089",
            "src": "contracts\\workers\\PancakeswapWorker.sol:81"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "rewardPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\workers\\PancakeswapWorker.sol:82"
          }
        ],
        "types": {
          "t_contract(IPancakeMasterChef)5944": {
            "label": "contract IPancakeMasterChef"
          },
          "t_contract(IPancakeRouterV2)6334": {
            "label": "contract IPancakeRouterV2"
          },
          "t_contract(IPancakePair)1547": {
            "label": "contract IPancakePair"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IStrategy)3113": {
            "label": "contract IStrategy"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IBountyCollector)3089": {
            "label": "contract IBountyCollector"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7d9f68d8e0bd7405a992c24d2f458b9353a04af94e8c2e45559d3148106ab06b": {
      "address": "0x162A433068F51e18b7d13932F27e66a3f99E6890",
      "txHash": "0x83a03f953f7bca953c01cc718571e7991ade2564bd5d03cf0952d26820c8944c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "masterChef",
            "type": "t_contract(IPancakeMasterChef)5917",
            "src": "contracts\\workers\\PancakeswapWorker.sol:51"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "router",
            "type": "t_contract(IPancakeRouterV2)6307",
            "src": "contracts\\workers\\PancakeswapWorker.sol:52"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "lpToken",
            "type": "t_contract(IPancakePair)1547",
            "src": "contracts\\workers\\PancakeswapWorker.sol:53"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "wNative",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:54"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "baseToken",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:55"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "token0",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:56"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "token1",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:57"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "cake",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:58"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "operatingVault",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:59"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "pid",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:60"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "shares",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\workers\\PancakeswapWorker.sol:63"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "approvedStrategies",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\workers\\PancakeswapWorker.sol:64"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "totalShare",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:65"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "reinvestStrategy",
            "type": "t_contract(IStrategy)3113",
            "src": "contracts\\workers\\PancakeswapWorker.sol:66"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "treasuryFeeBps",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:67"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "maxFeeBps",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:68"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "okReinvestors",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\workers\\PancakeswapWorker.sol:69"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:72"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "feeDenom",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:73"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "reinvestThreshold",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:76"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "reinvestPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\workers\\PancakeswapWorker.sol:77"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "bountyCollector",
            "type": "t_contract(IBountyCollector)3089",
            "src": "contracts\\workers\\PancakeswapWorker.sol:78"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "rewardToFeePath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\workers\\PancakeswapWorker.sol:79"
          }
        ],
        "types": {
          "t_contract(IPancakeMasterChef)5917": {
            "label": "contract IPancakeMasterChef"
          },
          "t_contract(IPancakeRouterV2)6307": {
            "label": "contract IPancakeRouterV2"
          },
          "t_contract(IPancakePair)1547": {
            "label": "contract IPancakePair"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IStrategy)3113": {
            "label": "contract IStrategy"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IBountyCollector)3089": {
            "label": "contract IBountyCollector"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}

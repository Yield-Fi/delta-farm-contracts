{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "txHash": "0x10f5e2c0816d018481e05c93714d1a5b593cefe79e022eed48177ba9d10af15d",
    "deployTransaction": {
      "hash": "0x10f5e2c0816d018481e05c93714d1a5b593cefe79e022eed48177ba9d10af15d",
      "type": 2,
      "accessList": [],
      "blockHash": "0xbf13d7cfd20ff28bae5978ddd6b95d3cd4c08caa52ef8b6ffd6bbf68ca80be4d",
      "blockNumber": 2,
      "transactionIndex": 0,
      "confirmations": 1,
      "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x693d4ca9"
      },
      "maxPriorityFeePerGas": {
        "type": "BigNumber",
        "hex": "0x3b9aca00"
      },
      "maxFeePerGas": {
        "type": "BigNumber",
        "hex": "0x96dfcf52"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 1,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0xdf2c801bc0d4bdf2c444beca07b1d52c853d8a15b11165d81a87d46b584eaebc",
      "s": "0x55504bd75f845c7e0a5543e426ede2a43e391283d2c0a80f2227e6ebb19db729",
      "v": 0,
      "creates": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
      "chainId": 31337
    }
  },
  "proxies": [
    {
      "address": "0x202CCe504e04bEd6fC0521238dDf04Bc9E8E15aB",
      "txHash": "0xd8b88dae2946ea914f167426bf9520a776d5b67acaec255a053a139795ecd966",
      "kind": "transparent"
    },
    {
      "address": "0x851356ae760d987E095750cCeb3bC6014560891C",
      "txHash": "0x3585e052fd547aea2e677dddfa4803cb3ab18a38fa75506b7dd1d75c6ba74c0a",
      "kind": "transparent"
    },
    {
      "address": "0x7969c5eD335650692Bc04293B07F5BF2e7A673C0",
      "txHash": "0xba040cc684750dab2e2bc385cf8c99d10ba83e2cc27116ea1e2862188746a03d",
      "kind": "transparent"
    },
    {
      "address": "0x36b58F5C1969B7b6591D752ea6F5486D069010AB",
      "txHash": "0xf609e128c011d0f89ec8ddee82a1a8e0568cb614df59466bcce2584d35048e0f",
      "kind": "transparent"
    },
    {
      "address": "0xf4B146FbA71F41E0592668ffbF264F1D186b2Ca8",
      "txHash": "0x0803fdca97eeacc0be077bf12ed4d117a0326b963205f53679e2b3cdbe2949c4",
      "kind": "transparent"
    },
    {
      "address": "0x0DCd1Bf9A1b36cE34237eEaFef220932846BCD82",
      "txHash": "0xa12d684c0606736b99cb40b5b21ea90ee00aaf24e8d61b4aec1dd219c8e7aab0",
      "kind": "transparent"
    },
    {
      "address": "0x9A9f2CCfdE556A7E9Ff0848998Aa4a0CFD8863AE",
      "txHash": "0x34dc58ba46dee73e484385d039b8b8a6fbeae0e29f1095f57b17d0c77293e641",
      "kind": "transparent"
    },
    {
      "address": "0x4A679253410272dd5232B3Ff7cF5dbB88f295319",
      "txHash": "0xa4c0c3d7f3e0f34fc022300912a81489a1da3813ae0a25e34d7a08b5ed0967d0",
      "kind": "transparent"
    },
    {
      "address": "0x7a2088a1bFc9d81c55368AE168C2C02570cB814F",
      "txHash": "0xe2add6c74717b251664280e7de0c8b27db5519c4436d7b4eaf250d6792c357dc",
      "kind": "transparent"
    },
    {
      "address": "0x0355B7B8cb128fA5692729Ab3AAa199C1753f726",
      "txHash": "0xfccabf1d8005651e5000bf28cca03568d9e9feb84adad638ed7842be34693dfd",
      "kind": "transparent"
    },
    {
      "address": "0xAA292E8611aDF267e563f334Ee42320aC96D0463",
      "txHash": "0x87f2fcdf84dc628a619721cdbb5470e2161d38d0167fbacbe2bf2a4391dccb43",
      "kind": "transparent"
    },
    {
      "address": "0x4EE6eCAD1c2Dae9f525404De8555724e3c35d07B",
      "txHash": "0xeced36e3c99f4164d5bb938b30604aa121571feb7aa3642c14d823e2e4c93bdc",
      "kind": "transparent"
    },
    {
      "address": "0x172076E0166D1F9Cc711C77Adf8488051744980C",
      "txHash": "0xc858043087b47631972189b20e4dfbff89c2460ba9d4943aafbf23cd28e68f41",
      "kind": "transparent"
    },
    {
      "address": "0x5c74c94173F05dA1720953407cbb920F3DF9f887",
      "txHash": "0x8a7d4930b6068c36d3804e7e6e35f63a59a76b27f5231ac4b34f04b500419f68",
      "kind": "transparent"
    },
    {
      "address": "0xc5a5C42992dECbae36851359345FE25997F5C42d",
      "txHash": "0xd98fa35e7e26052afc83cff25c9334d5947186c802c99e3ebc69f38e9ca324b4",
      "kind": "transparent"
    },
    {
      "address": "0xE6E340D132b5f46d1e472DebcD681B2aBc16e57E",
      "txHash": "0xd633620916715fc05f0b3c31ce63894e1a6c0f9a4b5269c345c64102e7837123",
      "kind": "transparent"
    },
    {
      "address": "0xf5059a5D33d5853360D16C683c16e67980206f36",
      "txHash": "0x1c9bc5b32b75a3ca749607f1f3f8a3695439e43aa4692567a9af6d21560ed455",
      "kind": "transparent"
    },
    {
      "address": "0x4826533B4897376654Bb4d4AD88B7faFD0C98528",
      "txHash": "0x0ef9b5c932538f27e0f24c3682f42210047248fc55399297eb151ebaa66417b3",
      "kind": "transparent"
    },
    {
      "address": "0xFD471836031dc5108809D173A067e8486B9047A3",
      "txHash": "0x934d422f45e2190dc5bfd96a4069a81ddae2a732a39c4c5728d5f9ce6ba3dff6",
      "kind": "transparent"
    },
    {
      "address": "0x04C89607413713Ec9775E14b954286519d836FEf",
      "txHash": "0xd62c7ec723be80083b465e2d71862bfebd0fda5660a29c0c0dc5b4a8200920c1",
      "kind": "transparent"
    },
    {
      "address": "0xfbC22278A96299D91d41C453234d97b4F5Eb9B2d",
      "txHash": "0x66c58380177a4ac9032086f5d8e1d416d390fe664cfa2613afc0bf43a422c6ca",
      "kind": "transparent"
    },
    {
      "address": "0x2B0d36FACD61B71CC05ab8F3D2355ec3631C0dd5",
      "txHash": "0x9d3602db8b4f08afda0aefea8e391582e8d8270175b945f17447d19726229776",
      "kind": "transparent"
    },
    {
      "address": "0x4C2F7092C2aE51D986bEFEe378e50BD4dB99C901",
      "txHash": "0xcdb142cae627037f91a229decd6d5ef42ef824b871cf09c9616f4123443d2d0e",
      "kind": "transparent"
    },
    {
      "address": "0xBEc49fA140aCaA83533fB00A2BB19bDdd0290f25",
      "txHash": "0x7ea4e7b90b46815454e11ab034ce0c280fe86ba238b8a273fb84ed6f2d1e382b",
      "kind": "transparent"
    },
    {
      "address": "0x46b142DD1E924FAb83eCc3c08e4D46E82f005e0E",
      "txHash": "0xa9311d81526080fc3dfc6ed2ca7cd5ccf494fec1377ab578462076184c26779d",
      "kind": "transparent"
    },
    {
      "address": "0x720472c8ce72c2A2D711333e064ABD3E6BbEAdd3",
      "txHash": "0x220f74108b53f81ed86fa6001295217c58746761160d5db39174c737595f13c9",
      "kind": "transparent"
    },
    {
      "address": "0x5067457698Fd6Fa1C6964e416b3f42713513B3dD",
      "txHash": "0x7c08613f70540e5ee955b2cfc203f89cb466a999daea00a78bca58fdc2c0d320",
      "kind": "transparent"
    },
    {
      "address": "0x4b6aB5F819A515382B0dEB6935D793817bB4af28",
      "txHash": "0x54541fb27a9ac224d53e33a59a166e84358ac01eb7a5100a2c85950e05944dbe",
      "kind": "transparent"
    },
    {
      "address": "0x4c5859f0F772848b2D91F1D83E2Fe57935348029",
      "txHash": "0x91f9826c6bca02283488396c6c97a92b2f7e92ab6427ab3db3df02a9e849d51c",
      "kind": "transparent"
    },
    {
      "address": "0x5f3f1dBD7B74C6B46e8c44f98792A1dAf8d69154",
      "txHash": "0xf2f001d7185e686e9d4c65bf1eb960fe397e57c56e26ff0b50880e957d73bbdf",
      "kind": "transparent"
    },
    {
      "address": "0xCD8a1C3ba11CF5ECfa6267617243239504a98d90",
      "txHash": "0xf7bdba303803b89517cdb24969cfbc914243559aba32ecab2f4bb20913e047b2",
      "kind": "transparent"
    },
    {
      "address": "0x1c85638e118b37167e9298c2268758e058DdfDA0",
      "txHash": "0xa9488b4073f0710bac0d697815a45f1dd983810c847adf575bb85cd2244bbbb1",
      "kind": "transparent"
    },
    {
      "address": "0xD5ac451B0c50B9476107823Af206eD814a2e2580",
      "txHash": "0xbb7230caf62bd9702d521b670fe8d5a666b750b2a02d13ca1bbb87623b0188eb",
      "kind": "transparent"
    },
    {
      "address": "0x34B40BA116d5Dec75548a9e9A8f15411461E8c70",
      "txHash": "0xf7317c44025de28f29a0263265f8191aee0b5dbd916a823ac99f569e4c7ed5e7",
      "kind": "transparent"
    },
    {
      "address": "0xD0141E899a65C95a556fE2B27e5982A6DE7fDD7A",
      "txHash": "0x66a997dccbb64bef3d9c71f9674565dcc1c378b21e65922273ac227ff62031a6",
      "kind": "transparent"
    },
    {
      "address": "0x84eA74d481Ee0A5332c457a4d796187F6Ba67fEB",
      "txHash": "0xee804a02e3fbc1d5bba0aeb125c4ca088e3dd0e88d4fe519826d4699f37a1c08",
      "kind": "transparent"
    },
    {
      "address": "0x1613beB3B2C4f22Ee086B2b38C1476A3cE7f78E8",
      "txHash": "0x2fe1bc004dc9136be37a8318e7d9104411f37caaf8a4ef3bc8aeff290d53ee6c",
      "kind": "transparent"
    },
    {
      "address": "0x998abeb3E57409262aE5b751f60747921B33613E",
      "txHash": "0x7060ed3e41ec725895704ed3c417dd08b8d7cc0e4445191e416ff2c6c6c1f78d",
      "kind": "transparent"
    },
    {
      "address": "0x0E801D84Fa97b50751Dbf25036d067dCf18858bF",
      "txHash": "0x389d6f0e0bad40ba0c3664be5b1043af3c3d389b021f69702422aa6de757a706",
      "kind": "transparent"
    },
    {
      "address": "0x1429859428C0aBc9C2C47C8Ee9FBaf82cFA0F20f",
      "txHash": "0xe01b555085afdd0b1a4ece8b360e2a9cccce6b4d93a327d81cac0374807dd376",
      "kind": "transparent"
    },
    {
      "address": "0x922D6956C99E12DFeB3224DEA977D0939758A1Fe",
      "txHash": "0xa8d965f12cc6885a6b8a28feb3403d629abc973933c9468a26c565c901fa1cc7",
      "kind": "transparent"
    },
    {
      "address": "0xD84379CEae14AA33C123Af12424A37803F885889",
      "txHash": "0xaf06cd2682bccb30dfa77ff6d0eeca9ae177e2df547580dde1097c6e9c3cc78c",
      "kind": "transparent"
    },
    {
      "address": "0xC9a43158891282A2B1475592D5719c001986Aaec",
      "txHash": "0x5a0f9b99e8584766603749a768eca2d86849c8f91fa3527b0378c25a0de56dac",
      "kind": "transparent"
    },
    {
      "address": "0xe8D2A1E88c91DCd5433208d4152Cc4F399a7e91d",
      "txHash": "0x0d85a95e2b0ed2d9f2e74a454e6d5052d7f58e28833b57bd1dc07dc4f75f7fbd",
      "kind": "transparent"
    },
    {
      "address": "0x18E317A7D70d8fBf8e6E893616b52390EbBdb629",
      "txHash": "0x5a08d01110e8fe15e46e2e1750f8297c4525eea876da69d203c494d6d6b1fad9",
      "kind": "transparent"
    },
    {
      "address": "0xCace1b78160AE76398F486c8a18044da0d66d86D",
      "txHash": "0x7633d0718a10c85dd990b3d3497c5f8d7590b35ae6a9955b02c5f1556621f922",
      "kind": "transparent"
    },
    {
      "address": "0xF8e31cb472bc70500f08Cd84917E5A1912Ec8397",
      "txHash": "0xdd905d49deb059552bd7a27eff47d623d54e48fde9c1cc04c91fd5589f69c76b",
      "kind": "transparent"
    },
    {
      "address": "0xc0F115A19107322cFBf1cDBC7ea011C19EbDB4F8",
      "txHash": "0x1a65f5d6ad08ece556ebd780359d4844288c4ae0a5e2c3fdae912cb21620cb48",
      "kind": "transparent"
    },
    {
      "address": "0xc96304e3c037f81dA488ed9dEa1D8F2a48278a75",
      "txHash": "0x1866b87b3599aeb410fb58e6dbae49ddf271006baf368020c54d3742bab18c41",
      "kind": "transparent"
    },
    {
      "address": "0x07882Ae1ecB7429a84f1D53048d35c4bB2056877",
      "txHash": "0x4839940c1cf92bad91e40d162cf97eeb9ac5d0ee823985e5f4ecfb8685714562",
      "kind": "transparent"
    },
    {
      "address": "0x22753E4264FDDc6181dc7cce468904A80a363E44",
      "txHash": "0x982ce995d603e3ce082ce2c9f256c491e640b3f3c0a1195e1511ce927ae34894",
      "kind": "transparent"
    },
    {
      "address": "0xc351628EB244ec633d5f21fBD6621e1a683B1181",
      "txHash": "0x52ed4fe11725b0818b0ba18bafad7e6322602ed8ba522038f28770cdc6f61e32",
      "kind": "transparent"
    },
    {
      "address": "0x1fA02b2d6A771842690194Cf62D91bdd92BfE28d",
      "txHash": "0x52eb7ee40644211367a48f224ea63d19af3b435400536e0917a8e612f0b7a89d",
      "kind": "transparent"
    },
    {
      "address": "0x21dF544947ba3E8b3c32561399E88B52Dc8b2823",
      "txHash": "0xe51a69c9086a0edd51b895aee3e1aa268614cf7bb29bc52e341d52ac561596dc",
      "kind": "transparent"
    },
    {
      "address": "0x51A1ceB83B83F1985a81C295d1fF28Afef186E02",
      "txHash": "0xf141b398dcaedae42c9c81f91807146d9d4614ee61abe70f64b1bf25752414d5",
      "kind": "transparent"
    },
    {
      "address": "0xfaAddC93baf78e89DCf37bA67943E1bE8F37Bb8c",
      "txHash": "0x7793364b7c0d4289ec3bb4cd49d60df79e00c6043ff4366d00c45db98dbc42a0",
      "kind": "transparent"
    },
    {
      "address": "0x5bf5b11053e734690269C6B9D438F8C9d48F528A",
      "txHash": "0x7971358c0841991fe4fb700fc2ce92b92f934797bc54d6a8c6c934ab145ccd9c",
      "kind": "transparent"
    },
    {
      "address": "0x8A93d247134d91e0de6f96547cB0204e5BE8e5D8",
      "txHash": "0x0b8994866cbc0e79381f78c5705aa454e7919a1c6e3ca493ed1316bb224bdabf",
      "kind": "transparent"
    },
    {
      "address": "0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6",
      "txHash": "0x8fc81c0e905b84f937f9352c60ffc0e1d19d85442f7c74415d8349ead7b0b655",
      "kind": "transparent"
    },
    {
      "address": "0xA7c59f010700930003b33aB25a7a0679C860f29c",
      "txHash": "0x99dc9b2927dd51e8d2024b3ea76aa62ceb731eae939ca59869be4aca28467cc1",
      "kind": "transparent"
    },
    {
      "address": "0xb9bEECD1A582768711dE1EE7B0A1d582D9d72a6C",
      "txHash": "0xa452f3a9b81a4204be8b8573a99212483b77e853284b1a7d772a849050c9c48b",
      "kind": "transparent"
    },
    {
      "address": "0x40918Ba7f132E0aCba2CE4de4c4baF9BD2D7D849",
      "txHash": "0xda2b6274db0f69b5dc80626772505eee0234fb224d8a7c27e918ed2b26445125",
      "kind": "transparent"
    },
    {
      "address": "0xefc1aB2475ACb7E60499Efb171D173be19928a05",
      "txHash": "0x4b4b99feb30c5f37c02282d6d3c4d415d1269df3b94283014333a18018058359",
      "kind": "transparent"
    },
    {
      "address": "0xD49a0e9A4CD5979aE36840f542D2d7f02C4817Be",
      "txHash": "0x9729b1da85a43ad099d90cc418adc929b7732714d0278a02c79172ef6bf4da1f",
      "kind": "transparent"
    },
    {
      "address": "0x26B862f640357268Bd2d9E95bc81553a2Aa81D7E",
      "txHash": "0x1804b9ff1b0286bf375f629ca57ee31ad3eae93892a10ef993149dfc5c4b1711",
      "kind": "transparent"
    },
    {
      "address": "0xA56F946D6398Dd7d9D4D9B337Cf9E0F68982ca5B",
      "txHash": "0x4e9a98e5b3820ff1eac87fd476e2c60bdbe7cf1ff12f6a8ad97fb4ec4fa5b87e",
      "kind": "transparent"
    },
    {
      "address": "0x5D42EBdBBa61412295D7b0302d6F50aC449Ddb4F",
      "txHash": "0xb8f14482ab1d637e18e35d41d3a05d4a53c918b7bbe4007227936f986ae32df4",
      "kind": "transparent"
    },
    {
      "address": "0x0165878A594ca255338adfa4d48449f69242Eb8F",
      "txHash": "0xfb831210d4b27845c791da5982e886e9f9130659ec2853b97ba28baad0078801",
      "kind": "transparent"
    },
    {
      "address": "0x610178dA211FEF7D417bC0e6FeD39F05609AD788",
      "txHash": "0xba2908c50d2753125b24c09fa1d14aca2d9aeaffe98af014bc9426d9ea757685",
      "kind": "transparent"
    },
    {
      "address": "0x67d269191c92Caf3cD7723F116c85e6E9bf55933",
      "txHash": "0x123b5f67d39b430f42c3ce91974e20f6140ffa4809055f8ca16638e65ea3fc32",
      "kind": "transparent"
    },
    {
      "address": "0xc3e53F4d16Ae77Db1c982e75a937B9f60FE63690",
      "txHash": "0xe30ac0ccaaa66280fa788a258f90f1d3639b4f57080673854b323ec8e95bf421",
      "kind": "transparent"
    },
    {
      "address": "0x9E545E3C0baAB3E08CdfD552C960A1050f373042",
      "txHash": "0xb13f66e79fca1c9d314126be4bd67744963dc7a4c1adbbee787982ae6d066520",
      "kind": "transparent"
    },
    {
      "address": "0xa82fF9aFd8f496c3d6ac40E2a0F282E47488CFc9",
      "txHash": "0x891fafb6917dbe6f7040158368f34cc7b866438b21f4ca1822aaafa003142a61",
      "kind": "transparent"
    },
    {
      "address": "0x927b167526bAbB9be047421db732C663a0b77B11",
      "txHash": "0xb6a55f9be394a68e79645b20986564dd8f1374debed094d753cbce8f7b451337",
      "kind": "transparent"
    },
    {
      "address": "0xe1Fd27F4390DcBE165f4D60DBF821e4B9Bb02dEd",
      "txHash": "0x049eb66eb12ab4221841ab7b41e1c40a17d6243e469424551f0b1967b1105852",
      "kind": "transparent"
    },
    {
      "address": "0xddE78e6202518FF4936b5302cC2891ec180E8bFf",
      "txHash": "0x96088eb2ff7bba6159e79b5ab0c21e5eb40bc36ac836a795635675aa4a77d2bf",
      "kind": "transparent"
    },
    {
      "address": "0x413b1AfCa96a3df5A686d8BFBF93d30688a7f7D9",
      "txHash": "0xe3293a62621a8ff580b3f712a7452193d59e1c92cd6b2cccb20720373fa0f76b",
      "kind": "transparent"
    },
    {
      "address": "0xb7278A61aa25c888815aFC32Ad3cC52fF24fE575",
      "txHash": "0xc62e965bb6c7eb0932bc6facb311ceb6151c6596acfc02d5c5add54312a7b8a6",
      "kind": "transparent"
    },
    {
      "address": "0x2bdCC0de6bE1f7D2ee689a0342D76F52E8EFABa3",
      "txHash": "0x7b0eca09bf77fb67101b7b6c2137505d3153bbf033a2da3d9f82dbefeda96c48",
      "kind": "transparent"
    },
    {
      "address": "0xcbEAF3BDe82155F56486Fb5a1072cb8baAf547cc",
      "txHash": "0xdb1274e3e2deea5f5947039c8a2eacdb71af3cb66e888e9c8d027c9786b1eb92",
      "kind": "transparent"
    },
    {
      "address": "0x162A433068F51e18b7d13932F27e66a3f99E6890",
      "txHash": "0x53872070877c1b96a0e904aa87a2e0e92dc179a27a0c096da09b2d90e0c2da67",
      "kind": "transparent"
    },
    {
      "address": "0xdbC43Ba45381e02825b14322cDdd15eC4B3164E6",
      "txHash": "0x6c83b0eca58facc16880bad8939189b40e0fefe85e70c95a81b17dcebcfdfb83",
      "kind": "transparent"
    },
    {
      "address": "0x2E2Ed0Cfd3AD2f1d34481277b3204d807Ca2F8c2",
      "txHash": "0x992040d40db99da2410b6db07e088f1b44f71e0aaf1b7512dc4ced71dc80ab73",
      "kind": "transparent"
    },
    {
      "address": "0x367761085BF3C12e5DA2Df99AC6E1a824612b8fb",
      "txHash": "0xcad6bd6c32e5fede337dc80c6e2794f0e6df924beb6f306738394047d0a7fb0a",
      "kind": "transparent"
    },
    {
      "address": "0x86A2EE8FAf9A840F7a2c64CA3d51209F9A02081D",
      "txHash": "0x29d898c82ffcf6f5f525425cc5ce4fd969592606d4d784e503e4aa10ba8a2bd1",
      "kind": "transparent"
    },
    {
      "address": "0x3347B4d90ebe72BeFb30444C9966B2B990aE9FcB",
      "txHash": "0x784f68a3eef80516357f41efc87d40739cacbaf5a035b648f8bae713545880b1",
      "kind": "transparent"
    },
    {
      "address": "0x3aAde2dCD2Df6a8cAc689EE797591b2913658659",
      "txHash": "0x91944bf0936e187e8a3442457fa8a0e7876463f2bf05f2bdcf74904fb0cd68a0",
      "kind": "transparent"
    },
    {
      "address": "0xF32D39ff9f6Aa7a7A64d7a4F00a54826Ef791a55",
      "txHash": "0x132857dc049a05eec16659ba89b64704753d28e56326144743418bb5f35b5c37",
      "kind": "transparent"
    },
    {
      "address": "0x99dBE4AEa58E518C50a1c04aE9b48C9F6354612f",
      "txHash": "0xa8d7656287211454e6a27bb44e10756c7055af52cc681d6d25b1433d57eedb8a",
      "kind": "transparent"
    },
    {
      "address": "0xCA8c8688914e0F7096c920146cd0Ad85cD7Ae8b9",
      "txHash": "0x717de3be974f129efe273dc07e22b4f554c5625df26cb06944c7623819787cde",
      "kind": "transparent"
    },
    {
      "address": "0x5FeaeBfB4439F3516c74939A9D04e95AFE82C4ae",
      "txHash": "0x068c6e36104a6a09d2a732dadf91678fdafc0b76889a2b25b386ae6769c9fbbd",
      "kind": "transparent"
    },
    {
      "address": "0x32EEce76C2C2e8758584A83Ee2F522D4788feA0f",
      "txHash": "0x42f8e7b554a171d6b487fd17aaf62dddbe04d3f3bfb585480a4676eb76820117",
      "kind": "transparent"
    },
    {
      "address": "0xc582Bc0317dbb0908203541971a358c44b1F3766",
      "txHash": "0x007b2447502b1dfda379e769d3af3ab5f7f4991d1c22724e6ec08474cf1f9905",
      "kind": "transparent"
    },
    {
      "address": "0xB377a2EeD7566Ac9fCb0BA673604F9BF875e2Bab",
      "txHash": "0x635f03292d8f3350cf029b2f0f5cfcd1dd3c27e445221b796ffa631d096b3ffe",
      "kind": "transparent"
    },
    {
      "address": "0xB06c856C8eaBd1d8321b687E188204C1018BC4E5",
      "txHash": "0x117592b6c451e893042b5ed6f18229b973a6084f6cc242f9d2efa91ca808a575",
      "kind": "transparent"
    },
    {
      "address": "0x02df3a3F960393F5B349E40A599FEda91a7cc1A7",
      "txHash": "0xc3e08a78b9a81595608813cb667ef1d3b370cddd11b6dad1b042fbf35165727d",
      "kind": "transparent"
    },
    {
      "address": "0x5133BBdfCCa3Eb4F739D599ee4eC45cBCD0E16c5",
      "txHash": "0x40ee402073716910707c5b0337450d82a244a2790e3b9276051779086a4e3eee",
      "kind": "transparent"
    },
    {
      "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      "txHash": "0xbabef1212ea63c79e515988bbb0498d32abc4f1d666e3218710f51513659045e",
      "kind": "transparent"
    },
    {
      "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
      "txHash": "0x0038e0b220a2c0c818dee827bc7647e2b5aa8a956799323b2d166e2b6f2b84d6",
      "kind": "transparent"
    },
    {
      "address": "0xA51c1fc2f0D1a1b8494Ed1FE312d7C3a78Ed91C0",
      "txHash": "0xe1b202aa77c45ab2476db3667d885bbb6c4b73b201baa20690aefa3de311f967",
      "kind": "transparent"
    },
    {
      "address": "0x0B306BF915C4d645ff596e518fAf3F9669b97016",
      "txHash": "0xcbc1f2026640e4528bd2b2c93ca31b301255210278081ac628595dbfcf7ae21e",
      "kind": "transparent"
    },
    {
      "address": "0xc6e7DF5E7b4f2A278906862b61205850344D4e7d",
      "txHash": "0x87b54456a453d41ccb14783cbda60a0045d069d87f47445545f40335e601ba07",
      "kind": "transparent"
    },
    {
      "address": "0x59b670e9fA9D0A427751Af201D676719a970857b",
      "txHash": "0x26dcae39f9dfb97923ea16861be048db18e7ea0a20607cb93e9da0e3405ff330",
      "kind": "transparent"
    },
    {
      "address": "0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f",
      "txHash": "0x12f7c941b22099b50ae9016cd64e81f1869b1d2143ec38a97b815b8a87041a48",
      "kind": "transparent"
    },
    {
      "address": "0x09635F643e140090A9A8Dcd712eD6285858ceBef",
      "txHash": "0xf942514dcf2c15ac26ae2aa5d459a8b6c9eddeadf7a55ccb3ef6940305a5ee86",
      "kind": "transparent"
    },
    {
      "address": "0x1291Be112d480055DaFd8a610b7d1e203891C274",
      "txHash": "0x1f438d6da890c2613b9a70db052c2062836c75e5059afd0283240f4d80c7eb6e",
      "kind": "transparent"
    },
    {
      "address": "0x82e01223d51Eb87e16A03E24687EDF0F294da6f1",
      "txHash": "0x8a7f3a8cc0cf3c337d25284ee8c686bd405c08358466b94169e66945f1e79509",
      "kind": "transparent"
    },
    {
      "address": "0x7bc06c482DEAd17c0e297aFbC32f6e63d3846650",
      "txHash": "0xa8d3d779fa4ae4857fe0b3d76a097437bf5a65e02efab95b343e3751c1668012",
      "kind": "transparent"
    },
    {
      "address": "0xB0D4afd8879eD9F52b28595d31B441D079B2Ca07",
      "txHash": "0xbb9032e6ca1e918491d04ec8c4afe0faf76a4341f8ae52e11998a516ad6f742f",
      "kind": "transparent"
    },
    {
      "address": "0x5081a39b8A5f0E35a8D959395a630b68B74Dd30f",
      "txHash": "0x53dd3f882231a12bf88069cd0128cab87781eca5f069c4cbc29e600eb04f54bc",
      "kind": "transparent"
    },
    {
      "address": "0x4C4a2f8c81640e47606d3fd77B353E87Ba015584",
      "txHash": "0x25a4cfaa3e2eac673e51371b260a5ae73b0bcdf90a6339ac6c26b68837d2cf0f",
      "kind": "transparent"
    },
    {
      "address": "0xDC11f7E700A4c898AE5CAddB1082cFfa76512aDD",
      "txHash": "0x21a90f70a84bdc0940e8369e04669d0d1cb40aa2376632168386164c89be7db6",
      "kind": "transparent"
    },
    {
      "address": "0x7A9Ec1d04904907De0ED7b6839CcdD59c3716AC9",
      "txHash": "0xdfd9cfa2cfa2bf5da5c3d8ce01d61daf71217357b15b88cc1d810f2d535e548b",
      "kind": "transparent"
    },
    {
      "address": "0x49fd2BE640DB2910c2fAb69bB8531Ab6E76127ff",
      "txHash": "0x8268f02123e089dbf92e8f407c2d41b14d55df1cf1667d97b47f1bece0c37cff",
      "kind": "transparent"
    },
    {
      "address": "0x4631BCAbD6dF18D94796344963cB60d44a4136b6",
      "txHash": "0x18c8dc72a6bb136c57dc2154d820cdadab6cbeb814f16341add532b8e1f968da",
      "kind": "transparent"
    },
    {
      "address": "0xA4899D35897033b927acFCf422bc745916139776",
      "txHash": "0x01f69f57d8cffa45a7b2614505183b4929fbc6b83ca841f0d6ca33e24e498b8d",
      "kind": "transparent"
    },
    {
      "address": "0xf953b3A269d80e3eB0F2947630Da976B896A8C5b",
      "txHash": "0xa77d6eea29e17268eafbbc4550ca091986203871ef9a5ec8658b6267c52cc043",
      "kind": "transparent"
    },
    {
      "address": "0x3155755b79aA083bd953911C92705B7aA82a18F9",
      "txHash": "0x604be1d052f753b9ebb7f4da4cbd3172b4e91486fb9797edf891b13497c4d158",
      "kind": "transparent"
    },
    {
      "address": "0xab16A69A5a8c12C732e0DEFF4BE56A70bb64c926",
      "txHash": "0x2ba69dd26adeae87271731e9ffabb10efcb5ae8cc3f278283336ba30b01a8b0c",
      "kind": "transparent"
    },
    {
      "address": "0xd6e1afe5cA8D00A2EFC01B89997abE2De47fdfAf",
      "txHash": "0x1ad95f6c0f563b4a042a4370876d8dee73a1f1acbe17cfdddd0398fd45ed0685",
      "kind": "transparent"
    },
    {
      "address": "0x6F6f570F45833E249e27022648a26F4076F48f78",
      "txHash": "0x76f840e0c9d82d9eb11b527dab3dafcb95d091ed3891e7d928ca9c08cb3d25e2",
      "kind": "transparent"
    },
    {
      "address": "0xB0f05d25e41FbC2b52013099ED9616f1206Ae21B",
      "txHash": "0xc2ecec6e522cd6146a9f2962ffd4c3bc31c8fcda0f020fac0d9453100bfd714d",
      "kind": "transparent"
    },
    {
      "address": "0x976fcd02f7C4773dd89C309fBF55D5923B4c98a1",
      "txHash": "0x3f9f0a06521804ec96f42df4a7dc77a04423c764acf40a32316e54bad312559a",
      "kind": "transparent"
    },
    {
      "address": "0x19cEcCd6942ad38562Ee10bAfd44776ceB67e923",
      "txHash": "0x85631ea585b91457b6853833c6a85d2e94b29c7678773af42e947a3c9b76e216",
      "kind": "transparent"
    },
    {
      "address": "0xD42912755319665397FF090fBB63B1a31aE87Cee",
      "txHash": "0x3f4b70fec5c34eafccb68c312814de5a26a05ad6cc6d71a36fa1d670a2cb2b20",
      "kind": "transparent"
    },
    {
      "address": "0xfcDB4564c18A9134002b9771816092C9693622e3",
      "txHash": "0x18a13f899406680375bdd832e370cedf8d9df7815bcd46cb83b3a6e0a84fae3f",
      "kind": "transparent"
    },
    {
      "address": "0x01c1DeF3b91672704716159C9041Aeca392DdFfb",
      "txHash": "0x1cbee29b2674307b153d35fc8dfa8efb438e96fc2228ffe57fb47900a53d9209",
      "kind": "transparent"
    },
    {
      "address": "0x02b0B4EFd909240FCB2Eb5FAe060dC60D112E3a4",
      "txHash": "0x6067a3be350b83145440f8658667408afc042ad54fc5d5176ae8bb885fd1841e",
      "kind": "transparent"
    },
    {
      "address": "0xB2b580ce436E6F77A5713D80887e14788Ef49c9A",
      "txHash": "0x64bd4e9ca10946c3e06ec4770781a96c60b168a68a621a3400bf1354fc20b2f6",
      "kind": "transparent"
    },
    {
      "address": "0x66F625B8c4c635af8b74ECe2d7eD0D58b4af3C3d",
      "txHash": "0x6387815ce85858a7677dea2eed3ef58ddff121505c6bbe6d0b9c8ea91b6c3ddd",
      "kind": "transparent"
    },
    {
      "address": "0xaB7B4c595d3cE8C85e16DA86630f2fc223B05057",
      "txHash": "0xe114d07e181b65b37f5feb7e169f817dbe24bf16ff2695846969266634f26803",
      "kind": "transparent"
    },
    {
      "address": "0xAD523115cd35a8d4E60B3C0953E0E0ac10418309",
      "txHash": "0x83c3105c463914e49d71121778c91ef57e0c04a1986507bb19e975d501094dea",
      "kind": "transparent"
    },
    {
      "address": "0x045857BDEAE7C1c7252d611eB24eB55564198b4C",
      "txHash": "0x5179edb79429eeff6f7107c9b80b035968677fcaa53a84084bcfd3aca63b7797",
      "kind": "transparent"
    },
    {
      "address": "0x2b5A4e5493d4a54E717057B127cf0C000C876f9B",
      "txHash": "0xf1b6a4a8fe309fcfa502376dcdaa24994d389ae67715d0162e5111a3790b173f",
      "kind": "transparent"
    },
    {
      "address": "0x821f3361D454cc98b7555221A06Be563a7E2E0A6",
      "txHash": "0x9b04f1c396d36079606302431eafdd99cef9dc1f6a85c2d055ffad32a0108978",
      "kind": "transparent"
    },
    {
      "address": "0x1780bCf4103D3F501463AD3414c7f4b654bb7aFd",
      "txHash": "0x4ffc39a5d901541a4abbdd74a5c34c6c39aef2de1f6e7aafde08da0c0552e727",
      "kind": "transparent"
    },
    {
      "address": "0x71089Ba41e478702e1904692385Be3972B2cBf9e",
      "txHash": "0x6943136ea507cb7806d070fe1dafde38bffcf4c47571ac0cf52626b7b080fb02",
      "kind": "transparent"
    }
  ],
  "impls": {
    "cd1d7bc768d78e8d26e3c77cf18b7e74438ba1c9660928baad6a7edf9b39393b": {
      "address": "0xf953b3A269d80e3eB0F2947630Da976B896A8C5b",
      "txHash": "0xe8baabf94d5176828118c44b364a3992b496e6cf96680e782c44620c57a17e6f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol:317"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "Vault",
            "label": "_IN_EXEC_LOCK",
            "type": "t_uint256",
            "src": "contracts\\Vault.sol:41"
          },
          {
            "contract": "Vault",
            "label": "POSITION_ID",
            "type": "t_uint256",
            "src": "contracts\\Vault.sol:42"
          },
          {
            "contract": "Vault",
            "label": "STRATEGY",
            "type": "t_address",
            "src": "contracts\\Vault.sol:43"
          },
          {
            "contract": "Vault",
            "label": "token",
            "type": "t_address",
            "src": "contracts\\Vault.sol:47"
          },
          {
            "contract": "Vault",
            "label": "config",
            "type": "t_contract(IVaultConfig)2865",
            "src": "contracts\\Vault.sol:54"
          },
          {
            "contract": "Vault",
            "label": "positions",
            "type": "t_mapping(t_uint256,t_struct(Position)1802_storage)",
            "src": "contracts\\Vault.sol:55"
          },
          {
            "contract": "Vault",
            "label": "nextPositionID",
            "type": "t_uint256",
            "src": "contracts\\Vault.sol:56"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IVaultConfig)2865": {
            "label": "contract IVaultConfig"
          },
          "t_mapping(t_uint256,t_struct(Position)1802_storage)": {
            "label": "mapping(uint256 => struct Vault.Position)"
          },
          "t_struct(Position)1802_storage": {
            "label": "struct Vault.Position",
            "members": [
              {
                "label": "worker",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c2e1abd0fa4464b1fec87968af558cedc21fcd578fa6421f6570bd82f788d2c7": {
      "address": "0x2bdCC0de6bE1f7D2ee689a0342D76F52E8EFABa3",
      "txHash": "0xf446932a71cddb675ae5c6bc18f7097e75f1a8dd3c2bc362546d2dcead12da7a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "masterChef",
            "type": "t_contract(IPancakeMasterChef)5601",
            "src": "contracts\\workers\\PancakeswapWorker.sol:58"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "router",
            "type": "t_contract(IPancakeRouterV2)5991",
            "src": "contracts\\workers\\PancakeswapWorker.sol:59"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "lpToken",
            "type": "t_contract(IPancakePair)1547",
            "src": "contracts\\workers\\PancakeswapWorker.sol:60"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "wNative",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:61"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "baseToken",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:62"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "token0",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:63"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "token1",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:64"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "cake",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:65"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "operatingVault",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:66"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "pid",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:67"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "shares",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\workers\\PancakeswapWorker.sol:70"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "approvedStrategies",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\workers\\PancakeswapWorker.sol:71"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "totalShare",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:72"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "reinvestStrategy",
            "type": "t_contract(IStrategy)2774",
            "src": "contracts\\workers\\PancakeswapWorker.sol:73"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "liqStrat",
            "type": "t_contract(IStrategy)2774",
            "src": "contracts\\workers\\PancakeswapWorker.sol:74"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "reinvestBountyBps",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:75"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "maxReinvestBountyBps",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:76"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "okReinvestors",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\workers\\PancakeswapWorker.sol:77"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:80"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "feeDenom",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:81"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "reinvestThreshold",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:84"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "reinvestPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\workers\\PancakeswapWorker.sol:85"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "treasuryAccount",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:86"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "treasuryBountyBps",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:87"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "beneficialVault",
            "type": "t_contract(IVault)2796",
            "src": "contracts\\workers\\PancakeswapWorker.sol:88"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "beneficialVaultBountyBps",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:89"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "rewardPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\workers\\PancakeswapWorker.sol:90"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "buybackAmount",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:91"
          }
        ],
        "types": {
          "t_contract(IPancakeMasterChef)5601": {
            "label": "contract IPancakeMasterChef"
          },
          "t_contract(IPancakeRouterV2)5991": {
            "label": "contract IPancakeRouterV2"
          },
          "t_contract(IPancakePair)1547": {
            "label": "contract IPancakePair"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IStrategy)2774": {
            "label": "contract IStrategy"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IVault)2796": {
            "label": "contract IVault"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "60e27a4401e1b344a5bb163e76963770f0724c5456e667099c7820d45303028c": {
      "address": "0x9E545E3C0baAB3E08CdfD552C960A1050f373042",
      "txHash": "0x4d9278dfae709088c6d64d78c35e6cac84db6b6a307ce4e6feb66f085e67211e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "masterChef",
            "type": "t_contract(IPancakeMasterChef)5944",
            "src": "contracts\\workers\\PancakeswapWorker.sol:53"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "router",
            "type": "t_contract(IPancakeRouterV2)6334",
            "src": "contracts\\workers\\PancakeswapWorker.sol:54"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "lpToken",
            "type": "t_contract(IPancakePair)1547",
            "src": "contracts\\workers\\PancakeswapWorker.sol:55"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "wNative",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:56"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "baseToken",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:57"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "token0",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:58"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "token1",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:59"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "cake",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:60"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "operatingVault",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:61"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "pid",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:62"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "shares",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\workers\\PancakeswapWorker.sol:65"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "approvedStrategies",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\workers\\PancakeswapWorker.sol:66"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "totalShare",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:67"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "reinvestStrategy",
            "type": "t_contract(IStrategy)3113",
            "src": "contracts\\workers\\PancakeswapWorker.sol:68"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "liqStrat",
            "type": "t_contract(IStrategy)3113",
            "src": "contracts\\workers\\PancakeswapWorker.sol:69"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "treasuryFeeBps",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:70"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "maxFeeBps",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:71"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "okReinvestors",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\workers\\PancakeswapWorker.sol:72"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:75"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "feeDenom",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:76"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "reinvestThreshold",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:79"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "reinvestPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\workers\\PancakeswapWorker.sol:80"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "bountyCollector",
            "type": "t_contract(IBountyCollector)3089",
            "src": "contracts\\workers\\PancakeswapWorker.sol:81"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "rewardPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\workers\\PancakeswapWorker.sol:82"
          }
        ],
        "types": {
          "t_contract(IPancakeMasterChef)5944": {
            "label": "contract IPancakeMasterChef"
          },
          "t_contract(IPancakeRouterV2)6334": {
            "label": "contract IPancakeRouterV2"
          },
          "t_contract(IPancakePair)1547": {
            "label": "contract IPancakePair"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IStrategy)3113": {
            "label": "contract IStrategy"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IBountyCollector)3089": {
            "label": "contract IBountyCollector"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7aad4d5ae6f6fe3cf062ffe7f97914d3d4ed12a4f23b54011f68749f01370106": {
      "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      "txHash": "0xd7e391f694079af4818f83fcdab1275940d1045b22095ed4570ee31db72716a8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol:317"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "1216d8e1275135c77bfa781977ac0b2de3e3d99855cfba9eb913033694324a08": {
      "address": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
      "txHash": "0x32b540f70f4b94761b43fb9905e8c576adaf29032794fea64895b363a25e6f9e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "BountyCollector",
            "label": "bounties",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\BountyCollector.sol:24"
          },
          {
            "contract": "BountyCollector",
            "label": "okCollectors",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\BountyCollector.sol:27"
          },
          {
            "contract": "BountyCollector",
            "label": "okVaults",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\BountyCollector.sol:29"
          },
          {
            "contract": "BountyCollector",
            "label": "_bountyToken",
            "type": "t_address",
            "src": "contracts\\BountyCollector.sol:32"
          },
          {
            "contract": "BountyCollector",
            "label": "_bountyThreshold",
            "type": "t_uint256",
            "src": "contracts\\BountyCollector.sol:33"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8850564c4b06e66b9452ccfb870fb205be10a175484d4d5c2a4d479cf4c8311f": {
      "address": "0x3Aa5ebB10DC797CAC828524e59A333d0A371443c",
      "txHash": "0xccabfb4a0de0c0898f316f3531985c5ceb47cec90fb3c6bf7515b839c9510379",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "PancakeswapStrategyAddToPoolWithBaseToken",
            "label": "factory",
            "type": "t_contract(IPancakeFactory)1305",
            "src": "contracts\\strategies\\pancake\\PancakeswapStrategyAddToPoolWithBaseToken.sol:29"
          },
          {
            "contract": "PancakeswapStrategyAddToPoolWithBaseToken",
            "label": "router",
            "type": "t_contract(IPancakeRouterV2)7001",
            "src": "contracts\\strategies\\pancake\\PancakeswapStrategyAddToPoolWithBaseToken.sol:30"
          }
        ],
        "types": {
          "t_contract(IPancakeFactory)1305": {
            "label": "contract IPancakeFactory"
          },
          "t_contract(IPancakeRouterV2)7001": {
            "label": "contract IPancakeRouterV2"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "02b0a00d04adaecbd40aee8d62aea10bb6493bed6e304e46da8006c75a60d85b": {
      "address": "0x1429859428C0aBc9C2C47C8Ee9FBaf82cFA0F20f",
      "txHash": "0xc74f2d8a3da509ac1d554e2278e97623fa60cac3a777d319ad5a8fa57d3eed62",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "PancakeswapStrategyLiquidate",
            "label": "factory",
            "type": "t_contract(IPancakeFactory)1305",
            "src": "contracts\\strategies\\pancake\\PancakeswapStrategyLiquidate.sol:24"
          },
          {
            "contract": "PancakeswapStrategyLiquidate",
            "label": "router",
            "type": "t_contract(IPancakeRouterV2)7001",
            "src": "contracts\\strategies\\pancake\\PancakeswapStrategyLiquidate.sol:25"
          }
        ],
        "types": {
          "t_contract(IPancakeFactory)1305": {
            "label": "contract IPancakeFactory"
          },
          "t_contract(IPancakeRouterV2)7001": {
            "label": "contract IPancakeRouterV2"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "782b917b2dd3551bdf34011d6d5bb414777bfcd4891add8aacd396a7660137c2": {
      "address": "0x99dBE4AEa58E518C50a1c04aE9b48C9F6354612f",
      "txHash": "0x30a23747ff5f458fbf76985ecb847cf26cd8044d1f5462c128da4a2de98937c2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "WNativeRelayer",
            "label": "wnative",
            "type": "t_address",
            "src": "contracts\\WNativeRelayer.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "602c068344c0ec1280189180de9b3f25e04ebe549a7809140039b890a56a548e": {
      "address": "0xCA8c8688914e0F7096c920146cd0Ad85cD7Ae8b9",
      "txHash": "0xf7dbe43554cd2ff5f5e49f27f2325b0be9f14fad624144210929ad4e5256307c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "VaultConfig",
            "label": "workers",
            "type": "t_mapping(t_address,t_contract(IWorkerConfig)3992)",
            "src": "contracts\\VaultConfig.sol:28"
          },
          {
            "contract": "VaultConfig",
            "label": "nativeTokenAddr",
            "type": "t_address",
            "src": "contracts\\VaultConfig.sol:30"
          },
          {
            "contract": "VaultConfig",
            "label": "wNativeRelayer",
            "type": "t_address",
            "src": "contracts\\VaultConfig.sol:32"
          },
          {
            "contract": "VaultConfig",
            "label": "whitelistedCallers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\VaultConfig.sol:34"
          },
          {
            "contract": "VaultConfig",
            "label": "treasury",
            "type": "t_address",
            "src": "contracts\\VaultConfig.sol:36"
          },
          {
            "contract": "VaultConfig",
            "label": "approvedAddStrategies",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\VaultConfig.sol:38"
          },
          {
            "contract": "VaultConfig",
            "label": "whitelistedLiquidators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\VaultConfig.sol:40"
          }
        ],
        "types": {
          "t_mapping(t_address,t_contract(IWorkerConfig)3992)": {
            "label": "mapping(address => contract IWorkerConfig)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IWorkerConfig)3992": {
            "label": "contract IWorkerConfig"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "61f4ab80500c8e3a26839b2b859938135922b8af62fe935c7eb0cc5ce58504bb": {
      "address": "0x5FeaeBfB4439F3516c74939A9D04e95AFE82C4ae",
      "txHash": "0x6df6d685e51b36f133f1f56ed8f56ab76957ed0d5c49c0665dee2bf489ed308c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol:317"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "Vault",
            "label": "_IN_EXEC_LOCK",
            "type": "t_uint256",
            "src": "contracts\\Vault.sol:43"
          },
          {
            "contract": "Vault",
            "label": "POSITION_ID",
            "type": "t_uint256",
            "src": "contracts\\Vault.sol:44"
          },
          {
            "contract": "Vault",
            "label": "STRATEGY",
            "type": "t_address",
            "src": "contracts\\Vault.sol:45"
          },
          {
            "contract": "Vault",
            "label": "token",
            "type": "t_address",
            "src": "contracts\\Vault.sol:49"
          },
          {
            "contract": "Vault",
            "label": "config",
            "type": "t_contract(IVaultConfig)3828",
            "src": "contracts\\Vault.sol:57"
          },
          {
            "contract": "Vault",
            "label": "positions",
            "type": "t_mapping(t_uint256,t_struct(Position)2142_storage)",
            "src": "contracts\\Vault.sol:58"
          },
          {
            "contract": "Vault",
            "label": "nextPositionID",
            "type": "t_uint256",
            "src": "contracts\\Vault.sol:59"
          },
          {
            "contract": "Vault",
            "label": "bountyCollector",
            "type": "t_contract(IBountyCollector)3697",
            "src": "contracts\\Vault.sol:62"
          },
          {
            "contract": "Vault",
            "label": "rewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Vault.sol:65"
          },
          {
            "contract": "Vault",
            "label": "okRewardAssigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Vault.sol:66"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IVaultConfig)3828": {
            "label": "contract IVaultConfig"
          },
          "t_mapping(t_uint256,t_struct(Position)2142_storage)": {
            "label": "mapping(uint256 => struct Vault.Position)"
          },
          "t_struct(Position)2142_storage": {
            "label": "struct Vault.Position",
            "members": [
              {
                "label": "worker",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "client",
                "type": "t_address"
              }
            ]
          },
          "t_contract(IBountyCollector)3697": {
            "label": "contract IBountyCollector"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "327785a6e11ab491463abce1851509d36d0b83481eb159d370a09f6f1883da96": {
      "address": "0x5133BBdfCCa3Eb4F739D599ee4eC45cBCD0E16c5",
      "txHash": "0x4e3577ef2bb17598a48178a3ee4c23870e78460872725df2104ac7c507b77ee3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "WorkerRouter",
            "label": "protocolWorkers",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "src": "contracts\\WorkerRouter.sol:18"
          },
          {
            "contract": "WorkerRouter",
            "label": "whitelistedOperators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\WorkerRouter.sol:20"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4ab758421539c6a76835ff5c82faa1d8c96d90a7a95a99beda39d00b012d697b": {
      "address": "0x4631BCAbD6dF18D94796344963cB60d44a4136b6",
      "txHash": "0x66ebe9e0a76f34fbc3b0a506a3b04ccf95869972c942e766e65ddfdeaecf853c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "factory",
            "type": "t_contract(IPancakeFactory)1305",
            "src": "contracts\\workers\\PancakeswapWorker.sol:46"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "masterChef",
            "type": "t_contract(IPancakeMasterChef)6611",
            "src": "contracts\\workers\\PancakeswapWorker.sol:47"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "router",
            "type": "t_contract(IPancakeRouterV2)7001",
            "src": "contracts\\workers\\PancakeswapWorker.sol:48"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "lpToken",
            "type": "t_contract(IPancakePair)1547",
            "src": "contracts\\workers\\PancakeswapWorker.sol:49"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "wNative",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:50"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "baseToken",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:51"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "token0",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:52"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "token1",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:53"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "cake",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:54"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "operatingVault",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:55"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "pid",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:56"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "strategies",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\workers\\PancakeswapWorker.sol:59"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "approvedStrategies",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\workers\\PancakeswapWorker.sol:60"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "shares",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\workers\\PancakeswapWorker.sol:63"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "positionIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\workers\\PancakeswapWorker.sol:64"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "totalShare",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:65"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "treasuryFeeBps",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:66"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "clientFeesBps",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\workers\\PancakeswapWorker.sol:67"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "maxFeeBps",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:68"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "okHarvesters",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\workers\\PancakeswapWorker.sol:69"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:72"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "feeDenom",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:73"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "harvestThreshold",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:76"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "harvestPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\workers\\PancakeswapWorker.sol:77"
          }
        ],
        "types": {
          "t_contract(IPancakeFactory)1305": {
            "label": "contract IPancakeFactory"
          },
          "t_contract(IPancakeMasterChef)6611": {
            "label": "contract IPancakeMasterChef"
          },
          "t_contract(IPancakeRouterV2)7001": {
            "label": "contract IPancakeRouterV2"
          },
          "t_contract(IPancakePair)1547": {
            "label": "contract IPancakePair"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a452abb83b565eedb406e0b4628a50ca58702959cd72999f0b786454ab507010": {
      "address": "0x4c5859f0F772848b2D91F1D83E2Fe57935348029",
      "txHash": "0xb5b771930c589b1b9b971fb5dac56b82b7d11652eccfb2f2b749abe4ccf53e71",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "PancakeswapStrategyAddToPoolWithoutBaseToken",
            "label": "factory",
            "type": "t_contract(IPancakeFactory)1305",
            "src": "contracts\\strategies\\pancake\\PancakeswapStrategyAddToPoolWithoutBaseToken.sol:26"
          },
          {
            "contract": "PancakeswapStrategyAddToPoolWithoutBaseToken",
            "label": "router",
            "type": "t_contract(IPancakeRouterV2)7001",
            "src": "contracts\\strategies\\pancake\\PancakeswapStrategyAddToPoolWithoutBaseToken.sol:27"
          }
        ],
        "types": {
          "t_contract(IPancakeFactory)1305": {
            "label": "contract IPancakeFactory"
          },
          "t_contract(IPancakeRouterV2)7001": {
            "label": "contract IPancakeRouterV2"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4c6e8e41e405baa6d4c3de166aa389f1423290661fc17d79fce0e1d8daa8ee89": {
      "address": "0x86A2EE8FAf9A840F7a2c64CA3d51209F9A02081D",
      "txHash": "0x421e8a49db12c6b84c15e744be5202194fee514ac8e418a08b4ad6a488ea8b47",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "factory",
            "type": "t_contract(IPancakeFactory)1305",
            "src": "contracts\\workers\\PancakeswapWorker.sol:46"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "masterChef",
            "type": "t_contract(IPancakeMasterChef)6611",
            "src": "contracts\\workers\\PancakeswapWorker.sol:47"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "router",
            "type": "t_contract(IPancakeRouterV2)7001",
            "src": "contracts\\workers\\PancakeswapWorker.sol:48"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "lpToken",
            "type": "t_contract(IPancakePair)1547",
            "src": "contracts\\workers\\PancakeswapWorker.sol:49"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "wNative",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:50"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "baseToken",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:51"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "token0",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:52"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "token1",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:53"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "cake",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:54"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "operatingVault",
            "type": "t_address",
            "src": "contracts\\workers\\PancakeswapWorker.sol:55"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "pid",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:56"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "strategies",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\workers\\PancakeswapWorker.sol:59"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "approvedStrategies",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\workers\\PancakeswapWorker.sol:60"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "shares",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\workers\\PancakeswapWorker.sol:63"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "positionIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\workers\\PancakeswapWorker.sol:64"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "totalShare",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:65"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "treasuryFeeBps",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:66"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "clientFeesBps",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\workers\\PancakeswapWorker.sol:67"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "maxFeeBps",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:68"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "okHarvesters",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\workers\\PancakeswapWorker.sol:69"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:72"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "feeDenom",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:73"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "harvestThreshold",
            "type": "t_uint256",
            "src": "contracts\\workers\\PancakeswapWorker.sol:76"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "harvestPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\workers\\PancakeswapWorker.sol:77"
          }
        ],
        "types": {
          "t_contract(IPancakeFactory)1305": {
            "label": "contract IPancakeFactory"
          },
          "t_contract(IPancakeMasterChef)6611": {
            "label": "contract IPancakeMasterChef"
          },
          "t_contract(IPancakeRouterV2)7001": {
            "label": "contract IPancakeRouterV2"
          },
          "t_contract(IPancakePair)1547": {
            "label": "contract IPancakePair"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}

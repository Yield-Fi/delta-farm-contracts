{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x84a4e5606E54ccf25c9832Ae7Eb0d36F03cA6368",
    "txHash": "0x30364e997f46f7af0da3303dd80028342662f2ec34c48295db24405eb7f4b513"
  },
  "proxies": [
    {
      "address": "0xc97b8f863536B7987991d437C08B70D274A5a805",
      "txHash": "0x06c09030ff25fd9e94d3065f6598a726fbd9d00469f51a052208bdcec2cb66d5",
      "kind": "transparent"
    },
    {
      "address": "0x6abb72aD7A85973118B98447df1b327030f20b2a",
      "txHash": "0x1a23f57cb8ded004b83f64d0e80d5e498668178653d67f9a187f83830a0042bf",
      "kind": "transparent"
    },
    {
      "address": "0x4EE64d49A6411a5c6d1d8E9f315e23e6B511CD00",
      "txHash": "0x726d583bc3ee735b99c5d8ff44225ffea11a19c813d31c609d2ea6b1c138603a",
      "kind": "transparent"
    },
    {
      "address": "0x75D1Ad798c29f07630cb4Fea0acF14E41c4fD4f8",
      "txHash": "0x5fbf60b8b02e301a29903bc16f655b006c21c5c106f62fa420f4d2cbe44896cc",
      "kind": "transparent"
    },
    {
      "address": "0xDEBb841b035b2736C16659D6c157d43D17BC7Ca8",
      "txHash": "0xd0bb57bdab66af4e6e4d6ab95facb746d3c92c178207f295107b09971eb40c64",
      "kind": "transparent"
    },
    {
      "address": "0xE45fa1f395427B4De97D8d4Ce396D23d5EB611ac",
      "txHash": "0xd8f84be660d79f89e96eb92b7f7d1c8af431c1796324dd0eb9c6677c313aac1a",
      "kind": "transparent"
    },
    {
      "address": "0x5fcA15f7186D0bAB72574D4e5BBE6F4cf6DCDe95",
      "txHash": "0xa38e439008bf80fb0acb249e24cb2769f835b2dd30399d5c2b09f508f1eff343",
      "kind": "transparent"
    },
    {
      "address": "0x91a03C4592Ca1e0611bF0d04e3Fb6Ce99573546A",
      "txHash": "0x1557224d1967a91b8e12ef36cedb138d41317c314b2fd7ab64b57b82223af914",
      "kind": "transparent"
    },
    {
      "address": "0x14e5A786904796B1999f3df7eb2c37E26fD4420a",
      "txHash": "0xc18ce96c7dc5520ee3f8856082d9ac124672543d880b825d85daee1b03daa9a0",
      "kind": "transparent"
    },
    {
      "address": "0xBE8dc5171689bE13aB9AC05cbA77aE7e0Be96d1c",
      "txHash": "0xc75baeaa1fafd3b062a3216320fcd8afb48b2ef771987154ca818fcf7d67d087",
      "kind": "transparent"
    },
    {
      "address": "0xc5ABD411d063B4F14380ea32a740615d9CA74B6B",
      "txHash": "0x4a6f10fb6705265fe434517c707879b3eeadf6edd292839905295fcd4233fed6",
      "kind": "transparent"
    },
    {
      "address": "0x838630108CCCC79186CD57FF5aFC6F902d32d21A",
      "txHash": "0x0c39912f7a4dd691b8e2ace9838d7f61c06ec1533c4d1f8bc1c21c86e738c7a1",
      "kind": "transparent"
    },
    {
      "address": "0x4A81Fe4bAA5a8839cB6da02e98Ec32Be6D4D8A1e",
      "txHash": "0x30ef42c2e2c10d903b4454c4f8e5968e49c96bdd9a65a6a616c31809bb57bd5c",
      "kind": "transparent"
    },
    {
      "address": "0xd47C209B010054883A2d1B9e124b76e233E35E32",
      "txHash": "0x821dc996633d326775149350248237257e280868c9fd62e7d07007cde1579abc",
      "kind": "transparent"
    },
    {
      "address": "0x18EC0bF18d727aF80DdD51944255f2f12ECb9744",
      "txHash": "0x80e1a5e3109ee7c2620aac012072721bae135e3ec9fe4518889f352c7bce5ad7",
      "kind": "transparent"
    },
    {
      "address": "0x90f9f27E67CD94e08fEEd763753562B2D521A089",
      "txHash": "0x6838419925abd0c08bf71b731ea7a743ff428e51abe4671ee75477be644498b7",
      "kind": "transparent"
    },
    {
      "address": "0xA646e46dC2eeB0248e61E14C57ee32E112dd7c72",
      "txHash": "0x90a827524e4c2f85b3ef6c0ef463d47a3d6449aaf8c611c16b1c4677ad764946",
      "kind": "transparent"
    },
    {
      "address": "0xBEF1cC5318a8504Ce7CD382E8010E38FA1861738",
      "txHash": "0xe9c353a0400d4adb754848da7c84acfc0f4dfc169117868750176d17bafd81b8",
      "kind": "transparent"
    },
    {
      "address": "0x184f5c9eC49E3e53743CfA47F9d884767a8FdF69",
      "txHash": "0x122e2d3a15fa824f3712f04ec62b78c18179eb6733513f283313c6f824d68bff",
      "kind": "transparent"
    },
    {
      "address": "0x67fAE3cB68947e02B2A0Fd06DE45aF34B468c86f",
      "txHash": "0xd31358663ec9153a52ce3e4462a58aca2c4fce25cbdca88360608bc95d57f242",
      "kind": "transparent"
    },
    {
      "address": "0xD7d1543524C1442abc92B970A49755a06563b91C",
      "txHash": "0xacf17f120e4c1abbc1183021735e601a39cc9ab642e6076622daf8f2542c40a8",
      "kind": "transparent"
    },
    {
      "address": "0xE8c30d69b888CC759b1441AFBeCE2b1F15dF9371",
      "txHash": "0x3bfebda7d8350d3058f415f4722e4da4554389f59364925d155eaaaa2bda0d94",
      "kind": "transparent"
    },
    {
      "address": "0x95e64dD7494f797C63C03ed0e74D778ae279a31B",
      "txHash": "0x898af91ef0c24b477f3975894862ececd0b732738e2acc0eb5e076a5b3bc034c",
      "kind": "transparent"
    },
    {
      "address": "0xD8b9FFE8fFBd871A90757D0C6E4564eBEB3a02fB",
      "txHash": "0xc99502988fb6646f9427fa48329f15da442d12bad4b78667662d468af9757cc1",
      "kind": "transparent"
    },
    {
      "address": "0x8CA6FbB30E1BD8BB772B32FD5835dD3717b2C92A",
      "txHash": "0xdc3078374f3cf336020da9a6cad9dce251834e3bd40ec5d81ad68b9c85c48771",
      "kind": "transparent"
    },
    {
      "address": "0xf096fF1cEbeA3645B7E9bd37De1Cd801273Fb02F",
      "txHash": "0xba03a4c99c47b9f97b985bdc088457308063b7bff4462d09b5426d774f065b8c",
      "kind": "transparent"
    },
    {
      "address": "0xD91158870f8dBD33eeEd81090bBB97EC720C3182",
      "txHash": "0x2726cc22d39763f789c9ba3bd61d6dabdf2b105d4ea75b2302c002b6d5d7583e",
      "kind": "transparent"
    },
    {
      "address": "0x55B195582894EcE9441E1385E7d9eCDf62Ee1871",
      "txHash": "0x8baad5741a8e71f9c3adf5282fc92cba8c6e9fcdb7a7167f6cd663f26ebb4d27",
      "kind": "transparent"
    },
    {
      "address": "0x050fD8721d9FB5fa4f939D9Fe4166d55995B5da1",
      "txHash": "0xb3ccf0683c2ea9f90229ebc9e17ea7432d71d63748d8e3d55baf393bbcc06e6c",
      "kind": "transparent"
    },
    {
      "address": "0x3F41081E53141349a5473e3A5C3B5Ed5aAEc7186",
      "txHash": "0xd1b867ac415bf9c8acc112e2a752decedfd4a56480546833ea9c979a80db7c99",
      "kind": "transparent"
    },
    {
      "address": "0x49b85B92F7F7C750feF1075f43b0986809890C75",
      "txHash": "0xbdf40ff2a593464c51aa1b130d5f7f094770b50b0534afa355129076e1dff8c1",
      "kind": "transparent"
    },
    {
      "address": "0x2e5Fa53DA9De6feC9a68dfc2272dac45bc56a241",
      "txHash": "0xd80a8c55e2f00fcf6ac882ca62ba3032aa2deb2bff749b1ce8166c3946a8870a",
      "kind": "transparent"
    },
    {
      "address": "0xe20fc0cdc22254f6abce7c6DeC964527CAFd5378",
      "txHash": "0x426565c4c89eb0f1ac5ff8510ab4f2fd2820035f18ae18d5ffd1ea2da6336a6d",
      "kind": "transparent"
    },
    {
      "address": "0x2EA8b891EFF54E8A284fDe70030Db2A1E079F19F",
      "txHash": "0xf6f41a87be72a650b70f77397926483c04905a171b1c11808c74e662cdacae4d",
      "kind": "transparent"
    },
    {
      "address": "0x0218923A7925749F9f8861CDb1381d6130bB33c4",
      "txHash": "0x79e24029155e6abcb178ac224d6e849cbb9dfcab55d386c743b4200244ee5775",
      "kind": "transparent"
    },
    {
      "address": "0x43f984c2202a2BFfCEa3619C84D6b8F39BDa22DB",
      "txHash": "0x0c2737f57eaf37d1c2ea3d24698e9d246930e9c35e979d814ab8c4c4451b9e2e",
      "kind": "transparent"
    }
  ],
  "impls": {
    "c4bd003586cc6c262181dccf414f979e233ca5ca42d20c43448bacccc8e6bf88": {
      "address": "0x9fAF9476447D5EE3082B6C3B6Ec0d6389fCcA459",
      "txHash": "0xb42931a23946cb13b4fe1094541c40018830645b595f06998a0884577b44e0b6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedClients",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/ProtocolManager.sol:83"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedVaults",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/ProtocolManager.sol:87"
          },
          {
            "contract": "ProtocolManager",
            "label": "tokenToVault",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/ProtocolManager.sol:90"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedVaultConfigs",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/ProtocolManager.sol:94"
          },
          {
            "contract": "ProtocolManager",
            "label": "checkIfApprovedBountyCollectors",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/ProtocolManager.sol:98"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedBountyCollectors",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/ProtocolManager.sol:102"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedStrategiesCheck",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/ProtocolManager.sol:105"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedStrategies",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/ProtocolManager.sol:109"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedNativeRelayer",
            "type": "t_address",
            "src": "contracts/ProtocolManager.sol:112"
          },
          {
            "contract": "ProtocolManager",
            "label": "whitelistOperatorsList",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/ProtocolManager.sol:115"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedWorkers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/ProtocolManager.sol:118"
          },
          {
            "contract": "ProtocolManager",
            "label": "whitelistedOperators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/ProtocolManager.sol:122"
          },
          {
            "contract": "ProtocolManager",
            "label": "adminContract",
            "type": "t_address",
            "src": "contracts/ProtocolManager.sol:125"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedHarvesters",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/ProtocolManager.sol:127"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "fb90595e8593fbf330d7412547c4455842b4068cc1e2bcec8e656d2ee5fcc8e8": {
      "address": "0x891601810052151c4A643bA1c60E59dcf7B84CA5",
      "txHash": "0x1c010c91714846bd10d43b7995e6cbed7b624ca03b8dde886dd65d4ac5bd699d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "Admin",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)6683",
            "src": "contracts/Admin.sol:36"
          },
          {
            "contract": "Admin",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)6508",
            "src": "contracts/Admin.sol:37"
          }
        ],
        "types": {
          "t_contract(IProtocolManager)6683": {
            "label": "contract IProtocolManager"
          },
          "t_contract(IFeeCollector)6508": {
            "label": "contract IFeeCollector"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "337f1a83576a5a86b9c7a5214bd4bbae823461c5a4f0fdf147783550c8d2c7ae": {
      "address": "0x9F57A2d58f6797E7436E736cC58121e9429A2EcA",
      "txHash": "0x592d1f591b98d1996bec249fe8b68c6c9f6f4301faf6cdc45e7f9080fc5d7a30",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "FeeCollector",
            "label": "fees",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/FeeCollector.sol:37"
          },
          {
            "contract": "FeeCollector",
            "label": "_feeToken",
            "type": "t_address",
            "src": "contracts/FeeCollector.sol:40"
          },
          {
            "contract": "FeeCollector",
            "label": "_feeThreshold",
            "type": "t_uint256",
            "src": "contracts/FeeCollector.sol:41"
          },
          {
            "contract": "FeeCollector",
            "label": "protocolManager",
            "type": "t_contract(ProtocolManager)4851",
            "src": "contracts/FeeCollector.sol:42"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(ProtocolManager)4851": {
            "label": "contract ProtocolManager"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "170978604f49decbab927011c0f4c1ac8ec139d74ee1b8bf19a5216f5779bf35": {
      "address": "0x1159e9C1c1c954F3a02f3F2742593e60dd13a6B1",
      "txHash": "0x6d56943022e368389329dc026882bd07abe5ed394535a868d08d156c56c7110c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "WrappedNativeTokenRelayer",
            "label": "wnative",
            "type": "t_address",
            "src": "contracts/WrappedNativeTokenRelayer.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "93ef62d3346ceaef1282ee1c87a392d00d1acb1dc60dad950fec369a92acffab": {
      "address": "0x4Ebc55C7D2fB708a7d47e7B8aF7482FE76b91E3b",
      "txHash": "0xa8c72a23629b88a5ff1fb772c18a0048d16163ad13adc514618d22dd2fb758ec",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "VaultConfig",
            "label": "wrappedNativeToken",
            "type": "t_address",
            "src": "contracts/VaultConfig.sol:26"
          },
          {
            "contract": "VaultConfig",
            "label": "wrappedNativeTokenRelayer",
            "type": "t_address",
            "src": "contracts/VaultConfig.sol:28"
          },
          {
            "contract": "VaultConfig",
            "label": "treasuryAccount",
            "type": "t_address",
            "src": "contracts/VaultConfig.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "0cf90797e0e297df455f615111dda39c0a520057d98a3038d5e75c9d98c9b5a1": {
      "address": "0x4dFB5d95a810d89FB5660ba00DA6D15F0915878E",
      "txHash": "0x8bde3565604d669bc1d1bb1c5bb35570f07ef5203dca6568a80696f9d05fe3b9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "Vault",
            "label": "_IN_EXEC_LOCK",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:67"
          },
          {
            "contract": "Vault",
            "label": "POSITION_ID",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:68"
          },
          {
            "contract": "Vault",
            "label": "STRATEGY",
            "type": "t_address",
            "src": "contracts/Vault.sol:69"
          },
          {
            "contract": "Vault",
            "label": "token",
            "type": "t_address",
            "src": "contracts/Vault.sol:73"
          },
          {
            "contract": "Vault",
            "label": "config",
            "type": "t_contract(IVaultConfig)6875",
            "src": "contracts/Vault.sol:81"
          },
          {
            "contract": "Vault",
            "label": "positions",
            "type": "t_mapping(t_uint256,t_struct(Position)4961_storage)",
            "src": "contracts/Vault.sol:82"
          },
          {
            "contract": "Vault",
            "label": "nextPositionID",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:83"
          },
          {
            "contract": "Vault",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)6508",
            "src": "contracts/Vault.sol:86"
          },
          {
            "contract": "Vault",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)6683",
            "src": "contracts/Vault.sol:88"
          },
          {
            "contract": "Vault",
            "label": "rewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/Vault.sol:91"
          },
          {
            "contract": "Vault",
            "label": "approvedRewardAssigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/Vault.sol:92"
          },
          {
            "contract": "Vault",
            "label": "totalRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/Vault.sol:94"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IVaultConfig)6875": {
            "label": "contract IVaultConfig"
          },
          "t_mapping(t_uint256,t_struct(Position)4961_storage)": {
            "label": "mapping(uint256 => struct Vault.Position)"
          },
          "t_struct(Position)4961_storage": {
            "label": "struct Vault.Position",
            "members": [
              {
                "label": "worker",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "client",
                "type": "t_address"
              }
            ]
          },
          "t_contract(IFeeCollector)6508": {
            "label": "contract IFeeCollector"
          },
          "t_contract(IProtocolManager)6683": {
            "label": "contract IProtocolManager"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "18d1cbfe3f5588aa4d3a49ef83eca22d6abddebfcf93070c43361e2fb877123f": {
      "address": "0x1F6b77b9F539bcA58882eFD58d4Ccc956289bE1C",
      "txHash": "0x269292dfeb6db3340373bf097006af0602370af6ad3f747bcfdf572c8b928a62",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "PancakeswapStrategyAddToPoolWithBaseToken",
            "label": "factory",
            "type": "t_contract(IPancakeFactory)1305",
            "src": "contracts/strategies/pancake/PancakeswapStrategyAddToPoolWithBaseToken.sol:28"
          },
          {
            "contract": "PancakeswapStrategyAddToPoolWithBaseToken",
            "label": "router",
            "type": "t_contract(IPancakeRouterV2)12057",
            "src": "contracts/strategies/pancake/PancakeswapStrategyAddToPoolWithBaseToken.sol:29"
          }
        ],
        "types": {
          "t_contract(IPancakeFactory)1305": {
            "label": "contract IPancakeFactory"
          },
          "t_contract(IPancakeRouterV2)12057": {
            "label": "contract IPancakeRouterV2"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "33bb3c06392dee52cafe42531c940426f443b00b371a719ce5c6fbb961efc6d6": {
      "address": "0xa9A3F65b159B6a3D134e0bc9831ef919A6F3c884",
      "txHash": "0x7e9ae873d377802b390bb18c11643e8d3353aa2139be2254babeaadd71b5c144",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "PancakeswapStrategyAddToPoolWithoutBaseToken",
            "label": "factory",
            "type": "t_contract(IPancakeFactory)1305",
            "src": "contracts/strategies/pancake/PancakeswapStrategyAddToPoolWithoutBaseToken.sol:27"
          },
          {
            "contract": "PancakeswapStrategyAddToPoolWithoutBaseToken",
            "label": "router",
            "type": "t_contract(IPancakeRouterV2)12057",
            "src": "contracts/strategies/pancake/PancakeswapStrategyAddToPoolWithoutBaseToken.sol:28"
          }
        ],
        "types": {
          "t_contract(IPancakeFactory)1305": {
            "label": "contract IPancakeFactory"
          },
          "t_contract(IPancakeRouterV2)12057": {
            "label": "contract IPancakeRouterV2"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "277af929f21b0c7ed10b502a55a276bd4011e1635a6bd77cc2fdd9fc340760e6": {
      "address": "0x589a6B0fCdB6FC0f554C948F784424Ed27a93EfA",
      "txHash": "0x6f3c412aab64e53b8b07625593c3e8fcf8e2d8b1f295cba3d289502e399b813b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "PancakeswapStrategyLiquidate",
            "label": "factory",
            "type": "t_contract(IPancakeFactory)1305",
            "src": "contracts/strategies/pancake/PancakeswapStrategyLiquidate.sol:27"
          },
          {
            "contract": "PancakeswapStrategyLiquidate",
            "label": "router",
            "type": "t_contract(IPancakeRouterV2)12057",
            "src": "contracts/strategies/pancake/PancakeswapStrategyLiquidate.sol:28"
          }
        ],
        "types": {
          "t_contract(IPancakeFactory)1305": {
            "label": "contract IPancakeFactory"
          },
          "t_contract(IPancakeRouterV2)12057": {
            "label": "contract IPancakeRouterV2"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b642c4fd6ce78191a7a9539cc627d78f53884cea3ce5e759dc36e02ef636a55d": {
      "address": "0xf281481977129002Aa0348F64fa649077cF5D983",
      "txHash": "0xed7192530960871041d8f7c154f60cfa05cc87f59170b6380e56295d21960b8b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "factory",
            "type": "t_contract(IPancakeFactory)1305",
            "src": "contracts/workers/PancakeswapWorker.sol:89"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "masterChef",
            "type": "t_contract(IPancakeMasterChef)11458",
            "src": "contracts/workers/PancakeswapWorker.sol:90"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "router",
            "type": "t_contract(IPancakeRouterV2)12090",
            "src": "contracts/workers/PancakeswapWorker.sol:91"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "lpToken",
            "type": "t_contract(IPancakePair)1547",
            "src": "contracts/workers/PancakeswapWorker.sol:92"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "wNative",
            "type": "t_address",
            "src": "contracts/workers/PancakeswapWorker.sol:93"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "name",
            "type": "t_string_storage",
            "src": "contracts/workers/PancakeswapWorker.sol:94"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "baseToken",
            "type": "t_address",
            "src": "contracts/workers/PancakeswapWorker.sol:95"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "token0",
            "type": "t_address",
            "src": "contracts/workers/PancakeswapWorker.sol:96"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "token1",
            "type": "t_address",
            "src": "contracts/workers/PancakeswapWorker.sol:97"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "cake",
            "type": "t_address",
            "src": "contracts/workers/PancakeswapWorker.sol:98"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "operatingVault",
            "type": "t_address",
            "src": "contracts/workers/PancakeswapWorker.sol:99"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "pid",
            "type": "t_uint256",
            "src": "contracts/workers/PancakeswapWorker.sol:100"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)6716",
            "src": "contracts/workers/PancakeswapWorker.sol:101"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/workers/PancakeswapWorker.sol:103"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "feeDenom",
            "type": "t_uint256",
            "src": "contracts/workers/PancakeswapWorker.sol:104"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "harvestThreshold",
            "type": "t_uint256",
            "src": "contracts/workers/PancakeswapWorker.sol:107"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "harvestPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/workers/PancakeswapWorker.sol:108"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "strategies",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/workers/PancakeswapWorker.sol:111"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "approvedStrategies",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/workers/PancakeswapWorker.sol:112"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "shares",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/workers/PancakeswapWorker.sol:115"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "totalShare",
            "type": "t_uint256",
            "src": "contracts/workers/PancakeswapWorker.sol:116"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "positionIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/workers/PancakeswapWorker.sol:117"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "treasuryFeeBps",
            "type": "t_uint256",
            "src": "contracts/workers/PancakeswapWorker.sol:118"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "isEnabled",
            "type": "t_bool",
            "src": "contracts/workers/PancakeswapWorker.sol:119"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "clientFeesBps",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/workers/PancakeswapWorker.sol:120"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "okHarvesters",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/workers/PancakeswapWorker.sol:121"
          }
        ],
        "types": {
          "t_contract(IPancakeFactory)1305": {
            "label": "contract IPancakeFactory"
          },
          "t_contract(IPancakeMasterChef)11458": {
            "label": "contract IPancakeMasterChef"
          },
          "t_contract(IPancakeRouterV2)12090": {
            "label": "contract IPancakeRouterV2"
          },
          "t_contract(IPancakePair)1547": {
            "label": "contract IPancakePair"
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IProtocolManager)6716": {
            "label": "contract IProtocolManager"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "54a50f35b40e38b7b7e607154d368f11709988cd8b52db9f375c00e1ecf5edb3": {
      "address": "0xF5B6526E55C3244234c061b7cb8b491235d39Ff4",
      "txHash": "0xadc20e8fb3000931cd4ad6e352f6eefcbc9e2f02b3dd34a2c31a15ce118aba9e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "Client",
            "label": "confirmations",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/Client.sol:31"
          },
          {
            "contract": "Client",
            "label": "additionalWithdrawers",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/Client.sol:34"
          },
          {
            "contract": "Client",
            "label": "withdrawTargets",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/Client.sol:35"
          },
          {
            "contract": "Client",
            "label": "required",
            "type": "t_uint256",
            "src": "contracts/Client.sol:36"
          },
          {
            "contract": "Client",
            "label": "enabledFarms",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/Client.sol:102"
          },
          {
            "contract": "Client",
            "label": "_KIND_",
            "type": "t_string_storage",
            "src": "contracts/Client.sol:105"
          },
          {
            "contract": "Client",
            "label": "_CLIENT_NAME_",
            "type": "t_string_storage",
            "src": "contracts/Client.sol:106"
          },
          {
            "contract": "Client",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)6717",
            "src": "contracts/Client.sol:109"
          },
          {
            "contract": "Client",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)6542",
            "src": "contracts/Client.sol:111"
          },
          {
            "contract": "Client",
            "label": "whitelistedUsers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/Client.sol:114"
          },
          {
            "contract": "Client",
            "label": "whitelistedOperators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/Client.sol:115"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IProtocolManager)6717": {
            "label": "contract IProtocolManager"
          },
          "t_contract(IFeeCollector)6542": {
            "label": "contract IFeeCollector"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6afd8084a496e05434be47d9eb21008c6280e460ded935d77a77d890a3a78caf": {
      "address": "0x5129adEDE9b52bE01D82E362398306b14eBdb072",
      "txHash": "0xa710f429be0a2128e708f5c8ba581593e6e8eabd451de5f4870cc87b2b29e19d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "Admin",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)6683",
            "src": "contracts/Admin.sol:36"
          },
          {
            "contract": "Admin",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)6508",
            "src": "contracts/Admin.sol:37"
          }
        ],
        "types": {
          "t_contract(IProtocolManager)6683": {
            "label": "contract IProtocolManager"
          },
          "t_contract(IFeeCollector)6508": {
            "label": "contract IFeeCollector"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9b092cee901a5937b146866deefd14c3842f398a583d4021941cf35d8e392e49": {
      "address": "0x0fD0f78c24918EE964FbF88600C5798ac4653542",
      "txHash": "0xd4c18e0dc487060e4b34bdcb9e8af65c98a4988b318bdda128fe1e9b225725cc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedClients",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/ProtocolManager.sol:83"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedVaults",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/ProtocolManager.sol:87"
          },
          {
            "contract": "ProtocolManager",
            "label": "tokenToVault",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/ProtocolManager.sol:90"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedVaultConfigs",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/ProtocolManager.sol:94"
          },
          {
            "contract": "ProtocolManager",
            "label": "checkIfApprovedBountyCollectors",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/ProtocolManager.sol:98"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedBountyCollectors",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/ProtocolManager.sol:102"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedStrategiesCheck",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/ProtocolManager.sol:105"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedStrategies",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/ProtocolManager.sol:109"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedNativeRelayer",
            "type": "t_address",
            "src": "contracts/ProtocolManager.sol:112"
          },
          {
            "contract": "ProtocolManager",
            "label": "whitelistOperatorsList",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/ProtocolManager.sol:115"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedWorkers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/ProtocolManager.sol:118"
          },
          {
            "contract": "ProtocolManager",
            "label": "whitelistedOperators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/ProtocolManager.sol:122"
          },
          {
            "contract": "ProtocolManager",
            "label": "adminContract",
            "type": "t_address",
            "src": "contracts/ProtocolManager.sol:125"
          },
          {
            "contract": "ProtocolManager",
            "label": "approvedHarvesters",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/ProtocolManager.sol:127"
          },
          {
            "contract": "ProtocolManager",
            "label": "stables",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/ProtocolManager.sol:129"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "87d729c3f81bf7dc51c0ef74cf373e47bd591f3fe767a58ba6573f218e611d92": {
      "address": "0x4c1e19A5a401105066a284d9B4e992f463024216",
      "txHash": "0x8b8d1fed15edbfd9587669fb1bd20c508182b7da4ddeec3d4cae4013883b48bb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "PancakeswapStrategyAddToPoolWithBaseToken",
            "label": "factory",
            "type": "t_contract(IPancakeFactory)1305",
            "src": "contracts/strategies/pancake/PancakeswapStrategyAddToPoolWithBaseToken.sol:29"
          },
          {
            "contract": "PancakeswapStrategyAddToPoolWithBaseToken",
            "label": "router",
            "type": "t_contract(IPancakeRouterV2)12096",
            "src": "contracts/strategies/pancake/PancakeswapStrategyAddToPoolWithBaseToken.sol:30"
          },
          {
            "contract": "PancakeswapStrategyAddToPoolWithBaseToken",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)6722",
            "src": "contracts/strategies/pancake/PancakeswapStrategyAddToPoolWithBaseToken.sol:31"
          }
        ],
        "types": {
          "t_contract(IPancakeFactory)1305": {
            "label": "contract IPancakeFactory"
          },
          "t_contract(IPancakeRouterV2)12096": {
            "label": "contract IPancakeRouterV2"
          },
          "t_contract(IProtocolManager)6722": {
            "label": "contract IProtocolManager"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6b8f79977e56c77f04cbe7caa7f0751f66ce29821a00118f85240695b57fd9ee": {
      "address": "0x97015AEd16F15C139C1482bF2F5Fc77B6d314Cdd",
      "txHash": "0xdf0c76eb52e3c3f01d8026c58423d09c215556adbb0d494305de9b7ca7bf8360",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "PancakeswapStrategyAddToPoolWithoutBaseToken",
            "label": "factory",
            "type": "t_contract(IPancakeFactory)1305",
            "src": "contracts/strategies/pancake/PancakeswapStrategyAddToPoolWithoutBaseToken.sol:28"
          },
          {
            "contract": "PancakeswapStrategyAddToPoolWithoutBaseToken",
            "label": "router",
            "type": "t_contract(IPancakeRouterV2)12096",
            "src": "contracts/strategies/pancake/PancakeswapStrategyAddToPoolWithoutBaseToken.sol:29"
          },
          {
            "contract": "PancakeswapStrategyAddToPoolWithoutBaseToken",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)6722",
            "src": "contracts/strategies/pancake/PancakeswapStrategyAddToPoolWithoutBaseToken.sol:30"
          }
        ],
        "types": {
          "t_contract(IPancakeFactory)1305": {
            "label": "contract IPancakeFactory"
          },
          "t_contract(IPancakeRouterV2)12096": {
            "label": "contract IPancakeRouterV2"
          },
          "t_contract(IProtocolManager)6722": {
            "label": "contract IProtocolManager"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2acb4ad4a9e6efff1205d8092fce03d1e5db578a78ab61a9f030093746a26b8d": {
      "address": "0x8c214c36574974e1044Eca6B4706C717A6e73119",
      "txHash": "0x67492f56cc9e96843b06e5ec53a39720ad2b3b582bedc0b884cefce5d1a48514",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "PancakeswapStrategyLiquidate",
            "label": "factory",
            "type": "t_contract(IPancakeFactory)1305",
            "src": "contracts/strategies/pancake/PancakeswapStrategyLiquidate.sol:30"
          },
          {
            "contract": "PancakeswapStrategyLiquidate",
            "label": "router",
            "type": "t_contract(IPancakeRouterV2)12096",
            "src": "contracts/strategies/pancake/PancakeswapStrategyLiquidate.sol:31"
          },
          {
            "contract": "PancakeswapStrategyLiquidate",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)6722",
            "src": "contracts/strategies/pancake/PancakeswapStrategyLiquidate.sol:32"
          }
        ],
        "types": {
          "t_contract(IPancakeFactory)1305": {
            "label": "contract IPancakeFactory"
          },
          "t_contract(IPancakeRouterV2)12096": {
            "label": "contract IPancakeRouterV2"
          },
          "t_contract(IProtocolManager)6722": {
            "label": "contract IProtocolManager"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e5e3da829cc44822e2bb441985202feeb7c6664ff65d3aaaf08b25924001fa33": {
      "address": "0xa8bC108584f187B876498EEF5cfC29006e21B730",
      "txHash": "0x49eb8ddf721336f75f0b9d9a99b9ba29f99fef8513a729b4b0ef3d78d73207dd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "Client",
            "label": "confirmations",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/Client.sol:31"
          },
          {
            "contract": "Client",
            "label": "additionalWithdrawers",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/Client.sol:34"
          },
          {
            "contract": "Client",
            "label": "withdrawTargets",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/Client.sol:35"
          },
          {
            "contract": "Client",
            "label": "required",
            "type": "t_uint256",
            "src": "contracts/Client.sol:36"
          },
          {
            "contract": "Client",
            "label": "enabledFarms",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/Client.sol:102"
          },
          {
            "contract": "Client",
            "label": "_KIND_",
            "type": "t_string_storage",
            "src": "contracts/Client.sol:105"
          },
          {
            "contract": "Client",
            "label": "_CLIENT_NAME_",
            "type": "t_string_storage",
            "src": "contracts/Client.sol:106"
          },
          {
            "contract": "Client",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)6722",
            "src": "contracts/Client.sol:109"
          },
          {
            "contract": "Client",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)6535",
            "src": "contracts/Client.sol:111"
          },
          {
            "contract": "Client",
            "label": "whitelistedUsers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/Client.sol:114"
          },
          {
            "contract": "Client",
            "label": "whitelistedOperators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/Client.sol:115"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IProtocolManager)6722": {
            "label": "contract IProtocolManager"
          },
          "t_contract(IFeeCollector)6535": {
            "label": "contract IFeeCollector"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3dc1c1824a0d4427a845ff7839edf0993f8c3216d2f069352616b86333380416": {
      "address": "0xb99aE1f8a3728781c646aDE6f71682aaEAaE0A70",
      "txHash": "0xd7d342bd175c9ac094d38837a4e0d91cafe43ea17c4762527971b0759bd4f0e9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "Client",
            "label": "confirmations",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/Client.sol:31"
          },
          {
            "contract": "Client",
            "label": "additionalWithdrawers",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/Client.sol:34"
          },
          {
            "contract": "Client",
            "label": "withdrawTargets",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/Client.sol:35"
          },
          {
            "contract": "Client",
            "label": "required",
            "type": "t_uint256",
            "src": "contracts/Client.sol:36"
          },
          {
            "contract": "Client",
            "label": "enabledFarms",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/Client.sol:102"
          },
          {
            "contract": "Client",
            "label": "_KIND_",
            "type": "t_string_storage",
            "src": "contracts/Client.sol:105"
          },
          {
            "contract": "Client",
            "label": "_CLIENT_NAME_",
            "type": "t_string_storage",
            "src": "contracts/Client.sol:106"
          },
          {
            "contract": "Client",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)6716",
            "src": "contracts/Client.sol:109"
          },
          {
            "contract": "Client",
            "label": "feeCollector",
            "type": "t_contract(IFeeCollector)6529",
            "src": "contracts/Client.sol:111"
          },
          {
            "contract": "Client",
            "label": "whitelistedUsers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/Client.sol:114"
          },
          {
            "contract": "Client",
            "label": "whitelistedOperators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/Client.sol:115"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IProtocolManager)6716": {
            "label": "contract IProtocolManager"
          },
          "t_contract(IFeeCollector)6529": {
            "label": "contract IFeeCollector"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "fcf9f73f65b13f23620938fd7a015e4cee301884dbad865690675141c7c16ee7": {
      "address": "0xdF125bE59E227Ff1b3Ddc8CbC3263D8C61F38Fc1",
      "txHash": "0x2746020fb2155213c62fd76546f90e5906aaa62711cb6e1ef6d85e2458e1dea7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "factory",
            "type": "t_contract(IPancakeFactory)1305",
            "src": "contracts/workers/PancakeswapWorker.sol:89"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "masterChef",
            "type": "t_contract(IPancakeMasterChef)11458",
            "src": "contracts/workers/PancakeswapWorker.sol:90"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "router",
            "type": "t_contract(IPancakeRouterV2)12090",
            "src": "contracts/workers/PancakeswapWorker.sol:91"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "lpToken",
            "type": "t_contract(IPancakePair)1547",
            "src": "contracts/workers/PancakeswapWorker.sol:92"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "wNative",
            "type": "t_address",
            "src": "contracts/workers/PancakeswapWorker.sol:93"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "name",
            "type": "t_string_storage",
            "src": "contracts/workers/PancakeswapWorker.sol:94"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "baseToken",
            "type": "t_address",
            "src": "contracts/workers/PancakeswapWorker.sol:95"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "token0",
            "type": "t_address",
            "src": "contracts/workers/PancakeswapWorker.sol:96"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "token1",
            "type": "t_address",
            "src": "contracts/workers/PancakeswapWorker.sol:97"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "cake",
            "type": "t_address",
            "src": "contracts/workers/PancakeswapWorker.sol:98"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "operatingVault",
            "type": "t_address",
            "src": "contracts/workers/PancakeswapWorker.sol:99"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "pid",
            "type": "t_uint256",
            "src": "contracts/workers/PancakeswapWorker.sol:100"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "protocolManager",
            "type": "t_contract(IProtocolManager)6716",
            "src": "contracts/workers/PancakeswapWorker.sol:101"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/workers/PancakeswapWorker.sol:103"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "feeDenom",
            "type": "t_uint256",
            "src": "contracts/workers/PancakeswapWorker.sol:104"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "harvestThreshold",
            "type": "t_uint256",
            "src": "contracts/workers/PancakeswapWorker.sol:107"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "harvestPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/workers/PancakeswapWorker.sol:108"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "strategies",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/workers/PancakeswapWorker.sol:111"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "approvedStrategies",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/workers/PancakeswapWorker.sol:112"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "shares",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/workers/PancakeswapWorker.sol:115"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "totalShare",
            "type": "t_uint256",
            "src": "contracts/workers/PancakeswapWorker.sol:116"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "positionIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/workers/PancakeswapWorker.sol:117"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "treasuryFeeBps",
            "type": "t_uint256",
            "src": "contracts/workers/PancakeswapWorker.sol:118"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "isEnabled",
            "type": "t_bool",
            "src": "contracts/workers/PancakeswapWorker.sol:119"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "clientFeesBps",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/workers/PancakeswapWorker.sol:120"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "okHarvesters",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/workers/PancakeswapWorker.sol:121"
          }
        ],
        "types": {
          "t_contract(IPancakeFactory)1305": {
            "label": "contract IPancakeFactory"
          },
          "t_contract(IPancakeMasterChef)11458": {
            "label": "contract IPancakeMasterChef"
          },
          "t_contract(IPancakeRouterV2)12090": {
            "label": "contract IPancakeRouterV2"
          },
          "t_contract(IPancakePair)1547": {
            "label": "contract IPancakePair"
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IProtocolManager)6716": {
            "label": "contract IProtocolManager"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7782693c9cd427013833f2a204a3c6bd08d06bac07f462b83b6a32c871ca25df": {
      "address": "0x00cFe699d8CDCb4A991167CC59cD547c4D54d4a4",
      "txHash": "0x6821a3270fc1714fc9be18d3d6aaf8283eb2ff349fbefa8a0d30c4145df40b38",
      "layout": {
        "storage": [
          {
            "label": "initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "label": "initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeSafe",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeSafe",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeSafe",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "label": "_notEntered",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IPancakeFactory)2710",
            "contract": "PancakeswapStrategyAddToPoolWithBaseToken",
            "src": "contracts\\strategies\\pancake\\PancakeswapStrategyAddToPoolWithBaseToken.sol:29"
          },
          {
            "label": "router",
            "offset": 0,
            "slot": "202",
            "type": "t_contract(IPancakeRouterV2)15542",
            "contract": "PancakeswapStrategyAddToPoolWithBaseToken",
            "src": "contracts\\strategies\\pancake\\PancakeswapStrategyAddToPoolWithBaseToken.sol:30"
          },
          {
            "label": "protocolManager",
            "offset": 0,
            "slot": "203",
            "type": "t_contract(IProtocolManager)8124",
            "contract": "PancakeswapStrategyAddToPoolWithBaseToken",
            "src": "contracts\\strategies\\pancake\\PancakeswapStrategyAddToPoolWithBaseToken.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IPancakeFactory)2710": {
            "label": "contract IPancakeFactory",
            "numberOfBytes": "20"
          },
          "t_contract(IPancakeRouterV2)15542": {
            "label": "contract IPancakeRouterV2",
            "numberOfBytes": "20"
          },
          "t_contract(IProtocolManager)8124": {
            "label": "contract IProtocolManager",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "fae0b29d225a1830715352a0ca0af0892b37e19a1d185896388e2096c6b633bd": {
      "address": "0xD2354bA5E7548b7BA324C2C51E9131B1a4Fcb074",
      "txHash": "0xa6263528dbb179f02128bcf6b233a2ebb445084d6b94a79017654088ec904b1f",
      "layout": {
        "storage": [
          {
            "label": "initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "label": "initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeSafe",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeSafe",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeSafe",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "label": "_notEntered",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IPancakeFactory)2710",
            "contract": "PancakeswapStrategyAddToPoolWithoutBaseToken",
            "src": "contracts\\strategies\\pancake\\PancakeswapStrategyAddToPoolWithoutBaseToken.sol:28"
          },
          {
            "label": "router",
            "offset": 0,
            "slot": "202",
            "type": "t_contract(IPancakeRouterV2)15542",
            "contract": "PancakeswapStrategyAddToPoolWithoutBaseToken",
            "src": "contracts\\strategies\\pancake\\PancakeswapStrategyAddToPoolWithoutBaseToken.sol:29"
          },
          {
            "label": "protocolManager",
            "offset": 0,
            "slot": "203",
            "type": "t_contract(IProtocolManager)8124",
            "contract": "PancakeswapStrategyAddToPoolWithoutBaseToken",
            "src": "contracts\\strategies\\pancake\\PancakeswapStrategyAddToPoolWithoutBaseToken.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IPancakeFactory)2710": {
            "label": "contract IPancakeFactory",
            "numberOfBytes": "20"
          },
          "t_contract(IPancakeRouterV2)15542": {
            "label": "contract IPancakeRouterV2",
            "numberOfBytes": "20"
          },
          "t_contract(IProtocolManager)8124": {
            "label": "contract IProtocolManager",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "17c6eb186cfc642fd210a5228f11e371748700c4be2e0a8cd027d28825932216": {
      "address": "0x593C4D69E33CcfB392e209dfe8E4016833DfcaC8",
      "txHash": "0xc81a5cb53568c38d44a7c70cbec755a66e2dfc40274e914e38d996fb89211e1f",
      "layout": {
        "storage": [
          {
            "label": "initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "label": "initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeSafe",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeSafe",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeSafe",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "label": "_notEntered",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IPancakeFactory)556",
            "contract": "PancakeswapStrategyLiquidate",
            "src": "contracts\\strategies\\pancake\\PancakeswapStrategyLiquidate.sol:30"
          },
          {
            "label": "router",
            "offset": 0,
            "slot": "202",
            "type": "t_contract(IPancakeRouterV2)1847",
            "contract": "PancakeswapStrategyLiquidate",
            "src": "contracts\\strategies\\pancake\\PancakeswapStrategyLiquidate.sol:31"
          },
          {
            "label": "protocolManager",
            "offset": 0,
            "slot": "203",
            "type": "t_contract(IProtocolManager)970",
            "contract": "PancakeswapStrategyLiquidate",
            "src": "contracts\\strategies\\pancake\\PancakeswapStrategyLiquidate.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IPancakeFactory)556": {
            "label": "contract IPancakeFactory",
            "numberOfBytes": "20"
          },
          "t_contract(IPancakeRouterV2)1847": {
            "label": "contract IPancakeRouterV2",
            "numberOfBytes": "20"
          },
          "t_contract(IProtocolManager)970": {
            "label": "contract IProtocolManager",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "bc8cf1376b39176f1619ba7619e07290eab5c331a7d3762bae6f3fee02c66bef": {
      "address": "0xb3e7F32282257A1Fdc6Ce0CC733be01E69e4bb18",
      "txHash": "0xc5f5a77abaaa217ebcd0a2205ce27c0753f52466c6c7f8a961923eff72d3159c",
      "layout": {
        "storage": [
          {
            "label": "initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:21"
          },
          {
            "label": "initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:26"
          },
          {
            "label": "______gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\Initializable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeSafe",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\GSN\\Context.sol:37"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeSafe",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeSafe",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\Ownable.sol:78"
          },
          {
            "label": "_notEntered",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeSafe",
            "src": "@openzeppelin\\contracts-ethereum-package\\contracts\\utils\\ReentrancyGuard.sol:63"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IPancakeFactory)2710",
            "contract": "PancakeswapWorkerV2",
            "src": "contracts\\workers\\PancakeswapWorkerV2.sol:89"
          },
          {
            "label": "masterChef",
            "offset": 0,
            "slot": "202",
            "type": "t_contract(IMasterChef)14765",
            "contract": "PancakeswapWorkerV2",
            "src": "contracts\\workers\\PancakeswapWorkerV2.sol:90"
          },
          {
            "label": "router",
            "offset": 0,
            "slot": "203",
            "type": "t_contract(IPancakeRouterV2)15542",
            "contract": "PancakeswapWorkerV2",
            "src": "contracts\\workers\\PancakeswapWorkerV2.sol:91"
          },
          {
            "label": "lpToken",
            "offset": 0,
            "slot": "204",
            "type": "t_contract(IPancakePair)2952",
            "contract": "PancakeswapWorkerV2",
            "src": "contracts\\workers\\PancakeswapWorkerV2.sol:92"
          },
          {
            "label": "wNative",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "PancakeswapWorkerV2",
            "src": "contracts\\workers\\PancakeswapWorkerV2.sol:93"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "206",
            "type": "t_string_storage",
            "contract": "PancakeswapWorkerV2",
            "src": "contracts\\workers\\PancakeswapWorkerV2.sol:94"
          },
          {
            "label": "baseToken",
            "offset": 0,
            "slot": "207",
            "type": "t_address",
            "contract": "PancakeswapWorkerV2",
            "src": "contracts\\workers\\PancakeswapWorkerV2.sol:95"
          },
          {
            "label": "token0",
            "offset": 0,
            "slot": "208",
            "type": "t_address",
            "contract": "PancakeswapWorkerV2",
            "src": "contracts\\workers\\PancakeswapWorkerV2.sol:96"
          },
          {
            "label": "token1",
            "offset": 0,
            "slot": "209",
            "type": "t_address",
            "contract": "PancakeswapWorkerV2",
            "src": "contracts\\workers\\PancakeswapWorkerV2.sol:97"
          },
          {
            "label": "cake",
            "offset": 0,
            "slot": "210",
            "type": "t_address",
            "contract": "PancakeswapWorkerV2",
            "src": "contracts\\workers\\PancakeswapWorkerV2.sol:98"
          },
          {
            "label": "operatingVault",
            "offset": 0,
            "slot": "211",
            "type": "t_address",
            "contract": "PancakeswapWorkerV2",
            "src": "contracts\\workers\\PancakeswapWorkerV2.sol:99"
          },
          {
            "label": "pid",
            "offset": 0,
            "slot": "212",
            "type": "t_uint256",
            "contract": "PancakeswapWorkerV2",
            "src": "contracts\\workers\\PancakeswapWorkerV2.sol:100"
          },
          {
            "label": "protocolManager",
            "offset": 0,
            "slot": "213",
            "type": "t_contract(IProtocolManager)8124",
            "contract": "PancakeswapWorkerV2",
            "src": "contracts\\workers\\PancakeswapWorkerV2.sol:101"
          },
          {
            "label": "fee",
            "offset": 0,
            "slot": "214",
            "type": "t_uint256",
            "contract": "PancakeswapWorkerV2",
            "src": "contracts\\workers\\PancakeswapWorkerV2.sol:103"
          },
          {
            "label": "feeDenom",
            "offset": 0,
            "slot": "215",
            "type": "t_uint256",
            "contract": "PancakeswapWorkerV2",
            "src": "contracts\\workers\\PancakeswapWorkerV2.sol:104"
          },
          {
            "label": "harvestThreshold",
            "offset": 0,
            "slot": "216",
            "type": "t_uint256",
            "contract": "PancakeswapWorkerV2",
            "src": "contracts\\workers\\PancakeswapWorkerV2.sol:107"
          },
          {
            "label": "harvestPath",
            "offset": 0,
            "slot": "217",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PancakeswapWorkerV2",
            "src": "contracts\\workers\\PancakeswapWorkerV2.sol:108"
          },
          {
            "label": "strategies",
            "offset": 0,
            "slot": "218",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PancakeswapWorkerV2",
            "src": "contracts\\workers\\PancakeswapWorkerV2.sol:111"
          },
          {
            "label": "approvedStrategies",
            "offset": 0,
            "slot": "219",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PancakeswapWorkerV2",
            "src": "contracts\\workers\\PancakeswapWorkerV2.sol:112"
          },
          {
            "label": "shares",
            "offset": 0,
            "slot": "220",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "PancakeswapWorkerV2",
            "src": "contracts\\workers\\PancakeswapWorkerV2.sol:115"
          },
          {
            "label": "totalShare",
            "offset": 0,
            "slot": "221",
            "type": "t_uint256",
            "contract": "PancakeswapWorkerV2",
            "src": "contracts\\workers\\PancakeswapWorkerV2.sol:116"
          },
          {
            "label": "positionIds",
            "offset": 0,
            "slot": "222",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "PancakeswapWorkerV2",
            "src": "contracts\\workers\\PancakeswapWorkerV2.sol:117"
          },
          {
            "label": "treasuryFeeBps",
            "offset": 0,
            "slot": "223",
            "type": "t_uint256",
            "contract": "PancakeswapWorkerV2",
            "src": "contracts\\workers\\PancakeswapWorkerV2.sol:118"
          },
          {
            "label": "isEnabled",
            "offset": 0,
            "slot": "224",
            "type": "t_bool",
            "contract": "PancakeswapWorkerV2",
            "src": "contracts\\workers\\PancakeswapWorkerV2.sol:119"
          },
          {
            "label": "clientFeesBps",
            "offset": 0,
            "slot": "225",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PancakeswapWorkerV2",
            "src": "contracts\\workers\\PancakeswapWorkerV2.sol:120"
          },
          {
            "label": "okHarvesters",
            "offset": 0,
            "slot": "226",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PancakeswapWorkerV2",
            "src": "contracts\\workers\\PancakeswapWorkerV2.sol:121"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IMasterChef)14765": {
            "label": "contract IMasterChef",
            "numberOfBytes": "20"
          },
          "t_contract(IPancakeFactory)2710": {
            "label": "contract IPancakeFactory",
            "numberOfBytes": "20"
          },
          "t_contract(IPancakePair)2952": {
            "label": "contract IPancakePair",
            "numberOfBytes": "20"
          },
          "t_contract(IPancakeRouterV2)15542": {
            "label": "contract IPancakeRouterV2",
            "numberOfBytes": "20"
          },
          "t_contract(IProtocolManager)8124": {
            "label": "contract IProtocolManager",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    }
  }
}

stages:
  - lint
  - test
  - security
  - deploy
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/
    - build/

eslint:
  image: node:14.17.6
  stage: lint
  script:
    - npm install
    - npm run lint
  allow_failure: true

solhint:
  image: node:14.17.6
  stage: lint
  script:
    - npm install
    - npm run solhint
  allow_failure: true

# test:
#   image: node:14.17.6
#   stage: test
#   script:
#     - npm install
#     - apt-get update && apt-get install -y gawk
#     - npm run compile
#     - npm run coverage
#   coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/
#   allow_failure: true
#   artifacts:
#     paths:
#       - coverage
#     expire_in: 10 days
#     reports:
#       cobertura: coverage/cobertura-coverage.xml

slither:
  image: python
  stage: security
  before_script:
    - apt install curl
    - curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash
    - export NVM_DIR="$HOME/.nvm" && . "$NVM_DIR/nvm.sh" --no-use
    - eval "[ -f .nvmrc ] && nvm install 14.17.6"
    - eval "[ -f .nvmrc ] && nvm use 14.17.6"
    - npm install
    - pip3 install slither-analyzer
    - pip3 install solc-select
    - solc-select install 0.6.6
    - solc-select use 0.6.6
  script:
    - slither . --print human-summary

deploy_docs:
  stage: deploy
  only:
    - develop
  # when: manual
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - ssh dev1@dev.nextrope.com "sh ~/scr/deploy-blockchain-doc.sh && exit"
  environment:
    name: develop
    url: https://dev1.nextrope.com/sc-docs
